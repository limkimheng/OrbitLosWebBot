class W extends Error {
  constructor(t, n, o) {
    super(
      typeof n == "object" ? n.message : n || t,
      {
        cause: typeof n == "object" ? n.cause : o
      }
    ), this.type = t, Object.setPrototypeOf(this, W.prototype);
  }
}
function Wn(e) {
  return e.replace(/[A-Z]/g, (t) => `_${t.toLowerCase()}`);
}
function vs(e) {
  return e.replace(/_[a-z]/g, (t) => t[1].toUpperCase());
}
const Ts = "ERR_INVALID_VALUE", $s = "ERR_UNEXPECTED_VALUE", Rs = "ERR_UNEXPECTED_TYPE", Gn = "ERR_PARSE";
function zn(e, t) {
  const n = {};
  for (const o in e) {
    const s = e[o];
    if (!s)
      continue;
    let r, a;
    typeof s == "function" ? (r = o, a = s) : [r, a] = s;
    try {
      const i = a(t(r));
      i !== void 0 && (n[o] = i);
    } catch (i) {
      throw new W(
        Gn,
        `Parser for "${o}" property failed${r === o ? "" : `. Source field: "${r}"`}`,
        i
      );
    }
  }
  return n;
}
function Qn(e) {
  let t = e;
  if (typeof t == "string")
    try {
      t = JSON.parse(t);
    } catch (n) {
      throw new W(Ts, { cause: n });
    }
  if (typeof t != "object" || !t || Array.isArray(t))
    throw new W($s);
  return t;
}
function j(e, t) {
  return (n) => {
    const o = (s) => {
      if (!(n && s === void 0))
        try {
          return t(s);
        } catch (r) {
          throw new W(Gn, {
            message: `"${e}" transformer failed to parse the value`,
            cause: r
          });
        }
    };
    return /* @__PURE__ */ Object.assign(
      o,
      {
        isValid(s) {
          try {
            return o(s), !0;
          } catch {
            return !1;
          }
        }
      }
    );
  };
}
function Le(e, t) {
  return j(t || "object", (n) => {
    const o = Qn(n);
    return zn(e, (s) => o[s]);
  });
}
function ve(e) {
  throw new W(Rs, `Unexpected value received: ${JSON.stringify(e)}`);
}
const Ps = j("boolean", (e) => {
  if (typeof e == "boolean")
    return e;
  const t = String(e);
  if (t === "1" || t === "true")
    return !0;
  if (t === "0" || t === "false")
    return !1;
  ve(e);
}), L = j("string", (e) => {
  if (typeof e == "string" || typeof e == "number")
    return e.toString();
  ve(e);
}), je = j("number", (e) => {
  if (typeof e == "number")
    return e;
  if (typeof e == "string") {
    const t = Number(e);
    if (!Number.isNaN(t))
      return t;
  }
  ve(e);
}), Mt = j("date", (e) => e instanceof Date ? e : new Date(je()(e) * 1e3));
function Jn(e, t) {
  return j(t || "searchParams", (n) => {
    typeof n != "string" && !(n instanceof URLSearchParams) && ve(n);
    const o = typeof n == "string" ? new URLSearchParams(n) : n;
    return zn(e, (s) => {
      const r = o.get(s);
      return r === null ? void 0 : r;
    });
  });
}
function ft(e) {
  for (const t in e)
    e[t] = [Wn(t), e[t]];
  return e;
}
const Os = (e) => {
  const t = je(), n = je(!0), o = L(), s = L(!0), r = Ps(!0), a = Le(ft({
    addedToAttachmentMenu: r,
    allowsWriteToPm: r,
    firstName: o,
    id: t,
    isBot: r,
    isPremium: r,
    languageCode: s,
    lastName: s,
    photoUrl: s,
    username: s
  }), "User")(!0);
  return Jn(
    ft({
      authDate: Mt(),
      canSendAfter: n,
      chat: Le(
        ft({
          id: t,
          type: o,
          title: o,
          photoUrl: s,
          username: s
        }),
        "Chat"
      )(!0),
      chatInstance: s,
      chatType: s,
      hash: o,
      queryId: s,
      receiver: a,
      startParam: s,
      signature: o,
      user: a
    }),
    "initData"
  )(e);
};
function fe(e) {
  return /^#[\da-f]{6}$/i.test(e);
}
function Bs(e) {
  return /^#[\da-f]{3}$/i.test(e);
}
function Yn(e) {
  const t = e.replace(/\s/g, "").toLowerCase();
  if (fe(t))
    return t;
  if (Bs(t)) {
    let o = "#";
    for (let s = 0; s < 3; s += 1)
      o += t[1 + s].repeat(2);
    return o;
  }
  const n = t.match(/^rgb\((\d{1,3}),(\d{1,3}),(\d{1,3})\)$/) || t.match(/^rgba\((\d{1,3}),(\d{1,3}),(\d{1,3}),\d{1,3}\)$/);
  if (!n)
    throw new Error(`Value "${e}" does not satisfy any of known RGB formats.`);
  return n.slice(1).reduce((o, s) => {
    const r = parseInt(s, 10).toString(16);
    return o + (r.length === 1 ? "0" : "") + r;
  }, "#");
}
const Ms = j("rgb", (e) => Yn(L()(e))), Ds = j(
  "themeParams",
  (e) => {
    const t = Ms(!0);
    return Object.entries(Qn(e)).reduce((n, [o, s]) => (n[vs(o)] = t(s), n), {});
  }
);
// @__NO_SIDE_EFFECTS__
function Cn(e) {
  return JSON.stringify(
    Object.fromEntries(
      Object.entries(e).map(([t, n]) => [Wn(t), n])
    )
  );
}
// @__NO_SIDE_EFFECTS__
function Tc(e) {
  const {
    initDataRaw: t,
    startParam: n,
    showSettings: o,
    botInline: s,
    fullscreen: r,
    defaultColors: a
  } = e, i = new URLSearchParams();
  return i.set("tgWebAppPlatform", e.platform), i.set("tgWebAppThemeParams", /* @__PURE__ */ Cn(e.themeParams)), i.set("tgWebAppVersion", e.version), t && i.set("tgWebAppData", t), n && i.set("tgWebAppStartParam", n), typeof o == "boolean" && i.set("tgWebAppShowSettings", o ? "1" : "0"), typeof s == "boolean" && i.set("tgWebAppBotInline", s ? "1" : "0"), typeof r == "boolean" && i.set("tgWebAppFullscreen", r ? "1" : "0"), a && i.set("tgWebAppDefaultColors", /* @__PURE__ */ Cn(a)), i.toString();
}
function Is(e, t) {
  return j("array", (n) => {
    let o;
    if (Array.isArray(n))
      o = n;
    else if (typeof n == "string")
      try {
        const s = JSON.parse(n);
        Array.isArray(s) && (o = s);
      } catch {
      }
    return o || ve(n), o.map(e);
  });
}
function Kn(e) {
  return !!e && typeof e == "object" && !Array.isArray(e);
}
function Et(...e) {
  return e.map((t) => {
    if (typeof t == "string")
      return t;
    if (Kn(t))
      return Et(Object.entries(t).map((n) => n[1] && n[0]));
    if (Array.isArray(t))
      return Et(...t);
  }).filter(Boolean).join(" ");
}
function $c(...e) {
  return e.reduce((t, n) => (Kn(n) && Object.entries(n).forEach(([o, s]) => {
    const r = Et(t[o], s);
    r && (t[o] = r);
  }), t), {});
}
class G extends Error {
  constructor(t, n, o) {
    super(
      typeof n == "object" ? n.message : n || t,
      {
        cause: typeof n == "object" ? n.cause : o
      }
    ), this.type = t, Object.setPrototypeOf(this, G.prototype);
  }
}
function Zn(e) {
  return e.replace(/[A-Z]/g, (t) => `_${t.toLowerCase()}`);
}
function Ns(e) {
  return e.replace(/_[a-z]/g, (t) => t[1].toUpperCase());
}
const ks = "ERR_INVALID_VALUE", xs = "ERR_UNEXPECTED_VALUE", Vs = "ERR_UNEXPECTED_TYPE", Xn = "ERR_PARSE";
function eo(e, t) {
  const n = {};
  for (const o in e) {
    const s = e[o];
    if (!s)
      continue;
    let r, a;
    typeof s == "function" ? (r = o, a = s) : [r, a] = s;
    try {
      const i = a(t(r));
      i !== void 0 && (n[o] = i);
    } catch (i) {
      throw new G(
        Xn,
        `Parser for "${o}" property failed${r === o ? "" : `. Source field: "${r}"`}`,
        i
      );
    }
  }
  return n;
}
function to(e) {
  let t = e;
  if (typeof t == "string")
    try {
      t = JSON.parse(t);
    } catch (n) {
      throw new G(ks, { cause: n });
    }
  if (typeof t != "object" || !t || Array.isArray(t))
    throw new G(xs);
  return t;
}
function D(e, t) {
  return (n) => {
    const o = (s) => {
      if (!(n && s === void 0))
        try {
          return t(s);
        } catch (r) {
          throw new G(Xn, {
            message: `"${e}" transformer failed to parse the value`,
            cause: r
          });
        }
    };
    return /* @__PURE__ */ Object.assign(
      o,
      {
        isValid(s) {
          try {
            return o(s), !0;
          } catch {
            return !1;
          }
        }
      }
    );
  };
}
function B(e, t) {
  return D(t || "object", (n) => {
    const o = to(n);
    return eo(e, (s) => o[s]);
  });
}
function Te(e) {
  throw new G(Vs, `Unexpected value received: ${JSON.stringify(e)}`);
}
const Ue = D("boolean", (e) => {
  if (typeof e == "boolean")
    return e;
  const t = String(e);
  if (t === "1" || t === "true")
    return !0;
  if (t === "0" || t === "false")
    return !1;
  Te(e);
}), $ = D("string", (e) => {
  if (typeof e == "string" || typeof e == "number")
    return e.toString();
  Te(e);
}), _e = D("number", (e) => {
  if (typeof e == "number")
    return e;
  if (typeof e == "string") {
    const t = Number(e);
    if (!Number.isNaN(t))
      return t;
  }
  Te(e);
}), Ls = D("date", (e) => e instanceof Date ? e : new Date(_e()(e) * 1e3));
function no(e, t) {
  return D(t || "searchParams", (n) => {
    typeof n != "string" && !(n instanceof URLSearchParams) && Te(n);
    const o = typeof n == "string" ? new URLSearchParams(n) : n;
    return eo(e, (s) => {
      const r = o.get(s);
      return r === null ? void 0 : r;
    });
  });
}
function _t(e) {
  for (const t in e)
    e[t] = [Zn(t), e[t]];
  return e;
}
const js = (e) => {
  const t = _e(), n = _e(!0), o = $(), s = $(!0), r = Ue(!0), a = B(_t({
    addedToAttachmentMenu: r,
    allowsWriteToPm: r,
    firstName: o,
    id: t,
    isBot: r,
    isPremium: r,
    languageCode: s,
    lastName: s,
    photoUrl: s,
    username: s
  }), "User")(!0);
  return no(
    _t({
      authDate: Ls(),
      canSendAfter: n,
      chat: B(
        _t({
          id: t,
          type: o,
          title: o,
          photoUrl: s,
          username: s
        }),
        "Chat"
      )(!0),
      chatInstance: s,
      chatType: s,
      hash: o,
      queryId: s,
      receiver: a,
      startParam: s,
      signature: o,
      user: a
    }),
    "initData"
  )(e);
};
function Us(e) {
  return /^#[\da-f]{6}$/i.test(e);
}
function qs(e) {
  return /^#[\da-f]{3}$/i.test(e);
}
function Hs(e) {
  const t = e.replace(/\s/g, "").toLowerCase();
  if (Us(t))
    return t;
  if (qs(t)) {
    let o = "#";
    for (let s = 0; s < 3; s += 1)
      o += t[1 + s].repeat(2);
    return o;
  }
  const n = t.match(/^rgb\((\d{1,3}),(\d{1,3}),(\d{1,3})\)$/) || t.match(/^rgba\((\d{1,3}),(\d{1,3}),(\d{1,3}),\d{1,3}\)$/);
  if (!n)
    throw new Error(`Value "${e}" does not satisfy any of known RGB formats.`);
  return n.slice(1).reduce((o, s) => {
    const r = parseInt(s, 10).toString(16);
    return o + (r.length === 1 ? "0" : "") + r;
  }, "#");
}
const Fs = D("rgb", (e) => Hs($()(e))), An = D(
  "themeParams",
  (e) => {
    const t = Fs(!0);
    return Object.entries(to(e)).reduce((n, [o, s]) => (n[Ns(o)] = t(s), n), {});
  }
);
// @__NO_SIDE_EFFECTS__
function wt(e) {
  return JSON.stringify(
    Object.fromEntries(
      Object.entries(e).map(([t, n]) => [Zn(t), n])
    )
  );
}
const Ws = (e) => {
  const t = $(), n = $(!0), o = Ue(!0);
  return no({
    botInline: ["tgWebAppBotInline", o],
    defaultColors: ["tgWebAppDefaultColors", An(!0)],
    fullscreen: ["tgWebAppFullscreen", o],
    initData: ["tgWebAppData", js(!0)],
    initDataRaw: ["tgWebAppData", n],
    platform: ["tgWebAppPlatform", t],
    showSettings: ["tgWebAppShowSettings", o],
    startParam: ["tgWebAppStartParam", n],
    themeParams: ["tgWebAppThemeParams", An()],
    version: ["tgWebAppVersion", t]
  }, "launchParams")(e);
};
// @__NO_SIDE_EFFECTS__
function Gs(e) {
  const {
    initDataRaw: t,
    startParam: n,
    showSettings: o,
    botInline: s,
    fullscreen: r,
    defaultColors: a
  } = e, i = new URLSearchParams();
  return i.set("tgWebAppPlatform", e.platform), i.set("tgWebAppThemeParams", /* @__PURE__ */ wt(e.themeParams)), i.set("tgWebAppVersion", e.version), t && i.set("tgWebAppData", t), n && i.set("tgWebAppStartParam", n), typeof o == "boolean" && i.set("tgWebAppShowSettings", o ? "1" : "0"), typeof s == "boolean" && i.set("tgWebAppBotInline", s ? "1" : "0"), typeof r == "boolean" && i.set("tgWebAppFullscreen", r ? "1" : "0"), a && i.set("tgWebAppDefaultColors", /* @__PURE__ */ wt(a)), i.toString();
}
const oo = B({
  eventType: $(),
  eventData: (e) => e
}, "miniAppsMessage"), so = D("fn", (e) => {
  if (typeof e == "function")
    return e;
  Te(e);
});
function zs(e) {
  return !!e && typeof e == "object" && !Array.isArray(e);
}
const Qs = B({
  TelegramWebviewProxy: B({ postEvent: so() })()
});
function ro(e) {
  return Qs().isValid(e);
}
function Js() {
  try {
    return window.self !== window.top;
  } catch {
    return !0;
  }
}
var Ys = Object.defineProperty, Ks = (e, t, n) => t in e ? Ys(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n, ao = (e, t, n) => Ks(e, typeof t != "symbol" ? t + "" : t, n);
let l = class io extends Error {
  constructor(t, n, o) {
    super(
      typeof n == "object" ? n.message : n || t,
      {
        cause: typeof n == "object" ? n.cause : o
      }
    ), this.type = t, Object.setPrototypeOf(this, io.prototype);
  }
};
function co(e, t, n) {
  return e.addEventListener(t, n), () => e.removeEventListener(t, n);
}
function te(...e) {
  const t = e.flat(1);
  return [
    t.push.bind(t),
    () => {
      t.forEach((n) => {
        n();
      });
    }
  ];
}
function Zs(e, t) {
  return e instanceof l && e.type === t;
}
function Dt(e) {
  return (t) => Zs(t, e);
}
const uo = "ERR_ABORTED", lo = "ERR_CANCELED", po = "ERR_TIMED_OUT";
function vn(e) {
  return new l(uo, { cause: e });
}
const Rc = Dt(po), Pc = Dt(uo), Oc = Dt(lo);
function Tn(e, t) {
  return e.reject = t.reject, e;
}
class b extends Promise {
  constructor(t, n) {
    let o, s;
    typeof t == "function" ? (o = t, s = n) : s = t;
    let r, a;
    super((i, p) => {
      s || (s = {});
      const { abortSignal: u } = s;
      if (u && u.aborted)
        return p(vn(u.reason));
      const [d, g] = te(), w = (m) => (...F) => (g(), m(...F)), x = new AbortController(), { signal: v } = x;
      a = w((m) => {
        x.abort(m), p(m);
      }), r = w(i), u && d(
        co(u, "abort", () => {
          a(vn(u.reason));
        })
      );
      const { timeout: h } = s;
      if (h) {
        const m = setTimeout(() => {
          a(new l(po, `Timeout reached: ${h}ms`));
        }, h);
        d(() => {
          clearTimeout(m);
        });
      }
      o && o(r, a, v);
    }), ao(this, "reject"), this.reject = a;
  }
  /**
   * Creates a new BetterPromise instance using executor, resolving promise when a result
   * was returned.
   * @param fn - function returning promise result.
   * @param options - additional options.
   */
  static withFn(t, n) {
    return new b((o, s, r) => {
      try {
        const a = t(r);
        return a instanceof Promise ? a.then(o, s) : o(a);
      } catch (a) {
        s(a);
      }
    }, n);
  }
  /**
   * @see Promise.resolve
   */
  static resolve(t) {
    return new b((n) => {
      n(t);
    });
  }
  /**
   * @see Promise.reject
   */
  static reject(t) {
    return new b((n, o) => {
      o(t);
    });
  }
  /**
   * Cancels the promise execution.
   */
  cancel() {
    this.reject(new l(lo));
  }
  /**
   * @see Promise.catch
   */
  catch(t) {
    return this.then(void 0, t);
  }
  /**
   * @see Promise.finally
   */
  finally(t) {
    return Tn(super.finally(t), this);
  }
  /**
   * @see Promise.then
   */
  then(t, n) {
    return Tn(super.then(t, n), this);
  }
}
function $n(e, t) {
  return e.resolve = t.resolve, e;
}
let Xs = class Oe extends b {
  constructor(t, n) {
    let o, s;
    typeof t == "function" ? (o = t, s = n) : s = t;
    let r;
    super((a, i, p) => {
      r = a, o && o(a, i, p);
    }, s), ao(this, "resolve"), this.resolve = r;
  }
  /**
   * Creates a new EnhancedPromise instance using executor, resolving promise when a result
   * was returned.
   * @param fn - function returning promise result.
   * @param options - additional options.
   */
  static withFn(t, n) {
    return new Oe(
      (o, s, r) => b.withFn(t, { abortSignal: r }).then(o, s),
      n
    );
  }
  /**
   * @see Promise.resolve
   */
  static resolve(t) {
    return new Oe((n) => {
      n(t);
    });
  }
  /**
   * @see Promise.reject
   */
  static reject(t) {
    return new Oe((n, o) => {
      o(t);
    });
  }
  /**
   * @see Promise.catch
   */
  catch(t) {
    return this.then(void 0, t);
  }
  /**
   * @see Promise.finally
   */
  finally(t) {
    return $n(super.finally(t), this);
  }
  /**
   * @see Promise.then
   */
  then(t, n) {
    return $n(super.then(t, n), this);
  }
};
function er(e, t) {
  return new b((n) => {
    setTimeout(n, e);
  }, { abortSignal: t });
}
function fo(e) {
  return `tapps/${e}`;
}
function R(e, t) {
  sessionStorage.setItem(fo(e), JSON.stringify(t));
}
function P(e) {
  const t = sessionStorage.getItem(fo(e));
  try {
    return t ? JSON.parse(t) : void 0;
  } catch {
  }
}
function It(e) {
  return e.replace(/[A-Z]/g, (t) => `-${t.toLowerCase()}`);
}
// @__NO_SIDE_EFFECTS__
function tr(e, t) {
  t || (t = {});
  const {
    textColor: n,
    bgColor: o,
    shouldLog: s = !0
  } = t;
  function r(a, ...i) {
    if (!s || typeof s == "function" && !s())
      return;
    const p = "font-weight:bold;padding:0 5px;border-radius:5px";
    console[a](
      `%c${Intl.DateTimeFormat("en-GB", {
        hour: "2-digit",
        minute: "2-digit",
        second: "2-digit",
        fractionalSecondDigits: 3,
        timeZone: "UTC"
      }).format(/* @__PURE__ */ new Date())}%c / %c${e}`,
      `${p};background-color: lightblue;color:black`,
      "",
      `${p};${n ? `color:${n};` : ""}${o ? `background-color:${o}` : ""}`,
      ...i
    );
  }
  return [
    function(...a) {
      r("log", ...a);
    },
    function(...a) {
      r("error", ...a);
    }
  ];
}
function Nt(e, t) {
  document.documentElement.style.setProperty(e, t);
}
function kt(e) {
  document.documentElement.style.removeProperty(e);
}
function nr(e, t) {
  t();
}
// @__NO_SIDE_EFFECTS__
function ne(e, t) {
  t || (t = {});
  const n = t.equals || Object.is;
  let o = [], s = e;
  const r = (u) => {
    if (!n(s, u)) {
      const d = s;
      s = u, nr(p, () => {
        [...o].forEach(([g, w]) => {
          g(u, d), w && i(g, !0);
        });
      });
    }
  };
  function a(u) {
    const d = typeof u != "object" ? { once: u } : u;
    return {
      once: d.once || !1,
      signal: d.signal || !1
    };
  }
  const i = (u, d) => {
    const g = a(d), w = o.findIndex(([x, v]) => x === u && v.once === g.once && v.signal === g.signal);
    w >= 0 && o.splice(w, 1);
  }, p = Object.assign(
    function() {
      return or(p), s;
    },
    {
      destroy() {
        o = [];
      },
      set: r,
      reset() {
        r(e);
      },
      sub(u, d) {
        return o.push([u, a(d)]), () => i(u, d);
      },
      unsub: i,
      unsubAll() {
        o = o.filter((u) => u[1].signal);
      }
    }
  );
  return p;
}
const dt = [];
function or(e) {
  dt.length && dt[dt.length - 1].add(e);
}
const sr = /* @__PURE__ */ ne(!1), [xt, rr] = /* @__PURE__ */ tr("Bridge", {
  bgColor: "#9147ff",
  textColor: "white",
  shouldLog: sr
}), ar = {
  clipboard_text_received: B({
    req_id: $(),
    data: (e) => e === null ? e : $(!0)(e)
  }, "clipboard_text_received"),
  custom_method_invoked: B({
    req_id: $(),
    result: (e) => e,
    error: $(!0)
  }, "custom_method_invoked"),
  popup_closed: D("popup_closed", (e) => e ? B({
    button_id: (t) => t == null ? void 0 : $()(t)
  })()(e) : {}),
  viewport_changed: B({
    height: _e(),
    width: (e) => e == null ? window.innerWidth : _e()(e),
    is_state_stable: Ue(),
    is_expanded: Ue()
  }, "viewport_changed")
};
function ir(e) {
  const t = window, [, n] = te(
    // Add listener, which handles events sent from the Telegram web application and also events
    // generated by the local emitEvent function.
    co(t, "message", (o) => {
      if (o.source !== t.parent)
        return;
      let s;
      try {
        s = oo()(o.data);
      } catch {
        return;
      }
      const { eventType: r, eventData: a } = s, i = ar[r];
      try {
        const p = i ? i()(a) : a;
        xt("Event received:", p ? { eventType: r, eventData: p } : { eventType: r }), e([r, p]);
      } catch (p) {
        rr(
          [
            `An error occurred processing the "${r}" event from the Telegram application.`,
            "Please, file an issue here:",
            "https://github.com/Telegram-Mini-Apps/telegram-apps/issues/new/choose"
          ].join(`
`),
          s,
          p
        );
      }
    })
  );
  return n;
}
const St = /* @__PURE__ */ ne(), Rn = /* @__PURE__ */ ne();
function _o() {
  return Rn() || Rn.set(ir(St.set)), St;
}
const mt = /* @__PURE__ */ ne({});
function mo(e) {
  let t = mt()[e];
  return t || (t = /* @__PURE__ */ ne(void 0, {
    equals() {
      return !1;
    }
  }), _o().sub((n) => {
    n && n[0] === e && t.set(n[1]);
  }), mt.set({ ...mt(), [e]: t })), t;
}
function S(e, t, n) {
  return mo(e).sub(t, n);
}
const cr = "ERR_METHOD_UNSUPPORTED", ur = "ERR_RETRIEVE_LP_FAILED", lr = "ERR_METHOD_PARAMETER_UNSUPPORTED", bo = "ERR_UNKNOWN_ENV", pr = "ERR_INVOKE_CUSTOM_METHOD_RESPONSE", fr = /* @__PURE__ */ ne("https://web.telegram.org");
function Vt(e, t) {
  xt("Posting event:", t ? { eventType: e, eventData: t } : { eventType: e });
  const n = window;
  if (ro(n)) {
    n.TelegramWebviewProxy.postEvent(e, JSON.stringify(t));
    return;
  }
  const o = JSON.stringify({ eventType: e, eventData: t });
  if (Js())
    return n.parent.postMessage(o, fr());
  const { external: s } = n;
  if (B({ notify: so() })().isValid(s)) {
    s.notify(o);
    return;
  }
  throw new l(bo);
}
function Lt(e, t, n) {
  n || (n = {});
  const { capture: o } = n, [s, r] = te();
  return new b((a) => {
    (Array.isArray(t) ? t : [t]).forEach((i) => {
      s(
        S(i, (p) => {
          (!o || (Array.isArray(t) ? o({
            event: i,
            payload: p
          }) : o(p))) && a(p);
        })
      );
    }), (n.postEvent || Vt)(e, n.params);
  }, n).finally(r);
}
function jt(e) {
  return Ws()(e);
}
function ho(e) {
  return jt(
    e.replace(/^[^?#]*[?#]/, "").replace(/[?#]/g, "&")
  );
}
function _r() {
  return ho(window.location.href);
}
function dr() {
  const e = performance.getEntriesByType("navigation")[0];
  if (!e)
    throw new Error("Unable to get first navigation entry.");
  return ho(e.name);
}
const mr = "launchParams";
function br() {
  return jt(P(mr) || "");
}
function go(e) {
  R("launchParams", /* @__PURE__ */ Gs(e));
}
function Eo(e) {
  return e instanceof Error ? e.message + (e.cause ? `
  ${Eo(e.cause)}` : "") : JSON.stringify(e);
}
function oe() {
  const e = [];
  for (const t of [
    // Try to retrieve launch parameters from the current location. This method can return
    // nothing in case, location was changed, and then the page was reloaded.
    _r,
    // Then, try using the lower level API - window.performance.
    dr,
    // Finally, try to extract launch parameters from the session storage.
    br
  ])
    try {
      const n = t();
      return go(n), n;
    } catch (n) {
      e.push(n);
    }
  throw new l(ur, [
    "Unable to retrieve launch parameters from any known source. Perhaps, you have opened your app outside Telegram?",
    "📖 Refer to docs for more information:",
    "https://docs.telegram-mini-apps.com/packages/telegram-apps-sdk/environment",
    "Collected errors:",
    ...e.map((t) => `— ${Eo(t)}`)
  ].join(`
`));
}
function Pn(e) {
  if (e === "simple")
    try {
      return oe(), !0;
    } catch {
      return !1;
    }
  return b.withFn(async () => {
    if (ro(window))
      return !0;
    try {
      return await Lt("web_app_request_theme", "theme_changed", { timeout: 100 }), !0;
    } catch {
      return !1;
    }
  }, e);
}
function yt(e, t) {
  window.dispatchEvent(new MessageEvent("message", {
    data: JSON.stringify({ eventType: e, eventData: t }),
    // We specify window.parent to imitate the case, the parent iframe sent us this event.
    source: window.parent
  }));
}
function hr(e, t) {
  if (typeof t == "string")
    try {
      const { eventType: n } = oo()(t);
      n === "web_app_request_theme" && yt("theme_changed", {
        theme_params: JSON.parse(/* @__PURE__ */ wt(e))
      }), n === "web_app_request_viewport" && yt("viewport_changed", {
        width: window.innerWidth,
        height: window.innerHeight,
        is_state_stable: !0,
        is_expanded: !0
      });
    } catch {
    }
}
function Bc(e) {
  var t;
  const n = typeof e == "string" ? jt(e) : e;
  go(n);
  const o = (t = window.TelegramWebviewProxy) == null ? void 0 : t.postEvent;
  window.TelegramWebviewProxy = {
    postEvent(s, r) {
      hr(n.themeParams, JSON.stringify({ eventType: s, eventData: r })), o == null || o(s, r);
    }
  }, xt("Environment was mocked by the mockTelegramEnv function");
}
function gr() {
  [
    ["TelegramGameProxy_receiveEvent"],
    // Windows Phone.
    ["TelegramGameProxy", "receiveEvent"],
    // Desktop.
    ["Telegram", "WebView", "receiveEvent"]
    // Android and iOS.
  ].forEach((e) => {
    let t = window;
    e.forEach((n, o, s) => {
      if (o === s.length - 1) {
        t[n] = yt;
        return;
      }
      n in t || (t[n] = {}), t = t[n];
    });
  });
}
function Er() {
  ["TelegramGameProxy_receiveEvent", "TelegramGameProxy", "Telegram"].forEach((e) => {
    delete window[e];
  });
}
function M(e, t, n) {
  mo(e).unsub(t, n);
}
function Mc(e, t) {
  return _o().sub(e, t);
}
function Dc(e, t) {
  St.unsub(e, t);
}
function wo(e) {
  return ({ req_id: t }) => t === e;
}
function On(e) {
  return e.split(".").map(Number);
}
function wr(e, t) {
  const n = On(e), o = On(t), s = Math.max(n.length, o.length);
  for (let r = 0; r < s; r += 1) {
    const a = n[r] || 0, i = o[r] || 0;
    if (a !== i)
      return a > i ? 1 : -1;
  }
  return 0;
}
function E(e, t) {
  return wr(e, t) <= 0;
}
function z(e, t, n) {
  if (typeof n == "string") {
    if (e === "web_app_open_link") {
      if (t === "try_instant_view")
        return E("6.4", n);
      if (t === "try_browser")
        return E("7.6", n);
    }
    if (e === "web_app_set_header_color" && t === "color")
      return E("6.9", n);
    if (e === "web_app_close" && t === "return_back")
      return E("7.6", n);
    if (e === "web_app_setup_main_button" && t === "has_shine_effect")
      return E("7.10", n);
  }
  switch (e) {
    case "web_app_open_tg_link":
    case "web_app_open_invoice":
    case "web_app_setup_back_button":
    case "web_app_set_background_color":
    case "web_app_set_header_color":
    case "web_app_trigger_haptic_feedback":
      return E("6.1", t);
    case "web_app_open_popup":
      return E("6.2", t);
    case "web_app_close_scan_qr_popup":
    case "web_app_open_scan_qr_popup":
    case "web_app_read_text_from_clipboard":
      return E("6.4", t);
    case "web_app_switch_inline_query":
      return E("6.7", t);
    case "web_app_invoke_custom_method":
    case "web_app_request_write_access":
    case "web_app_request_phone":
      return E("6.9", t);
    case "web_app_setup_settings_button":
      return E("6.10", t);
    case "web_app_biometry_get_info":
    case "web_app_biometry_open_settings":
    case "web_app_biometry_request_access":
    case "web_app_biometry_request_auth":
    case "web_app_biometry_update_token":
      return E("7.2", t);
    case "web_app_setup_swipe_behavior":
      return E("7.7", t);
    case "web_app_share_to_story":
      return E("7.8", t);
    case "web_app_setup_secondary_button":
    case "web_app_set_bottom_bar_color":
      return E("7.10", t);
    case "web_app_request_safe_area":
    case "web_app_request_content_safe_area":
    case "web_app_request_fullscreen":
    case "web_app_exit_fullscreen":
    case "web_app_set_emoji_status":
    case "web_app_request_emoji_status_access":
      return E("8.0", t);
    default:
      return [
        "iframe_ready",
        "iframe_will_reload",
        "web_app_close",
        "web_app_data_send",
        "web_app_expand",
        "web_app_open_link",
        "web_app_ready",
        "web_app_request_theme",
        "web_app_request_viewport",
        "web_app_setup_main_button",
        "web_app_setup_closing_behavior"
      ].includes(e);
  }
}
function Sr(e, t) {
  t || (t = "strict");
  const n = typeof t == "function" ? t : (o) => {
    const { method: s, version: r } = o;
    let a, i;
    if ("param" in o ? (a = `Parameter "${o.param}" of "${s}" method is unsupported in Mini Apps version ${r}`, i = lr) : (a = `Method "${s}" is unsupported in Mini Apps version ${r}`, i = cr), t === "strict")
      throw new l(i, a);
    return console.warn(a);
  };
  return (o, s) => z(o, e) ? zs(s) && o === "web_app_set_header_color" && "color" in s && !z(o, "color", e) ? n({ version: e, method: o, param: "color" }) : Vt(o, s) : n({ version: e, method: o });
}
function yr(e, t, n, o) {
  return Lt("web_app_invoke_custom_method", "custom_method_invoked", {
    ...o || {},
    params: { method: e, params: t, req_id: n },
    capture: wo(n)
  }).then(({ result: s, error: r }) => {
    if (r)
      throw new l(pr, r);
    return s;
  });
}
function Cr() {
  return performance.getEntriesByType("navigation")[0];
}
function I() {
  const e = Cr();
  return !!e && e.type === "reload";
}
let Z;
function Ar(e, t) {
  Z && Z.set(e, t) || t();
}
function Ct(e) {
  if (Z)
    return e();
  Z = /* @__PURE__ */ new Map();
  try {
    e();
  } finally {
    Z.forEach((t) => t()), Z = void 0;
  }
}
// @__NO_SIDE_EFFECTS__
function c(e, t) {
  t || (t = {});
  const n = t.equals || Object.is;
  let o = [], s = e;
  const r = (u) => {
    if (!n(s, u)) {
      const d = s;
      s = u, Ar(p, () => {
        [...o].forEach(([g, w]) => {
          g(u, d), w && i(g, !0);
        });
      });
    }
  };
  function a(u) {
    const d = typeof u != "object" ? { once: u } : u;
    return {
      once: d.once || !1,
      signal: d.signal || !1
    };
  }
  const i = (u, d) => {
    const g = a(d), w = o.findIndex(([x, v]) => x === u && v.once === g.once && v.signal === g.signal);
    w >= 0 && o.splice(w, 1);
  }, p = Object.assign(
    function() {
      return vr(p), s;
    },
    {
      destroy() {
        o = [];
      },
      set: r,
      reset() {
        r(e);
      },
      sub(u, d) {
        return o.push([u, a(d)]), () => i(u, d);
      },
      unsub: i,
      unsubAll() {
        o = o.filter((u) => u[1].signal);
      }
    }
  );
  return p;
}
const ce = [];
function vr(e) {
  ce.length && ce[ce.length - 1].add(e);
}
// @__NO_SIDE_EFFECTS__
function f(e, t) {
  let n = /* @__PURE__ */ new Set(), o;
  function s() {
    return o || (o = /* @__PURE__ */ c(a(), t));
  }
  function r() {
    s().set(a());
  }
  function a() {
    n.forEach((u) => {
      u.unsub(r, { signal: !0 });
    });
    const i = /* @__PURE__ */ new Set();
    let p;
    ce.push(i);
    try {
      p = e();
    } finally {
      ce.pop();
    }
    return i.forEach((u) => {
      u.sub(r, { signal: !0 });
    }), n = i, p;
  }
  return Object.assign(function() {
    return s()();
  }, {
    destroy() {
      s().destroy();
    },
    sub(...i) {
      return s().sub(...i);
    },
    unsub(...i) {
      s().unsub(...i);
    },
    unsubAll(...i) {
      s().unsubAll(...i);
    }
  });
}
const Tr = /* @__PURE__ */ c(/* @__PURE__ */ (() => {
  let e = 0;
  return () => (e += 1).toString();
})()), So = /* @__PURE__ */ c(Vt), V = /* @__PURE__ */ c("0.0");
function $r(e) {
  e || (e = {});
  const { postEvent: t } = e, n = e.version || oe().version;
  V.set(n), So.set(
    typeof t == "function" ? t : Sr(n)
  );
}
function yo() {
  return Tr()();
}
function se(e, t, n) {
  return yr(e, t, yo(), {
    ...n || {},
    postEvent: _
  });
}
const y = (e, t, n) => (n || (n = {}), n.postEvent || (n.postEvent = _), Lt(e, t, n)), _ = (e, t) => So()(e, t);
function N(e) {
  return /* @__PURE__ */ f(() => z(e, V()));
}
const ie = "ERR_POPUP_INVALID_PARAMS", Ut = "ERR_INVALID_URL", Rr = "ERR_INVALID_SLUG", Pr = "ERR_DATA_INVALID_SIZE", Or = "ERR_ACCESS_DENIED", Q = "ERR_ALREADY_REQUESTING", qt = "ERR_ALREADY_OPENED", Br = "ERR_ALREADY_MOUNTING", Mr = "ERR_VARS_ALREADY_BOUND", Dr = "ERR_NOT_AVAILABLE", Ir = "ERR_NOT_INITIALIZED", Bn = "ERR_NOT_SUPPORTED", Nr = "ERR_NOT_MOUNTED", kr = "ERR_FULLSCREEN_FAILED", xr = "ERR_EMOJI_STATUS_SET_FAILED";
function Mn() {
  return typeof window > "u";
}
// @__NO_SIDE_EFFECTS__
function A(e, t, { isSupported: n, isMounted: o, component: s, supports: r } = {}) {
  const a = `${s ? `${s}.` : ""}${e}()`;
  n = n ? Array.isArray(n) || typeof n == "object" && "any" in n ? n : [n] : void 0;
  function i(h) {
    if (r) {
      const m = r[h];
      return z(m[0], m[1], V());
    }
    return !0;
  }
  const p = () => {
    if (!n)
      return;
    const h = `it is unsupported in Mini Apps version ${V()}`;
    function m(T) {
      return typeof T == "string" ? z(T, V()) ? void 0 : h : T.fn() ? void 0 : T.error;
    }
    if (Array.isArray(n)) {
      for (const T of n) {
        const yn = m(T);
        if (yn)
          return yn;
      }
      return;
    }
    let F;
    for (const T of n.any)
      if (F = m(T), !F)
        return;
    return h;
  }, u = (...h) => {
    if (r) {
      for (const m in r)
        if (r[m][2](...h) && !i(m))
          return `option ${m} is not supported in Mini Apps version ${V()}`;
    }
  }, d = /* @__PURE__ */ f(() => !p()), g = /* @__PURE__ */ f(() => V() !== "0.0"), w = /* @__PURE__ */ f(() => !o || o()), x = /* @__PURE__ */ f(
    () => Pn("simple") && !Mn() && g() && d() && w()
  );
  let v;
  if (r) {
    v = {};
    for (const h in r)
      v[h] = /* @__PURE__ */ f(() => i(h));
  }
  return Object.assign(
    (...h) => {
      const m = `Unable to call the ${a} ${s ? "method" : "function"}:`;
      if (Mn() || !Pn("simple"))
        throw new l(
          bo,
          `${m} it can't be called outside Mini Apps`
        );
      if (!g())
        throw new l(
          Ir,
          `${m} the SDK was not initialized. Use the SDK init() function`
        );
      const F = p();
      if (F)
        throw new l(Bn, `${m} ${F}`);
      const T = u(...h);
      if (T)
        throw new l(Bn, `${m} ${T}`);
      if (!w())
        throw new l(
          Nr,
          `${m} the component is not mounted. Use the ${s}.mount() method`
        );
      return t(...h);
    },
    t,
    {
      isAvailable: x,
      ifAvailable(...h) {
        return x() ? t(...h) : void 0;
      }
    },
    n ? {
      isSupported: d
    } : {},
    v ? {
      supports: v
    } : {}
  );
}
function He(e, t) {
  return t || (t = {}), (n, o, s, r) => /* @__PURE__ */ A(n, o, {
    ...t,
    isSupported: s || t.isSupported,
    supports: r,
    component: e
  });
}
function J(e, t, n) {
  return He(e, { isSupported: n, isMounted: t });
}
function O(e, t) {
  return He(e, { isSupported: t });
}
const Fe = "web_app_setup_back_button", Co = "back_button_pressed", We = "backButton", At = /* @__PURE__ */ c(!1), de = /* @__PURE__ */ c(!1), Vr = N(Fe), Ao = J(We, de, Fe), Ht = O(We, Fe), Lr = Ao("hide", () => {
  Ft(!1);
}), jr = Ht("mount", () => {
  de() || (Ft(I() && P(We) || !1), de.set(!0));
});
function Ft(e) {
  e !== At() && (_(Fe, { is_visible: e }), R(We, e), At.set(e));
}
const Ur = Ht(
  "onClick",
  (e) => S(Co, e)
), qr = Ht(
  "offClick",
  (e) => {
    M(Co, e);
  }
), Hr = Ao("show", () => {
  Ft(!0);
});
function Fr() {
  de.set(!1);
}
const Ic = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  hide: Lr,
  isMounted: de,
  isSupported: Vr,
  isVisible: At,
  mount: jr,
  offClick: qr,
  onClick: Ur,
  show: Hr,
  unmount: Fr
}, Symbol.toStringTag, { value: "Module" }));
// @__NO_SIDE_EFFECTS__
function Ge(e, t, n, o, s) {
  const r = s === void 0 || s ? b : Promise;
  return Object.assign((...a) => r.resolve().then(async () => {
    if (n()) {
      const p = t();
      throw o.set(p), p;
    }
    Ct(() => {
      n.set(
        r.resolve(e(...a))
      ), o.set(void 0);
    });
    let i;
    try {
      i = [!0, await n()];
    } catch (p) {
      i = [!1, p];
    }
    if (Ct(() => {
      n.set(void 0), o.set(i[0] ? void 0 : i[1]);
    }), !i[0])
      throw i[1];
    return i[1];
  }), e);
}
// @__NO_SIDE_EFFECTS__
function vo(e, t, n, o, s, r) {
  const a = /* @__PURE__ */ Ge(
    t,
    () => new l(
      Br,
      `The ${e} component is already mounting`
    ),
    s,
    r
  );
  return (i) => b.resolve().then(async () => {
    if (!o()) {
      const p = await a(i);
      Ct(() => {
        o.set(!0), n(p);
      });
    }
  });
}
const U = He, ze = /* @__PURE__ */ c({ available: !1 }), Be = /* @__PURE__ */ c(!1), Me = /* @__PURE__ */ c(!1), Qe = /* @__PURE__ */ c(!1), Wr = /* @__PURE__ */ f(() => !!Wt()), To = /* @__PURE__ */ c(), Wt = /* @__PURE__ */ c(), Gr = /* @__PURE__ */ f(() => {
  const e = ze();
  return e && e.available;
});
function Gt(e) {
  return e.available ? {
    available: !0,
    tokenSaved: e.token_saved,
    deviceId: e.device_id,
    accessRequested: e.access_requested,
    type: e.type,
    accessGranted: e.access_granted
  } : {
    available: !1
  };
}
const Dn = "web_app_biometry_get_info", zr = /* @__PURE__ */ A(
  "requestBiometry",
  (e) => y(Dn, "biometry_info_received", e).then(Gt),
  {
    isSupported: Dn
  }
), Je = "web_app_biometry_request_auth", Qr = "web_app_biometry_request_access", Jr = "web_app_biometry_open_settings", Yr = "web_app_biometry_update_token", zt = "biometry_info_received", ee = "biometry", Kr = N(Je), Zr = U(ee), Xr = O(ee, Je), Qt = J(ee, Qe, Je);
function $o() {
  throw new l(Dr, "Biometry is not available");
}
const ea = Qt(
  "authenticate",
  (e) => b.withFn(async (t) => {
    if (Be())
      throw new l(Q, "Authentication is already in progress");
    const n = ze();
    (!n || !n.available) && $o(), Be.set(!0);
    try {
      const o = await y(
        Je,
        "biometry_auth_requested",
        {
          abortSignal: t,
          params: {
            reason: ((e || {}).reason || "").trim()
          }
        }
      ), { token: s } = o;
      return typeof s == "string" && Ye({ ...n, token: s }), o;
    } finally {
      Be.set(!1);
    }
  }, e)
), ta = Xr("openSettings", () => {
  _(Jr);
}), na = Qt(
  "requestAccess",
  (e) => b.withFn(async (t) => {
    if (Me())
      throw new l(Q, "Access request is already in progress");
    Me.set(!0);
    try {
      const n = await y(Qr, zt, {
        abortSignal: t,
        params: { reason: (e || {}).reason || "" }
      }).then(Gt);
      return n.available || $o(), Ye(n), n.accessGranted;
    } finally {
      Me.set(!1);
    }
  }, e)
), oa = Zr("mount", /* @__PURE__ */ vo(
  ee,
  (e) => {
    const t = I() && P(ee);
    return t || zr(e);
  },
  (e) => {
    S(zt, Ro), Ye(e);
  },
  Qe,
  Wt,
  To
)), Ro = (e) => {
  Ye(Gt(e));
};
function Ye(e) {
  ze.set(e), R(ee, e);
}
function sa() {
  M(zt, Ro), Qe.set(!1);
}
const ra = Qt(
  "updateToken",
  (e) => (e || (e = {}), y(Yr, "biometry_token_updated", {
    ...e,
    params: {
      token: e.token || "",
      reason: e.reason
    }
  }).then((t) => t.status))
), Nc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  authenticate: ea,
  isAuthenticating: Be,
  isAvailable: Gr,
  isMounted: Qe,
  isMounting: Wr,
  isRequestingAccess: Me,
  isSupported: Kr,
  mount: oa,
  mountError: To,
  mountPromise: Wt,
  openSettings: ta,
  requestAccess: na,
  state: ze,
  unmount: sa,
  updateToken: ra
}, Symbol.toStringTag, { value: "Module" }));
function Ke(e, t) {
  return He(e, { isMounted: t });
}
const Ze = "closingBehavior", vt = /* @__PURE__ */ c(!1), me = /* @__PURE__ */ c(!1), Po = Ke(Ze, me), aa = U(Ze), ia = Po("disableConfirmation", () => {
  Jt(!1);
}), ca = Po("enableConfirmation", () => {
  Jt(!0);
}), ua = aa("mount", () => {
  me() || (Jt(
    I() && P(Ze) || !1
  ), me.set(!0));
});
function Jt(e) {
  e !== vt() && (_("web_app_setup_closing_behavior", { need_confirmation: e }), R(Ze, e), vt.set(e));
}
function la() {
  me.set(!1);
}
const kc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  disableConfirmation: ia,
  enableConfirmation: ca,
  isConfirmationEnabled: vt,
  isMounted: me,
  mount: ua,
  unmount: la
}, Symbol.toStringTag, { value: "Module" })), Oo = "web_app_invoke_custom_method", Xe = O("cloudStorage", Oo), pa = N(Oo), fa = Xe("deleteItem", (e, t) => {
  const n = Array.isArray(e) ? e : [e];
  return n.length ? se("deleteStorageValues", { keys: n }, t).then() : b.resolve();
});
function _a(e, t) {
  const n = Array.isArray(e) ? e : [e];
  return n.length ? se("getStorageValues", { keys: n }, t).then((o) => {
    const s = Le(
      Object.fromEntries(n.map((r) => [r, L()]))
    )()(o);
    return Array.isArray(e) ? s : s[e];
  }) : b.resolve(typeof e == "string" ? "" : {});
}
const da = Xe("getItem", _a), ma = Xe("getKeys", (e) => se("getStorageKeys", {}, e).then(Is(L())())), ba = Xe("setItem", (e, t, n) => se("saveStorageValue", {
  key: e,
  value: t
}, n).then()), xc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  deleteItem: fa,
  getItem: da,
  getKeys: ma,
  isSupported: pa,
  setItem: ba
}, Symbol.toStringTag, { value: "Module" })), $e = "web_app_trigger_haptic_feedback", Yt = O("hapticFeedback", $e), ha = N($e), ga = Yt(
  "impactOccurred",
  (e) => {
    _($e, {
      type: "impact",
      impact_style: e
    });
  }
), Ea = Yt(
  "notificationOccurred",
  (e) => {
    _($e, {
      type: "notification",
      notification_type: e
    });
  }
), wa = Yt(
  "selectionChanged",
  () => {
    _($e, { type: "selection_change" });
  }
), Vc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  impactOccurred: ga,
  isSupported: ha,
  notificationOccurred: Ea,
  selectionChanged: wa
}, Symbol.toStringTag, { value: "Module" })), Kt = /* @__PURE__ */ c(void 0);
function k(e) {
  return /* @__PURE__ */ f(() => {
    const t = Kt();
    return t ? t[e] : void 0;
  });
}
const Bo = k("authDate"), Mo = k("canSendAfter"), Sa = /* @__PURE__ */ f(() => {
  const e = Bo(), t = Mo();
  return t && e ? new Date(e.getTime() + t * 1e3) : void 0;
}), ya = k("chat"), Ca = k("chatType"), Aa = k("chatInstance"), va = k("hash"), Ta = k("queryId"), Do = /* @__PURE__ */ c(), $a = k("receiver");
function Ra() {
  const e = oe();
  Kt.set(e.initData), Do.set(e.initDataRaw);
}
const Pa = k("startParam"), Oa = k("user"), Lc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  authDate: Bo,
  canSendAfter: Mo,
  canSendAfterDate: Sa,
  chat: ya,
  chatInstance: Aa,
  chatType: Ca,
  hash: va,
  queryId: Ta,
  raw: Do,
  receiver: $a,
  restore: Ra,
  startParam: Pa,
  state: Kt,
  user: Oa
}, Symbol.toStringTag, { value: "Module" }));
function jc(e) {
  return Os()(e);
}
const Zt = "web_app_open_invoice", Ba = O("invoice", Zt), De = /* @__PURE__ */ c(!1), Ma = N(Zt);
async function Io(e, t, n) {
  if (De())
    throw new l(qt, "An invoice is already opened");
  let o;
  if (t === "url") {
    const { hostname: s, pathname: r } = new URL(e, window.location.href);
    if (s !== "t.me")
      throw new l(Ut, `Link has unexpected hostname: ${s}`);
    const a = r.match(/^\/(\$|invoice\/)([A-Za-z0-9\-_=]+)$/);
    if (!a)
      throw new l(
        Rr,
        'Expected to receive a link with a pathname in format "/invoice/{slug}" or "/${slug}"'
      );
    [, , o] = a;
  } else
    o = e, n = t;
  return De.set(!0), y(Zt, "invoice_closed", {
    ...n,
    params: { slug: o },
    capture: (s) => o === s.slug
  }).then((s) => s.status).finally(() => {
    De.set(!1);
  });
}
const Da = Ba("open", Io), Uc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  _open: Io,
  isOpened: De,
  isSupported: Ma,
  open: Da
}, Symbol.toStringTag, { value: "Module" }));
function No(e) {
  return Object.fromEntries(
    Object.entries(e).filter((t) => t[1] !== void 0)
  );
}
function ko(e) {
  const t = Yn(e);
  return Math.sqrt(
    [0.299, 0.587, 0.114].reduce((n, o, s) => {
      const r = parseInt(t.slice(1 + s * 2, 1 + (s + 1) * 2), 16);
      return n + r * r * o;
    }, 0)
  ) < 120;
}
const be = /* @__PURE__ */ c(!1), Ie = /* @__PURE__ */ c(!1), q = /* @__PURE__ */ c({});
function C(e) {
  return /* @__PURE__ */ f(() => q()[e]);
}
const Ia = C("accentTextColor"), Xt = C("bgColor"), en = C("buttonColor"), xo = C("buttonTextColor"), Vo = C("bottomBarBgColor"), Na = C("destructiveTextColor"), ka = C("headerBgColor"), xa = C("hintColor"), Va = /* @__PURE__ */ f(() => {
  const { bgColor: e } = q();
  return !e || ko(e);
}), La = C("linkColor"), qe = C("secondaryBgColor"), ja = C("sectionBgColor"), Ua = C("sectionHeaderTextColor"), qa = C("sectionSeparatorColor"), Ha = C("subtitleTextColor"), Fa = C("textColor");
function Y(e) {
  return /* @__PURE__ */ f(() => tn()[e]);
}
const ue = /* @__PURE__ */ c({
  hasShineEffect: !1,
  isEnabled: !0,
  isLoaderVisible: !1,
  isVisible: !1,
  text: "Continue"
}), tn = /* @__PURE__ */ f(() => {
  const e = ue();
  return {
    ...e,
    backgroundColor: e.backgroundColor || en() || "#2481cc",
    textColor: e.textColor || xo() || "#ffffff"
  };
}), he = /* @__PURE__ */ c(!1), Wa = Y("backgroundColor"), Ga = Y("hasShineEffect"), za = Y("isEnabled"), Qa = Y("isLoaderVisible"), Ja = Y("isVisible"), Ya = Y("text"), Ka = Y("textColor"), Za = "web_app_setup_main_button", Lo = "main_button_pressed", et = "mainButton", nn = U(et), Xa = Ke(et, he), ei = nn("mount", () => {
  if (!he()) {
    const e = I() && P(et);
    e && ue.set(e), he.set(!0);
  }
}), ti = nn(
  "onClick",
  (e) => S(Lo, e)
), ni = nn(
  "offClick",
  (e) => {
    M(Lo, e);
  }
), oi = Xa(
  "setParams",
  (e) => {
    ue.set({ ...ue(), ...No(e) }), R(et, ue());
    const t = tn();
    t.text && _(Za, {
      color: t.backgroundColor,
      has_shine_effect: t.hasShineEffect,
      is_active: t.isEnabled,
      is_progress_visible: t.isLoaderVisible,
      is_visible: t.isVisible,
      text: t.text,
      text_color: t.textColor
    });
  }
);
function si() {
  he.set(!1);
}
const qc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  backgroundColor: Wa,
  hasShineEffect: Ga,
  isEnabled: za,
  isLoaderVisible: Qa,
  isMounted: he,
  isVisible: Ja,
  mount: ei,
  offClick: ni,
  onClick: ti,
  setParams: oi,
  state: tn,
  text: Ya,
  textColor: Ka,
  unmount: si
}, Symbol.toStringTag, { value: "Module" }));
function on() {
  throw new l(
    Mr,
    "CSS variables are already bound"
  );
}
function ri(e) {
  return Ds()(e);
}
const tt = "themeParams", jo = "theme_changed", ai = U(tt), ii = Ke(tt, be), ci = ii(
  "bindCssVars",
  (e) => {
    Ie() && on(), e || (e = (o) => `--tg-theme-${It(o)}`);
    function t(o) {
      Object.entries(q()).forEach(([s, r]) => {
        r && o(s, r);
      });
    }
    function n() {
      t((o, s) => {
        Nt(e(o), s);
      });
    }
    return n(), q.sub(n), Ie.set(!0), () => {
      t(kt), q.unsub(n), Ie.set(!1);
    };
  }
), Uo = ai("mount", () => {
  be() || (S(jo, qo), q.set(
    I() && P(tt) || oe().themeParams
  ), be.set(!0));
}), qo = (e) => {
  const t = ri(e.theme_params);
  q.set(t), R(tt, t);
};
function ui() {
  M(jo, qo), be.set(!1);
}
// @__NO_SIDE_EFFECTS__
function Ho(e) {
  return /* @__PURE__ */ f(() => {
    const t = e();
    return fe(t) ? t : t === "bg_color" ? Xt() : qe();
  });
}
const ge = /* @__PURE__ */ c("bg_color"), sn = /* @__PURE__ */ Ho(ge), Ee = /* @__PURE__ */ c("bottom_bar_bg_color"), rn = /* @__PURE__ */ f(() => {
  const e = Ee();
  return fe(e) ? e : e === "bottom_bar_bg_color" ? Vo() || qe() : e === "secondary_bg_color" ? qe() : Xt();
}), we = /* @__PURE__ */ c("bg_color"), Fo = /* @__PURE__ */ Ho(we), Se = /* @__PURE__ */ c(!1), Ne = /* @__PURE__ */ c(!1), li = /* @__PURE__ */ f(() => {
  const e = sn();
  return e ? ko(e) : !1;
}), Wo = /* @__PURE__ */ f(() => ({
  backgroundColor: ge(),
  bottomBarColor: Ee(),
  headerColor: we()
})), Tt = "web_app_set_background_color", $t = "web_app_set_bottom_bar_color", ke = "web_app_set_header_color", Re = "miniApp", an = {
  any: [
    Tt,
    $t,
    ke
  ]
}, pi = /* @__PURE__ */ f(() => an.any.some((e) => z(e, V()))), Go = U(Re), fi = O(Re, an), nt = J(Re, Se, an), _i = nt(
  "bindCssVars",
  (e) => {
    Ne() && on();
    const [t, n] = te();
    function o(s, r) {
      function a() {
        Nt(s, r() || null);
      }
      a(), t(r.sub(a), kt.bind(null, s));
    }
    return e || (e = (s) => `--tg-${It(s)}`), o(e("bgColor"), sn), o(e("bottomBarColor"), rn), o(e("headerColor"), Fo), t(() => {
      Ne.set(!1);
    }), Ne.set(!0), n;
  }
), di = Go("close", (e) => {
  _("web_app_close", { return_back: e });
}), mi = fi(
  "mount",
  () => {
    if (!Se()) {
      const e = I() && P(Re);
      Uo(), zo.ifAvailable(e ? e.backgroundColor : "bg_color"), Qo.ifAvailable(e ? e.bottomBarColor : "bottom_bar_bg_color"), Jo.ifAvailable(e ? e.headerColor : "bg_color"), Se.set(!0);
    }
  }
), bi = Go("ready", () => {
  _("web_app_ready");
});
function cn() {
  R(Re, Wo());
}
const zo = nt(
  "setBackgroundColor",
  (e) => {
    e !== ge() && (_(Tt, { color: e }), ge.set(e), cn());
  },
  Tt
), Qo = nt(
  "setBottomBarColor",
  (e) => {
    e !== Ee() && (_($t, { color: e }), Ee.set(e), cn());
  },
  $t
), Jo = nt(
  "setHeaderColor",
  (e) => {
    e !== we() && (_(ke, fe(e) ? { color: e } : { color_key: e }), we.set(e), cn());
  },
  ke,
  {
    rgb: [ke, "color", fe]
  }
);
function hi() {
  Se.set(!1);
}
const Hc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  backgroundColor: ge,
  backgroundColorRGB: sn,
  bindCssVars: _i,
  bottomBarColor: Ee,
  bottomBarColorRGB: rn,
  close: di,
  headerColor: we,
  headerColorRGB: Fo,
  isCssVarsBound: Ne,
  isDark: li,
  isMounted: Se,
  isSupported: pi,
  mount: mi,
  ready: bi,
  setBackgroundColor: zo,
  setBottomBarColor: Qo,
  setHeaderColor: Jo,
  state: Wo,
  unmount: hi
}, Symbol.toStringTag, { value: "Module" }));
function gi(e) {
  const t = e.message.trim(), n = (e.title || "").trim(), o = e.buttons || [];
  if (n.length > 64)
    throw new l(ie, `Invalid title: ${n}`);
  if (!t || t.length > 256)
    throw new l(ie, `Invalid message: ${t}`);
  if (o.length > 3)
    throw new l(ie, `Invalid buttons count: ${o.length}`);
  return {
    title: n,
    message: t,
    buttons: o.length ? o.map((s, r) => {
      const a = s.id || "";
      if (a.length > 64)
        throw new l(ie, `Button with index ${r} has invalid id: ${a}`);
      if (!s.type || s.type === "default" || s.type === "destructive") {
        const i = s.text.trim();
        if (!i || i.length > 64)
          throw new l(ie, `Button with index ${r} has invalid text: ${i}`);
        return { type: s.type, text: i, id: a };
      }
      return { type: s.type, id: a };
    }) : [{ type: "close", id: "" }]
  };
}
const un = "web_app_open_popup", Ei = O("popup", un), xe = /* @__PURE__ */ c(!1), wi = N(un), Si = Ei(
  "open",
  async (e) => {
    if (xe())
      throw new l(qt, "A popup is already opened");
    xe.set(!0);
    try {
      const { button_id: t = null } = await y(un, "popup_closed", {
        ...e,
        params: gi(e)
      });
      return t;
    } finally {
      xe.set(!1);
    }
  }
), Fc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  isOpened: xe,
  isSupported: wi,
  open: Si
}, Symbol.toStringTag, { value: "Module" })), yi = "web_app_close_scan_qr_popup", ln = "web_app_open_scan_qr_popup", Ci = "scan_qr_popup_closed", Ai = "qr_text_received", Yo = O("qrScanner", ln), Rt = Yo("close", () => {
  X.set(!1), _(yi);
}), X = /* @__PURE__ */ c(!1), vi = N(ln);
function Ti(e) {
  return b.withFn((t) => {
    if (X())
      throw new l(qt, "The QR Scanner is already opened");
    X.set(!0), e || (e = {});
    const { onCaptured: n, text: o, capture: s } = e, [, r] = te(
      // Whenever the scanner was closed for some reason (by a developer or a
      // user), we should resolve the promise with undefined.
      X.sub(() => {
        a.resolve();
      }),
      // Whenever user closed the scanner, update the isOpened signal state.
      S(Ci, () => {
        X.set(!1);
      }),
      // Whenever some QR was scanned, we should check if it must be captured.
      S(Ai, (i) => {
        n ? n(i.data) : (!s || s(i.data)) && (a.resolve(i.data), Rt());
      })
    ), a = new Xs({ abortSignal: t }).catch(Rt).finally(r);
    return (e.postEvent || _)(ln, { text: o }), a;
  }, e);
}
const $i = Yo("open", Ti), Wc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  close: Rt,
  isOpened: X,
  isSupported: vi,
  open: $i
}, Symbol.toStringTag, { value: "Module" }));
function H(e) {
  return /* @__PURE__ */ f(() => pn()[e]);
}
const le = /* @__PURE__ */ c({
  hasShineEffect: !1,
  isEnabled: !0,
  isLoaderVisible: !1,
  isVisible: !1,
  position: "left",
  text: "Cancel"
}), pn = /* @__PURE__ */ f(() => {
  const e = le();
  return {
    ...e,
    backgroundColor: e.backgroundColor || rn() || "#000000",
    textColor: e.textColor || en() || "#2481cc"
  };
}), ye = /* @__PURE__ */ c(!1), Ri = H("backgroundColor"), Pi = H("hasShineEffect"), Oi = H("isEnabled"), Bi = H("isLoaderVisible"), Mi = H("isVisible"), Di = H("position"), Ii = H("text"), Ni = H("textColor"), ot = "web_app_setup_secondary_button", Ko = "secondary_button_pressed", st = "secondaryButton", fn = O(st, ot), ki = J(st, ye, ot), xi = N(ot), Vi = fn("mount", () => {
  if (!ye()) {
    const e = I() && P(st);
    e && le.set(e), ye.set(!0);
  }
}), Li = fn(
  "onClick",
  (e) => S(Ko, e)
), ji = fn(
  "offClick",
  (e) => {
    M(Ko, e);
  }
), Ui = ki(
  "setParams",
  (e) => {
    le.set({
      ...le(),
      ...Object.fromEntries(
        Object.entries(e).filter(([, n]) => n !== void 0)
      )
    }), R(st, le());
    const t = pn();
    t.text && _(ot, {
      color: t.backgroundColor,
      has_shine_effect: t.hasShineEffect,
      is_active: t.isEnabled,
      is_progress_visible: t.isLoaderVisible,
      is_visible: t.isVisible,
      position: t.position,
      text: t.text,
      text_color: t.textColor
    });
  }
);
function qi() {
  ye.set(!1);
}
const Gc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  backgroundColor: Ri,
  hasShineEffect: Pi,
  isEnabled: Oi,
  isLoaderVisible: Bi,
  isMounted: ye,
  isSupported: xi,
  isVisible: Mi,
  mount: Vi,
  offClick: ji,
  onClick: Li,
  position: Di,
  setParams: Ui,
  state: pn,
  text: Ii,
  textColor: Ni,
  unmount: qi
}, Symbol.toStringTag, { value: "Module" })), rt = "web_app_setup_settings_button", Zo = "settings_button_pressed", at = "settingsButton", Pt = /* @__PURE__ */ c(!1), Ce = /* @__PURE__ */ c(!1), Hi = N(rt), _n = O(at, rt), Xo = J(at, Ce, rt), Fi = Xo("hide", () => {
  dn(!1);
}), Wi = _n("mount", () => {
  Ce() || (dn(I() && P(at) || !1), Ce.set(!0));
});
function dn(e) {
  e !== Pt() && (_(rt, { is_visible: e }), R(at, e), Pt.set(e));
}
const Gi = _n(
  "onClick",
  (e) => S(Zo, e)
), zi = _n(
  "offClick",
  (e) => {
    M(Zo, e);
  }
), Qi = Xo("show", () => {
  dn(!0);
});
function Ji() {
  Ce.set(!1);
}
const zc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  hide: Fi,
  isMounted: Ce,
  isSupported: Hi,
  isVisible: Pt,
  mount: Wi,
  offClick: zi,
  onClick: Gi,
  show: Qi,
  unmount: Ji
}, Symbol.toStringTag, { value: "Module" })), it = "web_app_setup_swipe_behavior", ct = "swipeBehavior", Ae = /* @__PURE__ */ c(!1), Yi = N(it), Ot = /* @__PURE__ */ c(!0), Ki = O(ct, it), es = J(ct, Ae, it), Zi = es("disableVertical", () => {
  mn(!1);
}), Xi = es("enableVertical", () => {
  mn(!0);
}), ec = Ki("mount", () => {
  Ae() || (mn(
    I() && P(ct) || !1,
    !0
  ), Ae.set(!0));
});
function mn(e, t) {
  (e !== Ot() || t) && (_(it, { allow_vertical_swipe: e }), R(ct, e), Ot.set(e));
}
function tc() {
  Ae.set(!1);
}
const Qc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  disableVertical: Zi,
  enableVertical: Xi,
  isMounted: Ae,
  isSupported: Yi,
  isVerticalEnabled: Ot,
  mount: ec,
  unmount: tc
}, Symbol.toStringTag, { value: "Module" })), Jc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  accentTextColor: Ia,
  backgroundColor: Xt,
  bindCssVars: ci,
  bottomBarBgColor: Vo,
  buttonColor: en,
  buttonTextColor: xo,
  destructiveTextColor: Na,
  headerBackgroundColor: ka,
  hintColor: xa,
  isCssVarsBound: Ie,
  isDark: Va,
  isMounted: be,
  linkColor: La,
  mount: Uo,
  secondaryBackgroundColor: qe,
  sectionBackgroundColor: ja,
  sectionHeaderTextColor: Ua,
  sectionSeparatorColor: qa,
  state: q,
  subtitleTextColor: Ha,
  textColor: Fa,
  unmount: ui
}, Symbol.toStringTag, { value: "Module" })), re = "viewport", ts = "web_app_request_fullscreen", nc = "fullscreen_failed", bn = "fullscreen_changed", ns = "safe_area_changed", os = "content_safe_area_changed", ss = "viewport_changed", In = "web_app_request_safe_area", Nn = "web_app_request_content_safe_area", kn = {
  left: 0,
  top: 0,
  bottom: 0,
  right: 0
};
function bt(e) {
  return Math.max(e, 0);
}
const pe = /* @__PURE__ */ c({
  contentSafeAreaInsets: kn,
  height: 0,
  isExpanded: !1,
  isFullscreen: !1,
  safeAreaInsets: kn,
  stableHeight: 0,
  width: 0
});
function K(e) {
  return /* @__PURE__ */ f(() => pe()[e]);
}
function ae(e) {
  const { height: t, stableHeight: n, width: o } = e;
  pe.set({
    ...pe(),
    ...No({
      ...e,
      height: t ? bt(t) : void 0,
      width: o ? bt(o) : void 0,
      stableHeight: n ? bt(n) : void 0
    })
  }), R(re, pe());
}
function oc() {
  return P(re);
}
const rs = K("isFullscreen"), hn = /* @__PURE__ */ c(), sc = /* @__PURE__ */ f(() => !!hn()), as = /* @__PURE__ */ c(), Pe = /* @__PURE__ */ c(!1), rc = /* @__PURE__ */ f(() => !!ut()), is = /* @__PURE__ */ c(void 0), ut = /* @__PURE__ */ c(), ac = J(re, Pe, ts);
function cs(e, t) {
  return ac(e, /* @__PURE__ */ Ge(
    (n) => y(t, [bn, nc], n).then((o) => {
      if ("error" in o) {
        if (o.error === "ALREADY_FULLSCREEN")
          return !0;
        throw new l(kr, "Fullscreen request failed", o.error);
      }
      return o.is_fullscreen;
    }).then((o) => {
      o !== rs() && ae({ isFullscreen: o });
    }),
    () => new l(Q, "Fullscreen mode change is already being requested"),
    hn,
    as
  ));
}
const ic = cs("requestFullscreen", ts), cc = cs("exitFullscreen", "web_app_exit_fullscreen"), us = U(re), uc = Ke(re, Pe);
function lt(e) {
  return /* @__PURE__ */ f(() => gn()[e]);
}
const gn = K("safeAreaInsets"), ls = lt("bottom"), ps = lt("left"), fs = lt("right"), _s = lt("top");
function pt(e) {
  return /* @__PURE__ */ f(() => En()[e]);
}
const En = K("contentSafeAreaInsets"), ds = pt("bottom"), ms = pt("left"), bs = pt("right"), hs = pt("top"), lc = /* @__PURE__ */ A(
  "requestContentSafeAreaInsets",
  (e) => y(Nn, "content_safe_area_changed", e),
  { isSupported: Nn }
), pc = /* @__PURE__ */ A(
  "requestSafeAreaInsets",
  (e) => y(In, "safe_area_changed", e),
  { isSupported: In }
);
function fc(e) {
  return y("web_app_request_viewport", "viewport_changed", e).then((t) => ({
    height: t.height,
    width: t.width,
    isExpanded: t.is_expanded,
    isStable: t.is_state_stable
  }));
}
const gs = (e) => {
  const { height: t } = e;
  ae({
    isExpanded: e.is_expanded,
    height: t,
    width: e.width,
    stableHeight: e.is_state_stable ? t : void 0
  });
}, Es = (e) => {
  ae({ isFullscreen: e.is_fullscreen });
}, ws = (e) => {
  ae({ safeAreaInsets: e });
}, Ss = (e) => {
  ae({ contentSafeAreaInsets: e });
}, _c = us("mount", /* @__PURE__ */ vo(
  re,
  (e) => b.resolve().then(async () => {
    const t = I() && oc();
    if (t)
      return t;
    const [
      n,
      o
    ] = await b.all([
      pc.ifAvailable(e) || gn(),
      lc.ifAvailable(e) || En()
    ]), s = oe(), r = {
      contentSafeAreaInsets: o,
      isFullscreen: !!s.fullscreen,
      safeAreaInsets: n
    };
    if (["macos", "tdesktop", "unigram", "webk", "weba", "web"].includes(s.platform)) {
      const a = window;
      return {
        ...r,
        height: a.innerHeight,
        isExpanded: !0,
        stableHeight: a.innerHeight,
        width: a.innerWidth
      };
    }
    return fc(e).then((a) => ({
      ...r,
      height: a.height,
      isExpanded: a.isExpanded,
      stableHeight: a.isStable ? a.height : 0,
      width: a.width
    }));
  }),
  (e) => {
    S(ss, gs), S(bn, Es), S(ns, ws), S(os, Ss), ae(e);
  },
  Pe,
  ut,
  is
));
function dc() {
  const e = ut();
  e && e.cancel(), M(ss, gs), M(bn, Es), M(ns, ws), M(os, Ss), Pe.set(!1);
}
const Ve = /* @__PURE__ */ c(!1), wn = K("height"), Sn = K("stableHeight"), ys = K("width"), mc = uc(
  "bindCssVars",
  (e) => {
    Ve() && on(), e || (e = (n) => `--tg-viewport-${It(n)}`);
    const t = [
      ["height", wn],
      ["stableHeight", Sn],
      ["width", ys],
      ["safeAreaInsetTop", _s],
      ["safeAreaInsetBottom", ls],
      ["safeAreaInsetLeft", ps],
      ["safeAreaInsetRight", fs],
      ["contentSafeAreaInsetTop", hs],
      ["contentSafeAreaInsetBottom", ds],
      ["contentSafeAreaInsetLeft", ms],
      ["contentSafeAreaInsetRight", bs]
    ].reduce((n, [o, s]) => {
      const r = e(o);
      if (r) {
        const a = () => {
          Nt(r, `${s()}px`);
        };
        n.push([a, s.sub(a), r]);
      }
      return n;
    }, []);
    return t.forEach((n) => {
      n[0]();
    }), Ve.set(!0), () => {
      t.forEach((n) => {
        n[1](), kt(n[2]);
      }), Ve.set(!1);
    };
  }
), bc = us("expand", () => {
  _("web_app_expand");
}), hc = K("isExpanded"), gc = /* @__PURE__ */ f(() => wn() === Sn()), Yc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  bindCssVars: mc,
  changeFullscreenError: as,
  changeFullscreenPromise: hn,
  contentSafeAreaInsetBottom: ds,
  contentSafeAreaInsetLeft: ms,
  contentSafeAreaInsetRight: bs,
  contentSafeAreaInsetTop: hs,
  contentSafeAreaInsets: En,
  exitFullscreen: cc,
  expand: bc,
  height: wn,
  isChangingFullscreen: sc,
  isCssVarsBound: Ve,
  isExpanded: hc,
  isFullscreen: rs,
  isMounted: Pe,
  isMounting: rc,
  isStable: gc,
  mount: _c,
  mountError: is,
  mountPromise: ut,
  requestFullscreen: ic,
  safeAreaInsetBottom: ls,
  safeAreaInsetLeft: ps,
  safeAreaInsetRight: fs,
  safeAreaInsetTop: _s,
  safeAreaInsets: gn,
  stableHeight: Sn,
  state: pe,
  unmount: dc,
  width: ys
}, Symbol.toStringTag, { value: "Module" })), xn = "web_app_request_emoji_status_access", Cs = /* @__PURE__ */ c(), Ec = /* @__PURE__ */ c(), Kc = /* @__PURE__ */ f(() => !!Cs()), Zc = /* @__PURE__ */ A(
  "requestEmojiStatusAccess",
  /* @__PURE__ */ Ge(
    () => y(xn, "emoji_status_access_requested").then((e) => e.status),
    () => new l(
      Q,
      "Emoji status access request is currently in progress"
    ),
    Cs,
    Ec,
    !1
  ),
  { isSupported: xn }
), Vn = "web_app_set_emoji_status", As = /* @__PURE__ */ c(), wc = /* @__PURE__ */ c(), Xc = /* @__PURE__ */ f(() => !!As()), eu = /* @__PURE__ */ A(
  "setEmojiStatus",
  /* @__PURE__ */ Ge(
    async (e, t) => {
      const n = await y(Vn, ["emoji_status_set", "emoji_status_failed"], {
        params: {
          custom_emoji_id: e,
          duration: t
        }
      });
      if (n && "error" in n)
        throw new l(xr, "Failed to set emoji status", n.error);
    },
    () => new l(
      Q,
      "Emoji status set request is currently in progress"
    ),
    As,
    wc,
    !1
  ),
  { isSupported: Vn }
), Sc = U(), tu = Sc(
  "openLink",
  (e, t) => {
    if (typeof e == "string")
      try {
        e = new URL(e);
      } catch (n) {
        throw new l(Ut, `"${e.toString()}" is invalid URL`, n);
      }
    t || (t = {}), _("web_app_open_link", {
      url: e.toString(),
      try_browser: t.tryBrowser,
      try_instant_view: t.tryInstantView
    });
  }
), Ln = "web_app_open_tg_link", yc = U(), Cc = yc(
  "openTelegramLink",
  (e) => {
    const t = e.toString();
    if (!t.match(/^https:\/\/t.me\/.+/))
      throw new l(Ut, `"${t}" is invalid URL`);
    if (!z(Ln, V())) {
      window.location.href = t;
      return;
    }
    e = new URL(e), _(Ln, { path_full: e.pathname + e.search });
  }
), Ac = U(), nu = Ac(
  "shareURL",
  (e, t) => {
    Cc(
      "https://t.me/share/url?" + new URLSearchParams({ url: e, text: t || "" }).toString().replace(/\+/g, "%20")
    );
  }
), Bt = "web_app_request_phone", ht = /* @__PURE__ */ c(!1), vc = /* @__PURE__ */ A(
  "requestPhoneAccess",
  (e) => {
    if (ht())
      throw new l(Q, "Phone access request is currently in progress");
    return ht.set(!0), y(Bt, "phone_requested", e).then((t) => t.status).finally(() => {
      ht.set(!1);
    });
  },
  {
    isSupported: Bt
  }
);
function jn(e) {
  return e || (e = {}), se("getRequestedContact", {}, {
    ...e,
    timeout: e.timeout || 5e3
  }).then(
    Jn({
      contact: Le({
        userId: ["user_id", je()],
        phoneNumber: ["phone_number", L()],
        firstName: ["first_name", L()],
        lastName: ["last_name", L(!0)]
      })(),
      authDate: ["auth_date", Mt()],
      hash: L()
    })()
  );
}
const ou = /* @__PURE__ */ A(
  "requestContact",
  (e) => b.withFn(
    async (t) => {
      const n = { abortSignal: t };
      try {
        return await jn(n);
      } catch {
      }
      if (await vc(n) !== "sent")
        throw new l(Or, "User denied access");
      let s = 50;
      for (; !t.aborted; ) {
        try {
          return await jn(n);
        } catch {
        }
        await er(s), s += 50;
      }
      return null;
    },
    e
  ),
  {
    isSupported: Bt
  }
), Un = "web_app_request_write_access", gt = /* @__PURE__ */ c(!1), su = /* @__PURE__ */ A(
  "requestWriteAccess",
  (e) => {
    if (gt())
      throw new l(Q, "Write access request is currently in progress");
    return gt.set(!0), y(Un, "write_access_requested", e).then((t) => t.status).finally(() => {
      gt.set(!1);
    });
  },
  {
    isSupported: Un
  }
), ru = /* @__PURE__ */ A(
  "getCurrentTime",
  (e) => se("getCurrentTime", {}, e).then(Mt()),
  {
    isSupported: "web_app_invoke_custom_method"
  }
), qn = "web_app_read_text_from_clipboard", au = /* @__PURE__ */ A(
  "readTextFromClipboard",
  (e) => {
    const t = yo();
    return y(qn, "clipboard_text_received", {
      ...e,
      params: { req_id: t },
      capture: wo(t)
    }).then(({ data: n = null }) => n);
  },
  {
    isSupported: qn
  }
), iu = /* @__PURE__ */ A(
  "sendData",
  (e) => {
    const { size: t } = new Blob([e]);
    if (!t || t > 4096)
      throw new l(Pr, t ? "Maximum size of data to send is 4096 bytes" : "Attempted to send empty data");
    _("web_app_data_send", { data: e });
  }
), Hn = "web_app_share_to_story", cu = /* @__PURE__ */ A(
  "shareStory",
  (e, t) => {
    t || (t = {}), _(Hn, {
      text: t.text,
      media_url: e,
      widget_link: t.widgetLink
    });
  },
  { isSupported: Hn }
), Fn = "web_app_switch_inline_query", uu = /* @__PURE__ */ A(
  "switchInlineQuery",
  (e, t) => {
    _(Fn, {
      query: e,
      chat_types: t || []
    });
  },
  {
    isSupported: [Fn, {
      fn: () => !!oe().botInline,
      error: "Mini App should be ran in Bot inline mode"
    }]
  }
);
function lu(e) {
  try {
    return { result: e() };
  } catch (t) {
    return { error: t };
  }
}
function pu(e) {
  $r(e), gr();
  const [t, n] = te(
    S("reload_iframe", () => {
      _("iframe_will_reload"), window.location.reload();
    }),
    Er
  ), { acceptCustomStyles: o = !0 } = e || {};
  if (o) {
    const s = document.createElement("style");
    s.id = "telegram-custom-styles", document.head.appendChild(s), t(
      S("set_custom_style", (r) => {
        s.innerHTML = r;
      }),
      () => {
        document.head.removeChild(s);
      }
    );
  }
  return _("iframe_ready", { reload_supported: !0 }), n;
}
export {
  Tr as $createRequestId,
  sr as $debug,
  So as $postEvent,
  fr as $targetOrigin,
  V as $version,
  b as CancelablePromise,
  uo as ERR_ABORTED,
  Or as ERR_ACCESS_DENIED,
  Br as ERR_ALREADY_MOUNTING,
  qt as ERR_ALREADY_OPENED,
  Q as ERR_ALREADY_REQUESTING,
  lo as ERR_CANCELED,
  Mr as ERR_CSS_VARS_ALREADY_BOUND,
  pr as ERR_CUSTOM_METHOD_ERR_RESPONSE,
  Pr as ERR_DATA_INVALID_SIZE,
  xr as ERR_EMOJI_STATUS_SET_FAILED,
  kr as ERR_FULLSCREEN_FAILED,
  Rr as ERR_INVALID_SLUG,
  Ut as ERR_INVALID_URL,
  Ts as ERR_INVALID_VALUE,
  lr as ERR_METHOD_PARAMETER_UNSUPPORTED,
  cr as ERR_METHOD_UNSUPPORTED,
  Dr as ERR_NOT_AVAILABLE,
  Ir as ERR_NOT_INITIALIZED,
  Nr as ERR_NOT_MOUNTED,
  Bn as ERR_NOT_SUPPORTED,
  Gn as ERR_PARSE,
  ie as ERR_POPUP_INVALID_PARAMS,
  ur as ERR_RETRIEVE_LP_FAILED,
  po as ERR_TIMED_OUT,
  Rs as ERR_UNEXPECTED_TYPE,
  $s as ERR_UNEXPECTED_VALUE,
  bo as ERR_UNKNOWN_ENV,
  l as TypedError,
  co as addEventListener,
  ea as authenticateBiometry,
  Ic as backButton,
  _i as bindMiniAppCssVars,
  ci as bindThemeParamsCssVars,
  mc as bindViewportCssVars,
  Nc as biometry,
  To as biometryMountError,
  ze as biometryState,
  as as changeFullscreenError,
  hn as changeFullscreenPromise,
  Et as classNames,
  di as closeMiniApp,
  Rt as closeQrScanner,
  kc as closingBehavior,
  xc as cloudStorage,
  wr as compareVersions,
  Sr as createPostEvent,
  gr as defineEventHandlers,
  fa as deleteCloudStorageItem,
  kt as deleteCssVar,
  ia as disableClosingConfirmation,
  Zi as disableVerticalSwipes,
  yt as emitMiniAppsEvent,
  ca as enableClosingConfirmation,
  Xi as enableVerticalSwipes,
  cc as exitFullscreen,
  bc as expandViewport,
  da as getCloudStorageItem,
  ma as getCloudStorageKeys,
  ru as getCurrentTime,
  Vc as hapticFeedback,
  ga as hapticFeedbackImpactOccurred,
  Ea as hapticFeedbackNotificationOccurred,
  wa as hapticFeedbackSelectionChanged,
  Lr as hideBackButton,
  Fi as hideSettingsButton,
  pu as init,
  Lc as initData,
  Bo as initDataAuthDate,
  Mo as initDataCanSendAfter,
  Sa as initDataCanSendAfterDate,
  ya as initDataChat,
  Aa as initDataChatInstance,
  Ca as initDataChatType,
  va as initDataHash,
  Ta as initDataQueryId,
  Do as initDataRaw,
  $a as initDataReceiver,
  Pa as initDataStartParam,
  Kt as initDataState,
  Oa as initDataUser,
  Uc as invoice,
  yr as invokeCustomMethod,
  Pc as isAbortError,
  Be as isAuthenticatingBiometry,
  de as isBackButtonMounted,
  Vr as isBackButtonSupported,
  At as isBackButtonVisible,
  Qe as isBiometryMounted,
  Wr as isBiometryMounting,
  Kr as isBiometrySupported,
  Oc as isCanceledError,
  sc as isChangingFullscreen,
  me as isClosingBehaviorMounted,
  vt as isClosingConfirmationEnabled,
  pa as isCloudStorageSupported,
  ko as isColorDark,
  rs as isFullscreen,
  ha as isHapticFeedbackSupported,
  Js as isIframe,
  De as isInvoiceOpened,
  Ma as isInvoiceSupported,
  za as isMainButtonEnabled,
  Qa as isMainButtonLoaderVisible,
  he as isMainButtonMounted,
  Ja as isMainButtonVisible,
  Ne as isMiniAppCssVarsBound,
  li as isMiniAppDark,
  Se as isMiniAppMounted,
  pi as isMiniAppSupported,
  xe as isPopupOpened,
  wi as isPopupSupported,
  X as isQrScannerOpened,
  vi as isQrScannerSupported,
  fe as isRGB,
  Bs as isRGBShort,
  Kn as isRecord,
  Me as isRequestingBiometryAccess,
  Kc as isRequestingEmojiStatusAccess,
  ht as isRequestingPhoneAccess,
  gt as isRequestingWriteAccess,
  Mn as isSSR,
  Oi as isSecondaryButtonEnabled,
  Bi as isSecondaryButtonLoaderVisible,
  ye as isSecondaryButtonMounted,
  xi as isSecondaryButtonSupported,
  Mi as isSecondaryButtonVisible,
  Xc as isSettingEmojiStatus,
  Ce as isSettingsButtonMounted,
  Hi as isSettingsButtonSupported,
  Pt as isSettingsButtonVisible,
  Ae as isSwipeBehaviorMounted,
  Yi as isSwipeBehaviorSupported,
  Pn as isTMA,
  Ie as isThemeParamsCssVarsBound,
  Va as isThemeParamsDark,
  be as isThemeParamsMounted,
  Rc as isTimeoutError,
  Ot as isVerticalSwipesEnabled,
  Ve as isViewportCssVarsBound,
  hc as isViewportExpanded,
  Pe as isViewportMounted,
  rc as isViewportMounting,
  gc as isViewportStable,
  qc as mainButton,
  Wa as mainButtonBackgroundColor,
  Ga as mainButtonHasShineEffect,
  tn as mainButtonState,
  Ya as mainButtonText,
  Ka as mainButtonTextColor,
  $c as mergeClassNames,
  Hc as miniApp,
  ge as miniAppBackgroundColor,
  Ee as miniAppBottomBarColor,
  rn as miniAppBottomBarColorRGB,
  we as miniAppHeaderColor,
  Fo as miniAppHeaderColorRGB,
  bi as miniAppReady,
  Wo as miniAppState,
  Bc as mockTelegramEnv,
  jr as mountBackButton,
  oa as mountBiometry,
  ua as mountClosingBehavior,
  ei as mountMainButton,
  mi as mountMiniApp,
  Vi as mountSecondaryButton,
  Wi as mountSettingsButton,
  ec as mountSwipeBehavior,
  Uo as mountThemeParams,
  _c as mountViewport,
  M as off,
  qr as offBackButtonClick,
  ni as offMainButtonClick,
  ji as offSecondaryButtonClick,
  zi as offSettingsButtonClick,
  S as on,
  Ur as onBackButtonClick,
  ti as onMainButtonClick,
  Li as onSecondaryButtonClick,
  Gi as onSettingsButtonClick,
  ta as openBiometrySettings,
  Da as openInvoice,
  tu as openLink,
  Si as openPopup,
  $i as openQrScanner,
  Cc as openTelegramLink,
  jc as parseInitData,
  ri as parseThemeParams,
  Fc as popup,
  Vt as postEvent,
  Wc as qrScanner,
  au as readTextFromClipboard,
  Er as removeEventHandlers,
  Lt as request,
  zr as requestBiometry,
  na as requestBiometryAccess,
  ou as requestContact,
  lc as requestContentSafeAreaInsets,
  Zc as requestEmojiStatusAccess,
  Ec as requestEmojiStatusAccessError,
  Cs as requestEmojiStatusAccessPromise,
  ic as requestFullscreen,
  vc as requestPhoneAccess,
  pc as requestSafeAreaInsets,
  fc as requestViewport,
  su as requestWriteAccess,
  Ra as restoreInitData,
  oe as retrieveLaunchParams,
  lu as safeCall,
  Gc as secondaryButton,
  Ri as secondaryButtonBackgroundColor,
  Pi as secondaryButtonHasShineEffect,
  Di as secondaryButtonPosition,
  pn as secondaryButtonState,
  Ii as secondaryButtonText,
  Ni as secondaryButtonTextColor,
  iu as sendData,
  Tc as serializeLaunchParams,
  Cn as serializeThemeParams,
  ba as setCloudStorageItem,
  Nt as setCssVar,
  eu as setEmojiStatus,
  wc as setEmojiStatusError,
  As as setEmojiStatusPromise,
  oi as setMainButtonParams,
  zo as setMiniAppBackgroundColor,
  Qo as setMiniAppBottomBarColor,
  Jo as setMiniAppHeaderColor,
  Ui as setSecondaryButtonParams,
  zc as settingsButton,
  cu as shareStory,
  nu as shareURL,
  Hr as showBackButton,
  Qi as showSettingsButton,
  Mc as subscribe,
  z as supports,
  Qc as swipeBehavior,
  uu as switchInlineQuery,
  Jc as themeParams,
  Ia as themeParamsAccentTextColor,
  Xt as themeParamsBackgroundColor,
  Vo as themeParamsBottomBarBgColor,
  en as themeParamsButtonColor,
  xo as themeParamsButtonTextColor,
  Na as themeParamsDestructiveTextColor,
  ka as themeParamsHeaderBackgroundColor,
  xa as themeParamsHintColor,
  La as themeParamsLinkColor,
  qe as themeParamsSecondaryBackgroundColor,
  ja as themeParamsSectionBackgroundColor,
  Ua as themeParamsSectionHeaderTextColor,
  qa as themeParamsSectionSeparatorColor,
  q as themeParamsState,
  Ha as themeParamsSubtitleTextColor,
  Fa as themeParamsTextColor,
  Yn as toRGB,
  Qn as toRecord,
  Fr as unmountBackButton,
  sa as unmountBiometry,
  la as unmountClosingBehavior,
  si as unmountMainButton,
  hi as unmountMiniApp,
  qi as unmountSecondaryButton,
  Ji as unmountSettingsButton,
  tc as unmountSwipeBehavior,
  ui as unmountThemeParams,
  dc as unmountViewport,
  Dc as unsubscribe,
  ra as updateBiometryToken,
  Yc as viewport,
  ds as viewportContentSafeAreaInsetBottom,
  ms as viewportContentSafeAreaInsetLeft,
  bs as viewportContentSafeAreaInsetRight,
  hs as viewportContentSafeAreaInsetTop,
  En as viewportContentSafeAreaInsets,
  wn as viewportHeight,
  is as viewportMountError,
  ut as viewportMountPromise,
  ls as viewportSafeAreaInsetBottom,
  ps as viewportSafeAreaInsetLeft,
  fs as viewportSafeAreaInsetRight,
  _s as viewportSafeAreaInsetTop,
  gn as viewportSafeAreaInsets,
  Sn as viewportStableHeight,
  pe as viewportState,
  ys as viewportWidth
};
//# sourceMappingURL=index.js.map
