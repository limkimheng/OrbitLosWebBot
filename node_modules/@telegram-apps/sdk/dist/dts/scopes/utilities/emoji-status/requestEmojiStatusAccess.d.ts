/**
 * Signal containing the emoji status access request promise.
 */
export declare const requestEmojiStatusAccessPromise: import('@telegram-apps/signals').Signal<Promise<string> | undefined>;
/**
 * Signal containing the last emoji status access request error.
 */
export declare const requestEmojiStatusAccessError: import('@telegram-apps/signals').Signal<Error | undefined>;
/**
 * Signal indicating if the emoji status access is currently being requested.
 */
export declare const isRequestingEmojiStatusAccess: import('@telegram-apps/signals').Computed<boolean>;
/**
 * Shows a native popup requesting permission for the bot to manage user's emoji status.
 * @param options - additional options.
 * @since Mini Apps v8.0
 * @throws {TypedError} ERR_ALREADY_REQUESTING
 * @throws {TypedError} ERR_UNKNOWN_ENV
 * @throws {TypedError} ERR_NOT_INITIALIZED
 * @throws {TypedError} ERR_NOT_SUPPORTED
 * @example
 * if (requestEmojiStatusAccess.isAvailable()) {
 *   const status = await requestEmojiStatusAccess();
 * }
 */
export declare const requestEmojiStatusAccess: import('../../toolkit/wrapSafe.js').SafeWrapped<() => PromiseLike<Promise<string>>, true, never>;
