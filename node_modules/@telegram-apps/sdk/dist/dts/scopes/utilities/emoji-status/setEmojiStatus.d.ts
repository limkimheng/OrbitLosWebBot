/**
 * Signal containing the emoji status access request promise.
 */
export declare const setEmojiStatusPromise: import('@telegram-apps/signals').Signal<Promise<void> | undefined>;
/**
 * Signal containing the last emoji status access request error.
 */
export declare const setEmojiStatusError: import('@telegram-apps/signals').Signal<Error | undefined>;
/**
 * Signal indicating if the emoji status set is currently being requested.
 */
export declare const isSettingEmojiStatus: import('@telegram-apps/signals').Computed<boolean>;
/**
 * Opens a dialog allowing the user to set the specified custom emoji as their status.
 * @returns Promise with boolean value indicating if the status was set.
 * @param options - additional options.
 * @since Mini Apps v8.0
 * @throws {TypedError} ERR_ALREADY_REQUESTING
 * @throws {TypedError} ERR_UNKNOWN_ENV
 * @throws {TypedError} ERR_NOT_INITIALIZED
 * @throws {TypedError} ERR_NOT_SUPPORTED
 * @example
 * if (setEmojiStatus.isAvailable()) {
 *   const statusSet = await setEmojiStatus('5361800828313167608');
 * }
 */
export declare const setEmojiStatus: import('../../toolkit/wrapSafe.js').SafeWrapped<(customEmojiId: string, duration?: number | undefined) => PromiseLike<Promise<void>>, true, never>;
