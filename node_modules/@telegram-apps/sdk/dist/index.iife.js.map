{"version":3,"file":"index.iife.js","sources":["../../transformers/dist/index.js","../src/classnames/classNames.ts","../src/classnames/mergeClassNames.ts","../../bridge/dist/index.js","../../navigation/dist/index.js","../../signals/dist/index.js","../src/scopes/globals.ts","../src/scopes/toolkit/createIsSupported.ts","../src/errors.ts","../src/utils/isSSR.ts","../src/scopes/toolkit/wrapSafe.ts","../src/scopes/toolkit/createWrapSafe.ts","../src/scopes/toolkit/createWrapComplete.ts","../src/scopes/toolkit/createWrapSupported.ts","../src/scopes/components/back-button/back-button.ts","../src/scopes/signalifyAsyncFn.ts","../src/scopes/createMountFn.ts","../src/scopes/toolkit/createWrapBasic.ts","../src/scopes/components/biometry/signals.ts","../src/scopes/components/biometry/eventToState.ts","../src/scopes/components/biometry/requestBiometry.ts","../src/scopes/components/biometry/methods.ts","../src/scopes/toolkit/createWrapMounted.ts","../src/scopes/components/closing-behavior/closing-behavior.ts","../src/scopes/components/cloud-storage/cloud-storage.ts","../src/scopes/components/haptic-feedback/haptic-feedback.ts","../src/scopes/components/init-data/init-data.ts","../src/scopes/components/init-data/parseInitData.ts","../src/scopes/components/invoice/invoice.ts","../src/utils/removeUndefined.ts","../src/utils/isColorDark.ts","../src/scopes/components/theme-params/signals.ts","../src/scopes/components/main-button/signals.ts","../src/scopes/components/main-button/methods.ts","../src/scopes/toolkit/throwCssVarsBound.ts","../src/scopes/components/theme-params/parseThemeParams.ts","../src/scopes/components/theme-params/methods.ts","../src/scopes/components/mini-app/signals.ts","../src/scopes/components/mini-app/methods.ts","../src/scopes/components/popup/prepareParams.ts","../src/scopes/components/popup/popup.ts","../src/scopes/components/qr-scanner/qr-scanner.ts","../src/scopes/components/secondary-button/signals.ts","../src/scopes/components/secondary-button/methods.ts","../src/scopes/components/settings-button/settings-button.ts","../src/scopes/components/swipe-behavior/swipe-behavior.ts","../src/scopes/components/viewport/const.ts","../src/scopes/components/viewport/signals/state.ts","../src/scopes/components/viewport/signals/fullscreen.ts","../src/scopes/components/viewport/signals/mounting.ts","../src/scopes/components/viewport/methods/fullscreen/createFullscreenFn.ts","../src/scopes/components/viewport/methods/fullscreen/requestFullscreen.ts","../src/scopes/components/viewport/methods/fullscreen/exitFullscreen.ts","../src/scopes/components/viewport/methods/wrappers.ts","../src/scopes/components/viewport/signals/safe-area-insets.ts","../src/scopes/components/viewport/signals/content-safe-area-insets.ts","../src/scopes/components/viewport/methods/static/requestContentSafeAreaInsets.ts","../src/scopes/components/viewport/methods/static/requestSafeAreaInsets.ts","../src/scopes/components/viewport/methods/static/requestViewport.ts","../src/scopes/components/viewport/methods/mounting/shared.ts","../src/scopes/components/viewport/methods/mounting/mount.ts","../src/scopes/components/viewport/methods/mounting/unmount.ts","../src/scopes/components/viewport/signals/css-vars.ts","../src/scopes/components/viewport/signals/dimensions.ts","../src/scopes/components/viewport/methods/bindCssVars.ts","../src/scopes/components/viewport/methods/expand.ts","../src/scopes/components/viewport/signals/flags.ts","../src/scopes/utilities/emoji-status/requestEmojiStatusAccess.ts","../src/scopes/utilities/emoji-status/setEmojiStatus.ts","../src/scopes/utilities/links/openLink.ts","../src/scopes/utilities/links/openTelegramLink.ts","../src/scopes/utilities/links/shareURL.ts","../src/scopes/utilities/privacy/requestPhoneAccess.ts","../src/scopes/utilities/privacy/requestContact.ts","../src/scopes/utilities/privacy/requestWriteAccess.ts","../src/scopes/utilities/uncategorized/getCurrentTime.ts","../src/scopes/utilities/uncategorized/readTextFromClipboard.ts","../src/scopes/utilities/uncategorized/sendData.ts","../src/scopes/utilities/uncategorized/shareStory.ts","../src/scopes/utilities/uncategorized/switchInlineQuery.ts","../src/utils/safeCall.ts","../src/init.ts"],"sourcesContent":["class u extends Error {\n  constructor(e, r, n) {\n    super(\n      typeof r == \"object\" ? r.message : r || e,\n      {\n        cause: typeof r == \"object\" ? r.cause : n\n      }\n    ), this.type = e, Object.setPrototypeOf(this, u.prototype);\n  }\n}\nfunction h(t) {\n  return t.replace(/[A-Z]/g, (e) => `_${e.toLowerCase()}`);\n}\nfunction S(t) {\n  return t.replace(/_[a-z]/g, (e) => e[1].toUpperCase());\n}\nconst w = \"ERR_INVALID_VALUE\", D = \"ERR_UNEXPECTED_VALUE\", W = \"ERR_UNEXPECTED_TYPE\", d = \"ERR_PARSE\";\nfunction A(t, e) {\n  const r = {};\n  for (const n in t) {\n    const o = t[n];\n    if (!o)\n      continue;\n    let a, c;\n    typeof o == \"function\" ? (a = n, c = o) : [a, c] = o;\n    try {\n      const s = c(e(a));\n      s !== void 0 && (r[n] = s);\n    } catch (s) {\n      throw new u(\n        d,\n        `Parser for \"${n}\" property failed${a === n ? \"\" : `. Source field: \"${a}\"`}`,\n        s\n      );\n    }\n  }\n  return r;\n}\nfunction P(t) {\n  let e = t;\n  if (typeof e == \"string\")\n    try {\n      e = JSON.parse(e);\n    } catch (r) {\n      throw new u(w, { cause: r });\n    }\n  if (typeof e != \"object\" || !e || Array.isArray(e))\n    throw new u(D);\n  return e;\n}\nfunction i(t, e) {\n  return (r) => {\n    const n = (o) => {\n      if (!(r && o === void 0))\n        try {\n          return e(o);\n        } catch (a) {\n          throw new u(d, {\n            message: `\"${t}\" transformer failed to parse the value`,\n            cause: a\n          });\n        }\n    };\n    return /* @__PURE__ */ Object.assign(\n      n,\n      {\n        isValid(o) {\n          try {\n            return n(o), !0;\n          } catch {\n            return !1;\n          }\n        }\n      }\n    );\n  };\n}\nfunction m(t, e) {\n  return i(e || \"object\", (r) => {\n    const n = P(r);\n    return A(t, (o) => n[o]);\n  });\n}\nfunction p(t) {\n  throw new u(W, `Unexpected value received: ${JSON.stringify(t)}`);\n}\nconst E = i(\"boolean\", (t) => {\n  if (typeof t == \"boolean\")\n    return t;\n  const e = String(t);\n  if (e === \"1\" || e === \"true\")\n    return !0;\n  if (e === \"0\" || e === \"false\")\n    return !1;\n  p(t);\n}), f = i(\"string\", (t) => {\n  if (typeof t == \"string\" || typeof t == \"number\")\n    return t.toString();\n  p(t);\n}), g = i(\"number\", (t) => {\n  if (typeof t == \"number\")\n    return t;\n  if (typeof t == \"string\") {\n    const e = Number(t);\n    if (!Number.isNaN(e))\n      return e;\n  }\n  p(t);\n}), U = i(\"date\", (t) => t instanceof Date ? t : new Date(g()(t) * 1e3));\nfunction R(t, e) {\n  return i(e || \"searchParams\", (r) => {\n    typeof r != \"string\" && !(r instanceof URLSearchParams) && p(r);\n    const n = typeof r == \"string\" ? new URLSearchParams(r) : r;\n    return A(t, (o) => {\n      const a = n.get(o);\n      return a === null ? void 0 : a;\n    });\n  });\n}\nfunction l(t) {\n  for (const e in t)\n    t[e] = [h(e), t[e]];\n  return t;\n}\nconst N = (t) => {\n  const e = g(), r = g(!0), n = f(), o = f(!0), a = E(!0), c = m(l({\n    addedToAttachmentMenu: a,\n    allowsWriteToPm: a,\n    firstName: n,\n    id: e,\n    isBot: a,\n    isPremium: a,\n    languageCode: o,\n    lastName: o,\n    photoUrl: o,\n    username: o\n  }), \"User\")(!0);\n  return R(\n    l({\n      authDate: U(),\n      canSendAfter: r,\n      chat: m(\n        l({\n          id: e,\n          type: n,\n          title: n,\n          photoUrl: o,\n          username: o\n        }),\n        \"Chat\"\n      )(!0),\n      chatInstance: o,\n      chatType: o,\n      hash: n,\n      queryId: o,\n      receiver: c,\n      startParam: o,\n      signature: n,\n      user: c\n    }),\n    \"initData\"\n  )(t);\n};\nfunction O(t) {\n  return /^#[\\da-f]{6}$/i.test(t);\n}\nfunction _(t) {\n  return /^#[\\da-f]{3}$/i.test(t);\n}\nfunction C(t) {\n  const e = t.replace(/\\s/g, \"\").toLowerCase();\n  if (O(e))\n    return e;\n  if (_(e)) {\n    let n = \"#\";\n    for (let o = 0; o < 3; o += 1)\n      n += e[1 + o].repeat(2);\n    return n;\n  }\n  const r = e.match(/^rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)$/) || e.match(/^rgba\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3}),\\d{1,3}\\)$/);\n  if (!r)\n    throw new Error(`Value \"${t}\" does not satisfy any of known RGB formats.`);\n  return r.slice(1).reduce((n, o) => {\n    const a = parseInt(o, 10).toString(16);\n    return n + (a.length === 1 ? \"0\" : \"\") + a;\n  }, \"#\");\n}\nconst T = i(\"rgb\", (t) => C(f()(t))), b = i(\n  \"themeParams\",\n  (t) => {\n    const e = T(!0);\n    return Object.entries(P(t)).reduce((r, [n, o]) => (r[S(n)] = e(o), r), {});\n  }\n);\n// @__NO_SIDE_EFFECTS__\nfunction y(t) {\n  return JSON.stringify(\n    Object.fromEntries(\n      Object.entries(t).map(([e, r]) => [h(e), r])\n    )\n  );\n}\nconst V = (t) => {\n  const e = f(), r = f(!0), n = E(!0);\n  return R({\n    botInline: [\"tgWebAppBotInline\", n],\n    defaultColors: [\"tgWebAppDefaultColors\", b(!0)],\n    fullscreen: [\"tgWebAppFullscreen\", n],\n    initData: [\"tgWebAppData\", N(!0)],\n    initDataRaw: [\"tgWebAppData\", r],\n    platform: [\"tgWebAppPlatform\", e],\n    showSettings: [\"tgWebAppShowSettings\", n],\n    startParam: [\"tgWebAppStartParam\", r],\n    themeParams: [\"tgWebAppThemeParams\", b()],\n    version: [\"tgWebAppVersion\", e]\n  }, \"launchParams\")(t);\n};\n// @__NO_SIDE_EFFECTS__\nfunction $(t) {\n  const {\n    initDataRaw: e,\n    startParam: r,\n    showSettings: n,\n    botInline: o,\n    fullscreen: a,\n    defaultColors: c\n  } = t, s = new URLSearchParams();\n  return s.set(\"tgWebAppPlatform\", t.platform), s.set(\"tgWebAppThemeParams\", /* @__PURE__ */ y(t.themeParams)), s.set(\"tgWebAppVersion\", t.version), e && s.set(\"tgWebAppData\", e), r && s.set(\"tgWebAppStartParam\", r), typeof n == \"boolean\" && s.set(\"tgWebAppShowSettings\", n ? \"1\" : \"0\"), typeof o == \"boolean\" && s.set(\"tgWebAppBotInline\", o ? \"1\" : \"0\"), typeof a == \"boolean\" && s.set(\"tgWebAppFullscreen\", a ? \"1\" : \"0\"), c && s.set(\"tgWebAppDefaultColors\", /* @__PURE__ */ y(c)), s.toString();\n}\nconst j = m({\n  eventType: f(),\n  eventData: (t) => t\n}, \"miniAppsMessage\");\nfunction L(t, e) {\n  return i(e || \"array\", (r) => {\n    let n;\n    if (Array.isArray(r))\n      n = r;\n    else if (typeof r == \"string\")\n      try {\n        const o = JSON.parse(r);\n        Array.isArray(o) && (n = o);\n      } catch {\n      }\n    return n || p(r), n.map(t);\n  });\n}\nconst I = i(\"fn\", (t) => {\n  if (typeof t == \"function\")\n    return t;\n  p(t);\n});\nfunction B(t) {\n  return !!t && typeof t == \"object\" && !Array.isArray(t);\n}\nexport {\n  w as ERR_INVALID_VALUE,\n  d as ERR_PARSE,\n  W as ERR_UNEXPECTED_TYPE,\n  D as ERR_UNEXPECTED_VALUE,\n  L as array,\n  E as boolean,\n  i as createTransformerGen,\n  U as date,\n  I as fn,\n  N as initData,\n  O as isRGB,\n  _ as isRGBShort,\n  B as isRecord,\n  V as launchParams,\n  j as miniAppsMessage,\n  g as number,\n  m as object,\n  T as rgb,\n  R as searchParams,\n  $ as serializeLaunchParams,\n  y as serializeThemeParams,\n  f as string,\n  b as themeParams,\n  C as toRGB,\n  P as toRecord\n};\n//# sourceMappingURL=index.js.map\n","import { isRecord } from '@telegram-apps/transformers';\n\n/**\n * Function which joins passed values with space following these rules:\n * 1. If value is non-empty string, it will be added to output.\n * 2. If value is object, only those keys will be added, which values are truthy.\n * 3. If value is array, classNames will be called with this value spread.\n * 4. All other values are ignored.\n *\n * You can find this function to similar one from the package {@link https://www.npmjs.com/package/classnames|classnames}.\n * @param values - values array.\n * @returns Final class name.\n */\nexport function classNames(...values: any[]): string {\n  return values\n    .map((value) => {\n      if (typeof value === 'string') {\n        return value;\n      }\n\n      if (isRecord(value)) {\n        return classNames(Object.entries(value).map((entry) => entry[1] && entry[0]));\n      }\n\n      if (Array.isArray(value)) {\n        return classNames(...value);\n      }\n    })\n    .filter(Boolean)\n    .join(' ');\n}\n","import { isRecord } from '@telegram-apps/transformers';\nimport type {\n  UnionRequiredKeys,\n  UnionOptionalKeys,\n} from '@telegram-apps/toolkit';\n\nimport { classNames } from './classNames.js';\n\nexport type MergeClassNames<Tuple extends any[]> =\n// Removes all types from union that will be ignored by the mergeClassNames\n// function.\n  Exclude<Tuple[number], number | string | null | undefined | any[] | boolean> extends infer Union\n    ?\n    & { [K in UnionRequiredKeys<Union>]: string; }\n    & { [K in UnionOptionalKeys<Union>]?: string; }\n    : never;\n\n/**\n * Merges two sets of classnames.\n *\n * The function expects to pass an array of objects with values that could be\n * passed to the `classNames` function.\n * @returns An object with keys from all objects with merged values.\n * @see classNames\n */\nexport function mergeClassNames<T extends any[]>(...partials: T): MergeClassNames<T> {\n  return partials.reduce<MergeClassNames<T>>((acc, partial) => {\n    if (isRecord(partial)) {\n      Object.entries(partial).forEach(([key, value]) => {\n        const className = classNames((acc as any)[key], value);\n        if (className) {\n          (acc as any)[key] = className;\n        }\n      });\n    }\n    return acc;\n  }, {} as MergeClassNames<T>);\n}\n","class d extends Error {\n  constructor(t, n, r) {\n    super(\n      typeof n == \"object\" ? n.message : n || t,\n      {\n        cause: typeof n == \"object\" ? n.cause : r\n      }\n    ), this.type = t, Object.setPrototypeOf(this, d.prototype);\n  }\n}\nfunction G(e) {\n  return e.replace(/[A-Z]/g, (t) => `_${t.toLowerCase()}`);\n}\nfunction we(e) {\n  return e.replace(/_[a-z]/g, (t) => t[1].toUpperCase());\n}\nconst he = \"ERR_INVALID_VALUE\", me = \"ERR_UNEXPECTED_VALUE\", de = \"ERR_UNEXPECTED_TYPE\", K = \"ERR_PARSE\";\nfunction V(e, t) {\n  const n = {};\n  for (const r in e) {\n    const o = e[r];\n    if (!o)\n      continue;\n    let s, a;\n    typeof o == \"function\" ? (s = r, a = o) : [s, a] = o;\n    try {\n      const c = a(t(s));\n      c !== void 0 && (n[r] = c);\n    } catch (c) {\n      throw new d(\n        K,\n        `Parser for \"${r}\" property failed${s === r ? \"\" : `. Source field: \"${s}\"`}`,\n        c\n      );\n    }\n  }\n  return n;\n}\nfunction Z(e) {\n  let t = e;\n  if (typeof t == \"string\")\n    try {\n      t = JSON.parse(t);\n    } catch (n) {\n      throw new d(he, { cause: n });\n    }\n  if (typeof t != \"object\" || !t || Array.isArray(t))\n    throw new d(me);\n  return t;\n}\nfunction g(e, t) {\n  return (n) => {\n    const r = (o) => {\n      if (!(n && o === void 0))\n        try {\n          return t(o);\n        } catch (s) {\n          throw new d(K, {\n            message: `\"${e}\" transformer failed to parse the value`,\n            cause: s\n          });\n        }\n    };\n    return /* @__PURE__ */ Object.assign(\n      r,\n      {\n        isValid(o) {\n          try {\n            return r(o), !0;\n          } catch {\n            return !1;\n          }\n        }\n      }\n    );\n  };\n}\nfunction l(e, t) {\n  return g(t || \"object\", (n) => {\n    const r = Z(n);\n    return V(e, (o) => r[o]);\n  });\n}\nfunction R(e) {\n  throw new d(de, `Unexpected value received: ${JSON.stringify(e)}`);\n}\nconst $ = g(\"boolean\", (e) => {\n  if (typeof e == \"boolean\")\n    return e;\n  const t = String(e);\n  if (t === \"1\" || t === \"true\")\n    return !0;\n  if (t === \"0\" || t === \"false\")\n    return !1;\n  R(e);\n}), _ = g(\"string\", (e) => {\n  if (typeof e == \"string\" || typeof e == \"number\")\n    return e.toString();\n  R(e);\n}), P = g(\"number\", (e) => {\n  if (typeof e == \"number\")\n    return e;\n  if (typeof e == \"string\") {\n    const t = Number(e);\n    if (!Number.isNaN(t))\n      return t;\n  }\n  R(e);\n}), Ee = g(\"date\", (e) => e instanceof Date ? e : new Date(P()(e) * 1e3));\nfunction z(e, t) {\n  return g(t || \"searchParams\", (n) => {\n    typeof n != \"string\" && !(n instanceof URLSearchParams) && R(n);\n    const r = typeof n == \"string\" ? new URLSearchParams(n) : n;\n    return V(e, (o) => {\n      const s = r.get(o);\n      return s === null ? void 0 : s;\n    });\n  });\n}\nfunction j(e) {\n  for (const t in e)\n    e[t] = [G(t), e[t]];\n  return e;\n}\nconst ye = (e) => {\n  const t = P(), n = P(!0), r = _(), o = _(!0), s = $(!0), a = l(j({\n    addedToAttachmentMenu: s,\n    allowsWriteToPm: s,\n    firstName: r,\n    id: t,\n    isBot: s,\n    isPremium: s,\n    languageCode: o,\n    lastName: o,\n    photoUrl: o,\n    username: o\n  }), \"User\")(!0);\n  return z(\n    j({\n      authDate: Ee(),\n      canSendAfter: n,\n      chat: l(\n        j({\n          id: t,\n          type: r,\n          title: r,\n          photoUrl: o,\n          username: o\n        }),\n        \"Chat\"\n      )(!0),\n      chatInstance: o,\n      chatType: o,\n      hash: r,\n      queryId: o,\n      receiver: a,\n      startParam: o,\n      signature: r,\n      user: a\n    }),\n    \"initData\"\n  )(e);\n};\nfunction ve(e) {\n  return /^#[\\da-f]{6}$/i.test(e);\n}\nfunction Pe(e) {\n  return /^#[\\da-f]{3}$/i.test(e);\n}\nfunction Re(e) {\n  const t = e.replace(/\\s/g, \"\").toLowerCase();\n  if (ve(t))\n    return t;\n  if (Pe(t)) {\n    let r = \"#\";\n    for (let o = 0; o < 3; o += 1)\n      r += t[1 + o].repeat(2);\n    return r;\n  }\n  const n = t.match(/^rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)$/) || t.match(/^rgba\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3}),\\d{1,3}\\)$/);\n  if (!n)\n    throw new Error(`Value \"${e}\" does not satisfy any of known RGB formats.`);\n  return n.slice(1).reduce((r, o) => {\n    const s = parseInt(o, 10).toString(16);\n    return r + (s.length === 1 ? \"0\" : \"\") + s;\n  }, \"#\");\n}\nconst Te = g(\"rgb\", (e) => Re(_()(e))), I = g(\n  \"themeParams\",\n  (e) => {\n    const t = Te(!0);\n    return Object.entries(Z(e)).reduce((n, [r, o]) => (n[we(r)] = t(o), n), {});\n  }\n);\n// @__NO_SIDE_EFFECTS__\nfunction W(e) {\n  return JSON.stringify(\n    Object.fromEntries(\n      Object.entries(e).map(([t, n]) => [G(t), n])\n    )\n  );\n}\nconst Ae = (e) => {\n  const t = _(), n = _(!0), r = $(!0);\n  return z({\n    botInline: [\"tgWebAppBotInline\", r],\n    defaultColors: [\"tgWebAppDefaultColors\", I(!0)],\n    fullscreen: [\"tgWebAppFullscreen\", r],\n    initData: [\"tgWebAppData\", ye(!0)],\n    initDataRaw: [\"tgWebAppData\", n],\n    platform: [\"tgWebAppPlatform\", t],\n    showSettings: [\"tgWebAppShowSettings\", r],\n    startParam: [\"tgWebAppStartParam\", n],\n    themeParams: [\"tgWebAppThemeParams\", I()],\n    version: [\"tgWebAppVersion\", t]\n  }, \"launchParams\")(e);\n};\n// @__NO_SIDE_EFFECTS__\nfunction Se(e) {\n  const {\n    initDataRaw: t,\n    startParam: n,\n    showSettings: r,\n    botInline: o,\n    fullscreen: s,\n    defaultColors: a\n  } = e, c = new URLSearchParams();\n  return c.set(\"tgWebAppPlatform\", e.platform), c.set(\"tgWebAppThemeParams\", /* @__PURE__ */ W(e.themeParams)), c.set(\"tgWebAppVersion\", e.version), t && c.set(\"tgWebAppData\", t), n && c.set(\"tgWebAppStartParam\", n), typeof r == \"boolean\" && c.set(\"tgWebAppShowSettings\", r ? \"1\" : \"0\"), typeof o == \"boolean\" && c.set(\"tgWebAppBotInline\", o ? \"1\" : \"0\"), typeof s == \"boolean\" && c.set(\"tgWebAppFullscreen\", s ? \"1\" : \"0\"), a && c.set(\"tgWebAppDefaultColors\", /* @__PURE__ */ W(a)), c.toString();\n}\nconst X = l({\n  eventType: _(),\n  eventData: (e) => e\n}, \"miniAppsMessage\"), Y = g(\"fn\", (e) => {\n  if (typeof e == \"function\")\n    return e;\n  R(e);\n});\nfunction $e(e) {\n  return !!e && typeof e == \"object\" && !Array.isArray(e);\n}\nconst Ce = l({\n  TelegramWebviewProxy: l({ postEvent: Y() })()\n});\nfunction Q(e) {\n  return Ce().isValid(e);\n}\nfunction Ne() {\n  try {\n    return window.self !== window.top;\n  } catch {\n    return !0;\n  }\n}\nvar De = Object.defineProperty, je = (e, t, n) => t in e ? De(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n, ee = (e, t, n) => je(e, typeof t != \"symbol\" ? t + \"\" : t, n);\nclass b extends Error {\n  constructor(t, n, r) {\n    super(\n      typeof n == \"object\" ? n.message : n || t,\n      {\n        cause: typeof n == \"object\" ? n.cause : r\n      }\n    ), this.type = t, Object.setPrototypeOf(this, b.prototype);\n  }\n}\nfunction te(e, t, n) {\n  return e.addEventListener(t, n), () => e.removeEventListener(t, n);\n}\nfunction k(...e) {\n  const t = e.flat(1);\n  return [\n    t.push.bind(t),\n    () => {\n      t.forEach((n) => {\n        n();\n      });\n    }\n  ];\n}\nfunction Ue(e, t) {\n  return e instanceof b && e.type === t;\n}\nfunction L(e) {\n  return (t) => Ue(t, e);\n}\nconst ne = \"ERR_ABORTED\", re = \"ERR_CANCELED\", oe = \"ERR_TIMED_OUT\";\nfunction M(e) {\n  return new b(ne, { cause: e });\n}\nconst rt = L(oe), ot = L(ne), st = L(re);\nfunction F(e, t) {\n  return e.reject = t.reject, e;\n}\nclass w extends Promise {\n  constructor(t, n) {\n    let r, o;\n    typeof t == \"function\" ? (r = t, o = n) : o = t;\n    let s, a;\n    super((c, i) => {\n      o || (o = {});\n      const { abortSignal: u } = o;\n      if (u && u.aborted)\n        return i(M(u.reason));\n      const [f, h] = k(), m = (E) => (...ge) => (h(), E(...ge)), T = new AbortController(), { signal: A } = T;\n      a = m((E) => {\n        T.abort(E), i(E);\n      }), s = m(c), u && f(\n        te(u, \"abort\", () => {\n          a(M(u.reason));\n        })\n      );\n      const { timeout: D } = o;\n      if (D) {\n        const E = setTimeout(() => {\n          a(new b(oe, `Timeout reached: ${D}ms`));\n        }, D);\n        f(() => {\n          clearTimeout(E);\n        });\n      }\n      r && r(s, a, A);\n    }), ee(this, \"reject\"), this.reject = a;\n  }\n  /**\n   * Creates a new BetterPromise instance using executor, resolving promise when a result\n   * was returned.\n   * @param fn - function returning promise result.\n   * @param options - additional options.\n   */\n  static withFn(t, n) {\n    return new w((r, o, s) => {\n      try {\n        const a = t(s);\n        return a instanceof Promise ? a.then(r, o) : r(a);\n      } catch (a) {\n        o(a);\n      }\n    }, n);\n  }\n  /**\n   * @see Promise.resolve\n   */\n  static resolve(t) {\n    return new w((n) => {\n      n(t);\n    });\n  }\n  /**\n   * @see Promise.reject\n   */\n  static reject(t) {\n    return new w((n, r) => {\n      r(t);\n    });\n  }\n  /**\n   * Cancels the promise execution.\n   */\n  cancel() {\n    this.reject(new b(re));\n  }\n  /**\n   * @see Promise.catch\n   */\n  catch(t) {\n    return this.then(void 0, t);\n  }\n  /**\n   * @see Promise.finally\n   */\n  finally(t) {\n    return F(super.finally(t), this);\n  }\n  /**\n   * @see Promise.then\n   */\n  then(t, n) {\n    return F(super.then(t, n), this);\n  }\n}\nfunction J(e, t) {\n  return e.resolve = t.resolve, e;\n}\nclass S extends w {\n  constructor(t, n) {\n    let r, o;\n    typeof t == \"function\" ? (r = t, o = n) : o = t;\n    let s;\n    super((a, c, i) => {\n      s = a, r && r(a, c, i);\n    }, o), ee(this, \"resolve\"), this.resolve = s;\n  }\n  /**\n   * Creates a new EnhancedPromise instance using executor, resolving promise when a result\n   * was returned.\n   * @param fn - function returning promise result.\n   * @param options - additional options.\n   */\n  static withFn(t, n) {\n    return new S(\n      (r, o, s) => w.withFn(t, { abortSignal: s }).then(r, o),\n      n\n    );\n  }\n  /**\n   * @see Promise.resolve\n   */\n  static resolve(t) {\n    return new S((n) => {\n      n(t);\n    });\n  }\n  /**\n   * @see Promise.reject\n   */\n  static reject(t) {\n    return new S((n, r) => {\n      r(t);\n    });\n  }\n  /**\n   * @see Promise.catch\n   */\n  catch(t) {\n    return this.then(void 0, t);\n  }\n  /**\n   * @see Promise.finally\n   */\n  finally(t) {\n    return J(super.finally(t), this);\n  }\n  /**\n   * @see Promise.then\n   */\n  then(t, n) {\n    return J(super.then(t, n), this);\n  }\n}\nfunction at(e, t) {\n  return new w((n) => {\n    setTimeout(n, e);\n  }, { abortSignal: t });\n}\nfunction se(e) {\n  return `tapps/${e}`;\n}\nfunction We(e, t) {\n  sessionStorage.setItem(se(e), JSON.stringify(t));\n}\nfunction xe(e) {\n  const t = sessionStorage.getItem(se(e));\n  try {\n    return t ? JSON.parse(t) : void 0;\n  } catch {\n  }\n}\nfunction ct(e) {\n  return e.replace(/[A-Z]/g, (t) => `-${t.toLowerCase()}`);\n}\nfunction it(e) {\n  return e.replace(/[A-Z]/g, (t) => `_${t.toLowerCase()}`);\n}\nfunction ut(e) {\n  return e.replace(/_[a-z]/g, (t) => t[1].toUpperCase());\n}\n// @__NO_SIDE_EFFECTS__\nfunction ke(e, t) {\n  t || (t = {});\n  const {\n    textColor: n,\n    bgColor: r,\n    shouldLog: o = !0\n  } = t;\n  function s(a, ...c) {\n    if (!o || typeof o == \"function\" && !o())\n      return;\n    const i = \"font-weight:bold;padding:0 5px;border-radius:5px\";\n    console[a](\n      `%c${Intl.DateTimeFormat(\"en-GB\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\",\n        fractionalSecondDigits: 3,\n        timeZone: \"UTC\"\n      }).format(/* @__PURE__ */ new Date())}%c / %c${e}`,\n      `${i};background-color: lightblue;color:black`,\n      \"\",\n      `${i};${n ? `color:${n};` : \"\"}${r ? `background-color:${r}` : \"\"}`,\n      ...c\n    );\n  }\n  return [\n    function(...a) {\n      s(\"log\", ...a);\n    },\n    function(...a) {\n      s(\"error\", ...a);\n    }\n  ];\n}\nfunction pt(e, t) {\n  document.documentElement.style.setProperty(e, t);\n}\nfunction ft(e) {\n  document.documentElement.style.removeProperty(e);\n}\nfunction Le(e, t) {\n  t();\n}\n// @__NO_SIDE_EFFECTS__\nfunction y(e, t) {\n  t || (t = {});\n  const n = t.equals || Object.is;\n  let r = [], o = e;\n  const s = (u) => {\n    if (!n(o, u)) {\n      const f = o;\n      o = u, Le(i, () => {\n        [...r].forEach(([h, m]) => {\n          h(u, f), m && c(h, !0);\n        });\n      });\n    }\n  };\n  function a(u) {\n    const f = typeof u != \"object\" ? { once: u } : u;\n    return {\n      once: f.once || !1,\n      signal: f.signal || !1\n    };\n  }\n  const c = (u, f) => {\n    const h = a(f), m = r.findIndex(([T, A]) => T === u && A.once === h.once && A.signal === h.signal);\n    m >= 0 && r.splice(m, 1);\n  }, i = Object.assign(\n    function() {\n      return Oe(i), o;\n    },\n    {\n      destroy() {\n        r = [];\n      },\n      set: s,\n      reset() {\n        s(e);\n      },\n      sub(u, f) {\n        return r.push([u, a(f)]), () => c(u, f);\n      },\n      unsub: c,\n      unsubAll() {\n        r = r.filter((u) => u[1].signal);\n      }\n    }\n  );\n  return i;\n}\nconst U = [];\nfunction Oe(e) {\n  U.length && U[U.length - 1].add(e);\n}\nconst ae = /* @__PURE__ */ y(!1), [O, qe] = /* @__PURE__ */ ke(\"Bridge\", {\n  bgColor: \"#9147ff\",\n  textColor: \"white\",\n  shouldLog: ae\n}), Ie = {\n  clipboard_text_received: l({\n    req_id: _(),\n    data: (e) => e === null ? e : _(!0)(e)\n  }, \"clipboard_text_received\"),\n  custom_method_invoked: l({\n    req_id: _(),\n    result: (e) => e,\n    error: _(!0)\n  }, \"custom_method_invoked\"),\n  popup_closed: g(\"popup_closed\", (e) => e ? l({\n    button_id: (t) => t == null ? void 0 : _()(t)\n  })()(e) : {}),\n  viewport_changed: l({\n    height: P(),\n    width: (e) => e == null ? window.innerWidth : P()(e),\n    is_state_stable: $(),\n    is_expanded: $()\n  }, \"viewport_changed\")\n};\nfunction Me(e) {\n  const t = window, [, n] = k(\n    // Add listener, which handles events sent from the Telegram web application and also events\n    // generated by the local emitEvent function.\n    te(t, \"message\", (r) => {\n      if (r.source !== t.parent)\n        return;\n      let o;\n      try {\n        o = X()(r.data);\n      } catch {\n        return;\n      }\n      const { eventType: s, eventData: a } = o, c = Ie[s];\n      try {\n        const i = c ? c()(a) : a;\n        O(\"Event received:\", i ? { eventType: s, eventData: i } : { eventType: s }), e([s, i]);\n      } catch (i) {\n        qe(\n          [\n            `An error occurred processing the \"${s}\" event from the Telegram application.`,\n            \"Please, file an issue here:\",\n            \"https://github.com/Telegram-Mini-Apps/telegram-apps/issues/new/choose\"\n          ].join(`\n`),\n          o,\n          i\n        );\n      }\n    })\n  );\n  return n;\n}\nconst C = /* @__PURE__ */ y(), N = /* @__PURE__ */ y();\nfunction ce() {\n  return N() || N.set(Me(C.set)), C;\n}\nconst v = /* @__PURE__ */ y({});\nfunction ie(e) {\n  let t = v()[e];\n  return t || (t = /* @__PURE__ */ y(void 0, {\n    equals() {\n      return !1;\n    }\n  }), ce().sub((n) => {\n    n && n[0] === e && t.set(n[1]);\n  }), v.set({ ...v(), [e]: t })), t;\n}\nfunction Fe(e, t, n) {\n  return ie(e).sub(t, n);\n}\nconst Je = \"ERR_METHOD_UNSUPPORTED\", Be = \"ERR_RETRIEVE_LP_FAILED\", He = \"ERR_METHOD_PARAMETER_UNSUPPORTED\", Ge = \"ERR_UNKNOWN_ENV\", Ke = \"ERR_INVOKE_CUSTOM_METHOD_RESPONSE\", ue = /* @__PURE__ */ y(\"https://web.telegram.org\");\nfunction pe(e, t) {\n  O(\"Posting event:\", t ? { eventType: e, eventData: t } : { eventType: e });\n  const n = window;\n  if (Q(n)) {\n    n.TelegramWebviewProxy.postEvent(e, JSON.stringify(t));\n    return;\n  }\n  const r = JSON.stringify({ eventType: e, eventData: t });\n  if (Ne())\n    return n.parent.postMessage(r, ue());\n  const { external: o } = n;\n  if (l({ notify: Y() })().isValid(o)) {\n    o.notify(r);\n    return;\n  }\n  throw new b(Ge);\n}\nfunction fe(e, t, n) {\n  n || (n = {});\n  const { capture: r } = n, [o, s] = k();\n  return new w((a) => {\n    (Array.isArray(t) ? t : [t]).forEach((c) => {\n      o(\n        Fe(c, (i) => {\n          (!r || (Array.isArray(t) ? r({\n            event: c,\n            payload: i\n          }) : r(i))) && a(i);\n        })\n      );\n    }), (n.postEvent || pe)(e, n.params);\n  }, n).finally(s);\n}\nfunction q(e) {\n  return Ae()(e);\n}\nfunction _e(e) {\n  return q(\n    e.replace(/^[^?#]*[?#]/, \"\").replace(/[?#]/g, \"&\")\n  );\n}\nfunction Ve() {\n  return _e(window.location.href);\n}\nfunction Ze() {\n  const e = performance.getEntriesByType(\"navigation\")[0];\n  if (!e)\n    throw new Error(\"Unable to get first navigation entry.\");\n  return _e(e.name);\n}\nconst ze = \"launchParams\";\nfunction Xe() {\n  return q(xe(ze) || \"\");\n}\nfunction le(e) {\n  We(\"launchParams\", /* @__PURE__ */ Se(e));\n}\nfunction be(e) {\n  return e instanceof Error ? e.message + (e.cause ? `\n  ${be(e.cause)}` : \"\") : JSON.stringify(e);\n}\nfunction Ye() {\n  const e = [];\n  for (const t of [\n    // Try to retrieve launch parameters from the current location. This method can return\n    // nothing in case, location was changed, and then the page was reloaded.\n    Ve,\n    // Then, try using the lower level API - window.performance.\n    Ze,\n    // Finally, try to extract launch parameters from the session storage.\n    Xe\n  ])\n    try {\n      const n = t();\n      return le(n), n;\n    } catch (n) {\n      e.push(n);\n    }\n  throw new b(Be, [\n    \"Unable to retrieve launch parameters from any known source. Perhaps, you have opened your app outside Telegram?\",\n    \"📖 Refer to docs for more information:\",\n    \"https://docs.telegram-mini-apps.com/packages/telegram-apps-sdk/environment\",\n    \"Collected errors:\",\n    ...e.map((t) => `— ${be(t)}`)\n  ].join(`\n`));\n}\nfunction _t(e) {\n  if (e === \"simple\")\n    try {\n      return Ye(), !0;\n    } catch {\n      return !1;\n    }\n  return w.withFn(async () => {\n    if (Q(window))\n      return !0;\n    try {\n      return await fe(\"web_app_request_theme\", \"theme_changed\", { timeout: 100 }), !0;\n    } catch {\n      return !1;\n    }\n  }, e);\n}\nfunction x(e, t) {\n  window.dispatchEvent(new MessageEvent(\"message\", {\n    data: JSON.stringify({ eventType: e, eventData: t }),\n    // We specify window.parent to imitate the case, the parent iframe sent us this event.\n    source: window.parent\n  }));\n}\nfunction Qe(e, t) {\n  if (typeof t == \"string\")\n    try {\n      const { eventType: n } = X()(t);\n      n === \"web_app_request_theme\" && x(\"theme_changed\", {\n        theme_params: JSON.parse(/* @__PURE__ */ W(e))\n      }), n === \"web_app_request_viewport\" && x(\"viewport_changed\", {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        is_state_stable: !0,\n        is_expanded: !0\n      });\n    } catch {\n    }\n}\nfunction lt(e) {\n  var r;\n  const t = typeof e == \"string\" ? q(e) : e;\n  le(t);\n  const n = (r = window.TelegramWebviewProxy) == null ? void 0 : r.postEvent;\n  window.TelegramWebviewProxy = {\n    postEvent(o, s) {\n      Qe(t.themeParams, JSON.stringify({ eventType: o, eventData: s })), n == null || n(o, s);\n    }\n  }, O(\"Environment was mocked by the mockTelegramEnv function\");\n}\nfunction bt() {\n  [\n    [\"TelegramGameProxy_receiveEvent\"],\n    // Windows Phone.\n    [\"TelegramGameProxy\", \"receiveEvent\"],\n    // Desktop.\n    [\"Telegram\", \"WebView\", \"receiveEvent\"]\n    // Android and iOS.\n  ].forEach((e) => {\n    let t = window;\n    e.forEach((n, r, o) => {\n      if (r === o.length - 1) {\n        t[n] = x;\n        return;\n      }\n      n in t || (t[n] = {}), t = t[n];\n    });\n  });\n}\nfunction gt() {\n  [\"TelegramGameProxy_receiveEvent\", \"TelegramGameProxy\", \"Telegram\"].forEach((e) => {\n    delete window[e];\n  });\n}\nfunction wt(e, t, n) {\n  ie(e).unsub(t, n);\n}\nfunction ht(e, t) {\n  return ce().sub(e, t);\n}\nfunction mt(e, t) {\n  C.unsub(e, t);\n}\nfunction et(e) {\n  return ({ req_id: t }) => t === e;\n}\nfunction B(e) {\n  return e.split(\".\").map(Number);\n}\nfunction tt(e, t) {\n  const n = B(e), r = B(t), o = Math.max(n.length, r.length);\n  for (let s = 0; s < o; s += 1) {\n    const a = n[s] || 0, c = r[s] || 0;\n    if (a !== c)\n      return a > c ? 1 : -1;\n  }\n  return 0;\n}\nfunction p(e, t) {\n  return tt(e, t) <= 0;\n}\nfunction H(e, t, n) {\n  if (typeof n == \"string\") {\n    if (e === \"web_app_open_link\") {\n      if (t === \"try_instant_view\")\n        return p(\"6.4\", n);\n      if (t === \"try_browser\")\n        return p(\"7.6\", n);\n    }\n    if (e === \"web_app_set_header_color\" && t === \"color\")\n      return p(\"6.9\", n);\n    if (e === \"web_app_close\" && t === \"return_back\")\n      return p(\"7.6\", n);\n    if (e === \"web_app_setup_main_button\" && t === \"has_shine_effect\")\n      return p(\"7.10\", n);\n  }\n  switch (e) {\n    case \"web_app_open_tg_link\":\n    case \"web_app_open_invoice\":\n    case \"web_app_setup_back_button\":\n    case \"web_app_set_background_color\":\n    case \"web_app_set_header_color\":\n    case \"web_app_trigger_haptic_feedback\":\n      return p(\"6.1\", t);\n    case \"web_app_open_popup\":\n      return p(\"6.2\", t);\n    case \"web_app_close_scan_qr_popup\":\n    case \"web_app_open_scan_qr_popup\":\n    case \"web_app_read_text_from_clipboard\":\n      return p(\"6.4\", t);\n    case \"web_app_switch_inline_query\":\n      return p(\"6.7\", t);\n    case \"web_app_invoke_custom_method\":\n    case \"web_app_request_write_access\":\n    case \"web_app_request_phone\":\n      return p(\"6.9\", t);\n    case \"web_app_setup_settings_button\":\n      return p(\"6.10\", t);\n    case \"web_app_biometry_get_info\":\n    case \"web_app_biometry_open_settings\":\n    case \"web_app_biometry_request_access\":\n    case \"web_app_biometry_request_auth\":\n    case \"web_app_biometry_update_token\":\n      return p(\"7.2\", t);\n    case \"web_app_setup_swipe_behavior\":\n      return p(\"7.7\", t);\n    case \"web_app_share_to_story\":\n      return p(\"7.8\", t);\n    case \"web_app_setup_secondary_button\":\n    case \"web_app_set_bottom_bar_color\":\n      return p(\"7.10\", t);\n    case \"web_app_request_safe_area\":\n    case \"web_app_request_content_safe_area\":\n    case \"web_app_request_fullscreen\":\n    case \"web_app_exit_fullscreen\":\n    case \"web_app_set_emoji_status\":\n    case \"web_app_request_emoji_status_access\":\n      return p(\"8.0\", t);\n    default:\n      return [\n        \"iframe_ready\",\n        \"iframe_will_reload\",\n        \"web_app_close\",\n        \"web_app_data_send\",\n        \"web_app_expand\",\n        \"web_app_open_link\",\n        \"web_app_ready\",\n        \"web_app_request_theme\",\n        \"web_app_request_viewport\",\n        \"web_app_setup_main_button\",\n        \"web_app_setup_closing_behavior\"\n      ].includes(e);\n  }\n}\nfunction dt(e, t) {\n  t || (t = \"strict\");\n  const n = typeof t == \"function\" ? t : (r) => {\n    const { method: o, version: s } = r;\n    let a, c;\n    if (\"param\" in r ? (a = `Parameter \"${r.param}\" of \"${o}\" method is unsupported in Mini Apps version ${s}`, c = He) : (a = `Method \"${o}\" is unsupported in Mini Apps version ${s}`, c = Je), t === \"strict\")\n      throw new b(c, a);\n    return console.warn(a);\n  };\n  return (r, o) => H(r, e) ? $e(o) && r === \"web_app_set_header_color\" && \"color\" in o && !H(r, \"color\", e) ? n({ version: e, method: r, param: \"color\" }) : pe(r, o) : n({ version: e, method: r });\n}\nfunction Et(e, t, n, r) {\n  return fe(\"web_app_invoke_custom_method\", \"custom_method_invoked\", {\n    ...r || {},\n    params: { method: e, params: t, req_id: n },\n    capture: et(n)\n  }).then(({ result: o, error: s }) => {\n    if (s)\n      throw new b(Ke, s);\n    return o;\n  });\n}\nfunction nt(e) {\n  e.unsubAll(), e.reset();\n}\nfunction yt() {\n  var e;\n  (e = N()) == null || e(), [\n    ...Object.values(v()),\n    v,\n    C,\n    N,\n    ue,\n    ae\n  ].forEach(nt);\n}\nexport {\n  ae as $debug,\n  ue as $targetOrigin,\n  w as CancelablePromise,\n  ne as ERR_ABORTED,\n  re as ERR_CANCELED,\n  Ke as ERR_CUSTOM_METHOD_ERR_RESPONSE,\n  He as ERR_METHOD_PARAMETER_UNSUPPORTED,\n  Je as ERR_METHOD_UNSUPPORTED,\n  Be as ERR_RETRIEVE_LP_FAILED,\n  oe as ERR_TIMED_OUT,\n  Ge as ERR_UNKNOWN_ENV,\n  S as EnhancedPromise,\n  b as TypedError,\n  te as addEventListener,\n  ct as camelToKebab,\n  it as camelToSnake,\n  et as captureSameReq,\n  tt as compareVersions,\n  M as createAbortError,\n  k as createCbCollector,\n  ke as createLogger,\n  dt as createPostEvent,\n  L as createTypedErrorPredicate,\n  bt as defineEventHandlers,\n  ft as deleteCssVar,\n  x as emitMiniAppsEvent,\n  xe as getStorageValue,\n  Q as hasWebviewProxy,\n  Et as invokeCustomMethod,\n  ot as isAbortError,\n  st as isCanceledError,\n  Ne as isIframe,\n  _t as isTMA,\n  rt as isTimeoutError,\n  lt as mockTelegramEnv,\n  wt as off,\n  Fe as on,\n  pe as postEvent,\n  gt as removeEventHandlers,\n  fe as request,\n  yt as resetPackageState,\n  Ye as retrieveLaunchParams,\n  pt as setCssVar,\n  We as setStorageValue,\n  at as sleep,\n  ut as snakeToCamel,\n  ht as subscribe,\n  H as supports,\n  mt as unsubscribe\n};\n//# sourceMappingURL=index.js.map\n","function i() {\n  return performance.getEntriesByType(\"navigation\")[0];\n}\nfunction c() {\n  const t = i();\n  return !!t && t.type === \"reload\";\n}\nfunction o(t, n) {\n  return t.startsWith(n) ? t : `${n}${t}`;\n}\nfunction R(t) {\n  return new URL(\n    typeof t == \"string\" ? t : [\n      t.pathname || \"\",\n      o(t.search || \"\", \"?\"),\n      o(t.hash || \"\", \"#\")\n    ].join(\"\"),\n    \"http://a\"\n  );\n}\nfunction a(t) {\n  const n = (typeof t == \"string\" ? t : t.pathname || \"\").startsWith(\"/\"), e = R(t), { pathname: s } = e;\n  return `${n ? s : s.slice(1)}${e.search}${e.hash}`;\n}\nconst r = \"ERR_NAVIGATION_HISTORY_EMPTY\", I = \"ERR_NAVIGATION_CURSOR_INVALID\";\nexport {\n  I as ERR_CURSOR_INVALID,\n  r as ERR_HISTORY_EMPTY,\n  R as createSafeURL,\n  o as ensurePrefix,\n  i as getFirstNavigationEntry,\n  c as isPageReload,\n  a as urlToPath\n};\n//# sourceMappingURL=index.js.map\n","let r;\nfunction y(e, c) {\n  r && r.set(e, c) || c();\n}\nfunction m(e) {\n  if (r)\n    return e();\n  r = /* @__PURE__ */ new Map();\n  try {\n    e();\n  } finally {\n    r.forEach((c) => c()), r = void 0;\n  }\n}\n// @__NO_SIDE_EFFECTS__\nfunction S(e, c) {\n  c || (c = {});\n  const g = c.equals || Object.is;\n  let u = [], s = e;\n  const i = (t) => {\n    if (!g(s, t)) {\n      const l = s;\n      s = t, y(o, () => {\n        [...u].forEach(([f, d]) => {\n          f(t, l), d && n(f, !0);\n        });\n      });\n    }\n  };\n  function a(t) {\n    const l = typeof t != \"object\" ? { once: t } : t;\n    return {\n      once: l.once || !1,\n      signal: l.signal || !1\n    };\n  }\n  const n = (t, l) => {\n    const f = a(l), d = u.findIndex(([h, p]) => h === t && p.once === f.once && p.signal === f.signal);\n    d >= 0 && u.splice(d, 1);\n  }, o = Object.assign(\n    function() {\n      return j(o), s;\n    },\n    {\n      destroy() {\n        u = [];\n      },\n      set: i,\n      reset() {\n        i(e);\n      },\n      sub(t, l) {\n        return u.push([t, a(l)]), () => n(t, l);\n      },\n      unsub: n,\n      unsubAll() {\n        u = u.filter((t) => t[1].signal);\n      }\n    }\n  );\n  return o;\n}\nconst b = [];\nfunction j(e) {\n  b.length && b[b.length - 1].add(e);\n}\n// @__NO_SIDE_EFFECTS__\nfunction x(e, c) {\n  let g = /* @__PURE__ */ new Set(), u;\n  function s() {\n    return u || (u = /* @__PURE__ */ S(a(), c));\n  }\n  function i() {\n    s().set(a());\n  }\n  function a() {\n    g.forEach((t) => {\n      t.unsub(i, { signal: !0 });\n    });\n    const n = /* @__PURE__ */ new Set();\n    let o;\n    b.push(n);\n    try {\n      o = e();\n    } finally {\n      b.pop();\n    }\n    return n.forEach((t) => {\n      t.sub(i, { signal: !0 });\n    }), g = n, o;\n  }\n  return Object.assign(function() {\n    return s()();\n  }, {\n    destroy() {\n      s().destroy();\n    },\n    sub(...n) {\n      return s().sub(...n);\n    },\n    unsub(...n) {\n      s().unsub(...n);\n    },\n    unsubAll(...n) {\n      s().unsubAll(...n);\n    }\n  });\n}\nexport {\n  m as batch,\n  x as computed,\n  S as signal\n};\n//# sourceMappingURL=index.js.map\n","import {\n  retrieveLaunchParams,\n  postEvent as _postEvent,\n  request as _request,\n  invokeCustomMethod as _invokeCustomMethod,\n  createPostEvent,\n  type PostEventFn,\n  type Version,\n  type RequestFn,\n  type CancelablePromise,\n  type ExecuteWithOptions,\n  type CustomMethodParams,\n  type CustomMethodName,\n} from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\n\nexport interface ConfigureOptions {\n  /**\n   * A maximum supported Mini Apps version.\n   * @default Being extracted using the `retrieveLaunchParams` function.\n   * @see retrieveLaunchParams\n   */\n  version?: Version;\n  /**\n   * Custom postEvent function.\n   *\n   * Passing the \"strict\" value creates a function, which always checks if specified call supported\n   * by currently supported Mini Apps version. If the method is unsupported, an error will be\n   * thrown.\n   *\n   * Passing the \"non-strict\" value creates a postEvent function not throwing any errors, but\n   * warning about a missing method support.\n   *\n   * @default 'strict'\n   * @see createPostEvent\n   */\n  postEvent?: PostEventFn;\n}\n\n/**\n * Signal with a request identifier generator. Usually, you don't need to set this value manually.\n */\nexport const $createRequestId = signal((() => {\n  let requestId = 0;\n  return () => (requestId += 1).toString();\n})());\n\n/**\n * Signal with a currently used postEvent function across the package.\n */\nexport const $postEvent = signal<PostEventFn>(_postEvent);\n\n/**\n * Signal with a currently supported maximum Mini Apps version. This value is usually set via\n */\nexport const $version = signal<Version>('0.0');\n\n/**\n * Configures package global dependencies.\n * @param options - configuration additional options.\n */\nexport function configure(options?: ConfigureOptions): void {\n  options ||= {};\n  const { postEvent: optionsPostEvent } = options;\n  const v = options.version || retrieveLaunchParams().version;\n  $version.set(v);\n  $postEvent.set(\n    typeof optionsPostEvent === 'function'\n      ? optionsPostEvent\n      : createPostEvent(v),\n  );\n}\n\n/**\n * Creates a new request id.\n */\nexport function createRequestId(): string {\n  return $createRequestId()();\n}\n\n/**\n * Invokes known custom method. Returns method execution result.\n * @param method - method name.\n * @param params - method parameters.\n * @param options - additional options.\n * @throws {TypedError} ERR_CUSTOM_METHOD_ERR_RESPONSE\n */\nexport function invokeCustomMethod<M extends CustomMethodName>(\n  method: M,\n  params: CustomMethodParams<M>,\n  options?: ExecuteWithOptions,\n): CancelablePromise<unknown>;\n\n/**\n * Invokes unknown custom method. Returns method execution result.\n * @param method - method name.\n * @param params - method parameters.\n * @param options - additional options.\n * @throws {TypedError} ERR_CUSTOM_METHOD_ERR_RESPONSE\n */\nexport function invokeCustomMethod(\n  method: string,\n  params: object,\n  options?: ExecuteWithOptions,\n): CancelablePromise<unknown>;\n\nexport function invokeCustomMethod(\n  method: string,\n  params: object,\n  options?: ExecuteWithOptions,\n): CancelablePromise<unknown> {\n  return _invokeCustomMethod(method, params, createRequestId(), {\n    ...options || {},\n    postEvent: postEvent,\n  });\n}\n\n/**\n * `request` function from the bridge with applied global `postEvent` option.\n */\nexport const request = ((method: any, eventOrEvents: any, options: any) => {\n  options ||= {};\n  options.postEvent ||= postEvent;\n  return _request(method, eventOrEvents, options);\n}) as RequestFn;\n\n/**\n * Shortcut for $postEvent call.\n */\nexport const postEvent = ((method: any, params: any) => {\n  return $postEvent()(method, params);\n}) as PostEventFn;\n","import { type Computed, computed } from '@telegram-apps/signals';\nimport { type MethodName, supports } from '@telegram-apps/bridge';\n\nimport { $version } from '@/scopes/globals.js';\n\n/**\n * @returns A signal indicating if the specified Mini Apps method is supported.\n * @param method - Mini Apps method name\n */\nexport function createIsSupported(method: MethodName): Computed<boolean> {\n  return computed(() => supports(method, $version()));\n}","export const ERR_POPUP_INVALID_PARAMS = 'ERR_POPUP_INVALID_PARAMS';\nexport const ERR_INVALID_URL = 'ERR_INVALID_URL';\nexport const ERR_INVALID_SLUG = 'ERR_INVALID_SLUG';\nexport const ERR_DATA_INVALID_SIZE = 'ERR_DATA_INVALID_SIZE';\nexport const ERR_ACCESS_DENIED = 'ERR_ACCESS_DENIED';\nexport const ERR_ALREADY_REQUESTING = 'ERR_ALREADY_REQUESTING';\nexport const ERR_ALREADY_OPENED = 'ERR_ALREADY_OPENED';\nexport const ERR_ALREADY_MOUNTING = 'ERR_ALREADY_MOUNTING';\nexport const ERR_CSS_VARS_ALREADY_BOUND = 'ERR_VARS_ALREADY_BOUND';\nexport const ERR_NOT_AVAILABLE = 'ERR_NOT_AVAILABLE';\nexport const ERR_NOT_INITIALIZED = 'ERR_NOT_INITIALIZED';\nexport const ERR_NOT_SUPPORTED = 'ERR_NOT_SUPPORTED';\nexport const ERR_NOT_MOUNTED = 'ERR_NOT_MOUNTED';\nexport const ERR_FULLSCREEN_FAILED = 'ERR_FULLSCREEN_FAILED';\nexport const ERR_EMOJI_STATUS_SET_FAILED = 'ERR_EMOJI_STATUS_SET_FAILED';\n","/**\n * @returns True, if current environment is server.\n */\nexport function isSSR(): boolean {\n  return typeof window === 'undefined';\n}\n","import {\n  ERR_UNKNOWN_ENV,\n  type If,\n  type MethodName,\n  supports,\n  isTMA,\n  TypedError,\n  type MethodNameWithVersionedParams,\n  type MethodVersionedParams, IsNever,\n} from '@telegram-apps/bridge';\nimport { type Computed, computed } from '@telegram-apps/signals';\n\nimport { $version } from '@/scopes/globals.js';\nimport {\n  ERR_NOT_INITIALIZED,\n  ERR_NOT_MOUNTED,\n  ERR_NOT_SUPPORTED,\n} from '@/errors.js';\nimport { isSSR } from '@/utils/isSSR.js';\nimport type { AnyFn } from '@/types.js';\n\ntype HasCheckSupportMethodTuple<FnArgs extends any[]> = {\n  [M in MethodNameWithVersionedParams]: [\n    method: M,\n    parameter: MethodVersionedParams<M>,\n    shouldCheck: (...args: FnArgs) => boolean,\n  ]\n}[MethodNameWithVersionedParams];\n\ninterface CustomSupportValidator {\n  fn: () => boolean;\n  error: string;\n}\n\nexport type IsSupported =\n  | MethodName\n  | CustomSupportValidator\n  | (MethodName | CustomSupportValidator)[]\n  | { any: (MethodName | CustomSupportValidator)[] };\n\nexport type Supports<Fn extends AnyFn> = Record<string, HasCheckSupportMethodTuple<Parameters<Fn>>>\n\nexport type SafeWrapped<\n  Fn extends AnyFn,\n  Supported extends boolean,\n  SupportsSchema extends Record<string, any>\n> =\n  & Fn\n  & {\n  /**\n   * The signal returning `true` if the function is available in the\n   * current environment.\n   *\n   * To be more accurate, the method checks the following:\n   * 1. The current environment is not TMA or server.\n   * 2. The SDK package is initialized.\n   * 3. If passed, the `isSupported` signal returns true.\n   * 4. If passed, the `isMounted` signal returns true.\n   *\n   * *You should use this function when possible because it provides\n   * must-have code security mechanisms and makes a developer sure that\n   * he is using the package properly.*\n   *\n   * @returns True if the function is available in the current environment.\n   * @example\n   * if (showBackButton.isAvailable()) {\n   *   showBackButton();\n   * }\n   */\n  isAvailable: Computed<boolean>;\n  /**\n   * Calls the function only in case it is available.\n   * @example\n   * showBackButton.ifAvailable();\n   */\n  ifAvailable(...args: Parameters<Fn>): ReturnType<Fn> | undefined;\n}\n  & If<Supported, {\n  /**\n   * The signal returning `true` if the function is supported by\n   * the current Mini Apps version including some possible additional\n   * conditions.\n   *\n   * It is highly recommended to use this signal only in certain narrow cases\n   * when only the function support check is required.\n   *\n   * This signal is not applying additional operations like checking if the\n   * current environment is Mini Apps and the SDK is initialized.\n   *\n   * To check if the function is available for use, use the `isAvailable`\n   * signal.\n   *\n   * @returns True if this function is supported.\n   * @see isAvailable\n   * @example\n   * if (setMiniAppBottomBarColor.isSupported()) {\n   *   console.log('Mini App bottom bar is supported, but the function is still probably unavailable');\n   * }\n   */\n  isSupported: Computed<boolean>;\n}, {}>\n  & If<IsNever<SupportsSchema>, {}, {\n  /**\n   * A map where the key is the function-specific option name and value is a signal indicating\n   * if it is supported by the current environment.\n   * @example\n   * if (setHeaderColor.isAvailable()) {\n   *   if (setHeaderColor.supports.rgb()) {\n   *     setHeaderColor('#ffaabb');\n   *   } else {\n   *     setHeaderColor('bg_color');\n   *   }\n   * }\n   */\n  supports: Record<keyof SupportsSchema, Computed<boolean>>\n}>\n\ninterface Options<Fn extends AnyFn> {\n  component?: string;\n  isMounted?: () => boolean;\n  isSupported?: IsSupported;\n  supports?: Supports<Fn>,\n}\n\nexport function wrapSafe<Fn extends AnyFn>(\n  method: string,\n  fn: Fn,\n): SafeWrapped<Fn, false, never>;\n\nexport function wrapSafe<Fn extends AnyFn, O extends Options<Fn>>(\n  method: string,\n  fn: Fn,\n  options: O,\n): SafeWrapped<\n  Fn,\n  O extends { isSupported: any } ? true : false,\n  O extends { supports: infer S extends Record<string, any> } ? S : never\n>\n\n/*@__NO_SIDE_EFFECTS__*/\nexport function wrapSafe<Fn extends AnyFn>(\n  method: string,\n  fn: Fn,\n  { isSupported, isMounted, component, supports: supportsOption }: Options<Fn> = {},\n): SafeWrapped<Fn, boolean, Record<string, any> | never> {\n  // Full function identifier.\n  const fullName = `${component ? `${component}.` : ''}${method}()`;\n\n  // Simplify the isSupported value to work with an array of validators or a single object.\n  isSupported = isSupported\n    ? Array.isArray(isSupported)\n      // (MethodName | CustomSupportValidator)[]\n      ? isSupported\n      : typeof isSupported === 'object' && 'any' in isSupported\n        // { any: (MethodName | CustomSupportValidator)[] }\n        ? isSupported\n        // MethodName | CustomSupportValidator\n        : [isSupported]\n    : undefined;\n\n  /**\n   * @returns True if the specified option is supported.\n   * @param option - option name.\n   */\n  function isOptionSupported(option: string): boolean {\n    if (supportsOption) {\n      const tuple = supportsOption[option];\n      return supports(tuple[0], tuple[1], $version());\n    }\n    return true;\n  }\n\n  /**\n   * @returns An error related to isSupported() check.\n   */\n  const supportError = (): string | undefined => {\n    // isSupported was not specified. In this case we assume that the function has no dependencies\n    // and is always supported.\n    if (!isSupported) {\n      return;\n    }\n\n    const defaultErr = `it is unsupported in Mini Apps version ${$version()}`;\n\n    function getError(item: MethodName | CustomSupportValidator): string | undefined {\n      return typeof item === 'string'\n        ? supports(item, $version())\n          ? undefined\n          : defaultErr\n        : item.fn()\n          ? undefined\n          : item.error;\n    }\n\n    // Should check each array item.\n    // (MethodName | CustomSupportValidator)[]\n    if (Array.isArray(isSupported)) {\n      for (const item of isSupported) {\n        const err = getError(item);\n        if (err) {\n          return err;\n        }\n      }\n      return;\n    }\n\n    // Should check if any item didn't return an error.\n    let lastErr: string | undefined;\n    for (const item of isSupported.any) {\n      lastErr = getError(item);\n      if (!lastErr) {\n        return;\n      }\n    }\n    return defaultErr;\n  };\n\n  /**\n   * @returns An error related to supports.<name> check.\n   */\n  const supportsOptionError = (...args: Parameters<Fn>): string | undefined => {\n    if (supportsOption) {\n      for (const k in supportsOption) {\n        if (supportsOption[k][2](...args) && !isOptionSupported(k)) {\n          return `option ${k} is not supported in Mini Apps version ${$version()}`;\n        }\n      }\n    }\n  };\n\n  const $isSupported = computed(() => !supportError());\n  const $isInitialized = computed(() => $version() !== '0.0');\n  const $isMounted = computed(() => !isMounted || isMounted());\n  const $isAvailable = computed(\n    () => isTMA('simple')\n      && !isSSR()\n      && $isInitialized()\n      && $isSupported()\n      && $isMounted(),\n  );\n\n  let supportsMap: Record<string, Computed<boolean>> | undefined;\n  if (supportsOption) {\n    supportsMap = {};\n    for (const option in supportsOption) {\n      supportsMap[option] = computed(() => isOptionSupported(option));\n    }\n  }\n\n  return Object.assign(\n    (...args: Parameters<Fn>): ReturnType<Fn> => {\n      const errMessagePrefix = `Unable to call the ${fullName} ${component ? 'method' : 'function'}:`;\n\n      if (isSSR() || !isTMA('simple')) {\n        throw new TypedError(\n          ERR_UNKNOWN_ENV,\n          `${errMessagePrefix} it can't be called outside Mini Apps`,\n        );\n      }\n      if (!$isInitialized()) {\n        throw new TypedError(\n          ERR_NOT_INITIALIZED,\n          `${errMessagePrefix} the SDK was not initialized. Use the SDK init() function`,\n        );\n      }\n      const supportErr = supportError();\n      if (supportErr) {\n        throw new TypedError(ERR_NOT_SUPPORTED, `${errMessagePrefix} ${supportErr}`);\n      }\n      const supportsOptionErr = supportsOptionError(...args);\n      if (supportsOptionErr) {\n        throw new TypedError(ERR_NOT_SUPPORTED, `${errMessagePrefix} ${supportsOptionErr}`);\n      }\n      if (!$isMounted()) {\n        throw new TypedError(\n          ERR_NOT_MOUNTED,\n          `${errMessagePrefix} the component is not mounted. Use the ${component}.mount() method`,\n        );\n      }\n      return fn(...args);\n    },\n    fn,\n    {\n      isAvailable: $isAvailable,\n      ifAvailable(...args: Parameters<Fn>): ReturnType<Fn> | undefined {\n        return $isAvailable()\n          ? fn(...args)\n          : undefined;\n      },\n    },\n    isSupported ? {\n      isSupported: $isSupported,\n    } : {},\n    supportsMap ? {\n      supports: supportsMap,\n    } : {},\n  );\n}\n","import type { AnyFn } from '@/types.js';\nimport {\n  wrapSafe,\n  type IsSupported,\n  type SafeWrapped,\n  type Supports,\n} from '@/scopes/toolkit/wrapSafe.js';\n\nexport interface SafeWrapFn<S extends boolean> {\n  <Fn extends AnyFn>(method: string, fn: Fn): SafeWrapped<Fn, S, never>;\n  <Fn extends AnyFn>(method: string, fn: Fn, isSupported: IsSupported): SafeWrapped<Fn, true, never>;\n  <Fn extends AnyFn, S extends Supports<Fn>>(\n    method: string,\n    fn: Fn,\n    isSupported: IsSupported,\n    supports: S,\n  ): SafeWrapped<Fn, true, S>;\n}\n\ninterface Options {\n  isMounted?: () => boolean;\n  isSupported?: IsSupported;\n}\n\nexport function createWrapSafe(component?: string): SafeWrapFn<false>;\n\nexport function createWrapSafe<O extends Options>(\n  component: string,\n  options: O,\n): SafeWrapFn<O extends { isSupported: any } ? true : false>;\n\nexport function createWrapSafe(\n  component?: string,\n  options?: Options,\n): SafeWrapFn<boolean> {\n  options ||= {};\n  return ((method, fn, overrideIsSupported, supports) => wrapSafe(method, fn, {\n    ...options,\n    isSupported: overrideIsSupported || options.isSupported,\n    supports,\n    component,\n  })) as SafeWrapFn<boolean>;\n}\n","import type { IsSupported } from '@/scopes/toolkit/wrapSafe.js';\nimport { createWrapSafe, type SafeWrapFn } from '@/scopes/toolkit/createWrapSafe.js';\n\nexport function createWrapComplete(\n  component: string,\n  isMounted: () => boolean,\n  isSupported: IsSupported,\n): SafeWrapFn<true> {\n  return createWrapSafe(component, { isSupported, isMounted });\n}\n","import {\n  createWrapSafe,\n  type SafeWrapFn,\n} from '@/scopes/toolkit/createWrapSafe.js';\nimport type { IsSupported } from '@/scopes/toolkit/wrapSafe.js';\n\nexport function createWrapSupported(\n  component: string,\n  isSupported: IsSupported,\n): SafeWrapFn<true> {\n  return createWrapSafe(component, { isSupported });\n}","import {\n  off,\n  on,\n  getStorageValue,\n  setStorageValue,\n  type EventListener,\n} from '@telegram-apps/bridge';\nimport { isPageReload } from '@telegram-apps/navigation';\nimport { signal } from '@telegram-apps/signals';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWrapComplete } from '@/scopes/toolkit/createWrapComplete.js';\nimport { createWrapSupported } from '@/scopes/toolkit/createWrapSupported.js';\n\ntype StorageValue = boolean;\n\nconst SETUP_METHOD_NAME = 'web_app_setup_back_button';\nconst CLICK_EVENT_NAME = 'back_button_pressed';\nconst COMPONENT_NAME = 'backButton';\n\n/**\n * Signal indicating if the Back Button is currently visible.\n */\nexport const isVisible = signal(false);\n\n/**\n * Signal indicating if the Back Button is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * Signal indicating if the Back Button is supported.\n */\nexport const isSupported = createIsSupported(SETUP_METHOD_NAME);\n\nconst wrapComplete = createWrapComplete(COMPONENT_NAME, isMounted, SETUP_METHOD_NAME);\nconst wrapSupported = createWrapSupported(COMPONENT_NAME, SETUP_METHOD_NAME);\n\n/**\n * Hides the Back Button.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @since Mini Apps v6.1\n * @example\n * if (hide.isAvailable()) {\n *   hide();\n * }\n */\nexport const hide = wrapComplete('hide', (): void => {\n  setVisibility(false);\n});\n\n/**\n * Mounts the Back Button restoring its state.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @since Mini Apps v6.1\n * @example\n * if (mount.isAvailable()) {\n *   mount();\n * }\n */\nexport const mount = wrapSupported('mount', (): void => {\n  if (!isMounted()) {\n    setVisibility(isPageReload() && getStorageValue<StorageValue>(COMPONENT_NAME) || false);\n    isMounted.set(true);\n  }\n});\n\nfunction setVisibility(value: boolean): void {\n  if (value !== isVisible()) {\n    postEvent(SETUP_METHOD_NAME, { is_visible: value });\n    setStorageValue<StorageValue>(COMPONENT_NAME, value);\n    isVisible.set(value);\n  }\n}\n\n/**\n * Adds a new Back Button click listener.\n * @param fn - event listener.\n * @returns A function to remove bound listener.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @since Mini Apps v6.1\n * @example\n * if (onClick.isAvailable()) {\n *   const off = onClick(() => {\n *     console.log('User clicked the Back Button');\n *     off();\n *   });\n * }\n */\nexport const onClick = wrapSupported(\n  'onClick',\n  (fn: EventListener<'back_button_pressed'>): VoidFunction => on(CLICK_EVENT_NAME, fn),\n);\n\n/**\n * Removes the Back Button click listener.\n * @param fn - an event listener.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @since Mini Apps v6.1\n * @example\n * if (offClick.isAvailable()) {\n *   function listener() {\n *     console.log('User clicked the Back Button');\n *     offClick(listener);\n *   }\n *   onClick(listener);\n * }\n */\nexport const offClick = wrapSupported(\n  'offClick',\n  (fn: EventListener<'back_button_pressed'>): void => {\n    off(CLICK_EVENT_NAME, fn);\n  },\n);\n\n/**\n * Shows the Back Button.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @since Mini Apps v6.1\n * @example\n * if (show.isAvailable()) {\n *   show();\n * }\n */\nexport const show = wrapComplete('show', (): void => {\n  setVisibility(true);\n});\n\n/**\n * Unmounts the Back Button.\n *\n * Note that this function does not remove listeners added via the `onClick`\n * function, so you have to remove them on your own.\n * @see onClick\n */\nexport function unmount(): void {\n  isMounted.set(false);\n}\n","import { batch, type Signal } from '@telegram-apps/signals';\nimport { CancelablePromise, If, type TypedError } from '@telegram-apps/bridge';\nimport { AnyFn } from '@/types.js';\n\ntype Signalified<Fn extends AnyFn, Cancelable extends boolean> = (...args: Parameters<Fn>) => If<\n  Cancelable,\n  CancelablePromise<ReturnType<Fn>>,\n  PromiseLike<ReturnType<Fn>>\n>;\n\n/**\n * Function doing the following:\n * 1. Prevents the wrapped function from being called concurrently.\n * 2. Being called, updates the passed promise and error signals.\n *\n * As a result, the function returns a new one, returning a cancelable promise.\n * @param fn - function to wrap.\n * @param createPendingError - function that creates error in case of concurrent call\n * @param promise - signal containing the execution promise\n * @param error - signal containing the last call error.\n * @param cancelable - is result cancelable. True by default.\n */\nexport function signalifyAsyncFn<Fn extends AnyFn>(\n  fn: Fn,\n  createPendingError: () => TypedError<any>,\n  promise: Signal<CancelablePromise<Awaited<ReturnType<Fn>>> | undefined>,\n  error: Signal<Error | undefined>,\n  cancelable?: true,\n): Signalified<Fn, true>;\n\n/**\n * Function doing the following:\n * 1. Prevents the wrapped function from being called concurrently.\n * 2. Being called, updates the passed promise and error signals.\n *\n * As a result, the function returns a new one, returning a non-cancelable promise.\n * @param fn - function to wrap.\n * @param createPendingError - function that creates error in case of concurrent call\n * @param promise - signal containing the execution promise\n * @param error - signal containing the last call error.\n * @param cancelable - is result cancelable. True by default.\n */\nexport function signalifyAsyncFn<Fn extends AnyFn>(\n  fn: Fn,\n  createPendingError: () => TypedError<any>,\n  promise: Signal<Promise<Awaited<ReturnType<Fn>>> | undefined>,\n  error: Signal<Error | undefined>,\n  cancelable: false,\n): Signalified<Fn, false>;\n\n// #__NO_SIDE_EFFECTS__\nexport function signalifyAsyncFn<Fn extends AnyFn>(\n  fn: Fn,\n  createPendingError: () => TypedError<any>,\n  promise:\n    | Signal<CancelablePromise<Awaited<ReturnType<Fn>>> | undefined>\n    | Signal<Promise<Awaited<ReturnType<Fn>>> | undefined>,\n  error: Signal<Error | undefined>,\n  cancelable?: boolean,\n): Signalified<Fn, boolean> {\n  const PromiseConstructor = cancelable === undefined || cancelable\n    ? CancelablePromise\n    : Promise;\n\n  return Object.assign((...args: Parameters<Fn>): PromiseLike<ReturnType<Fn>> => {\n    return PromiseConstructor\n      .resolve()\n      .then(async () => {\n        // Check if the operation is currently not in progress.\n        if (promise()) {\n          const err = createPendingError();\n          error.set(err);\n          throw err;\n        }\n\n        // Start performing the wrapped function.\n        batch(() => {\n          promise.set(\n            (PromiseConstructor as typeof Promise).resolve(fn(...args)) as unknown as any,\n          );\n          error.set(undefined);\n        });\n        let result: [completed: true, result: ReturnType<Fn>] | [completed: false, err: Error];\n        try {\n          result = [true, await promise()!];\n        } catch (e) {\n          result = [false, e as Error];\n        }\n\n        // Actualize the state.\n        batch(() => {\n          promise.set(undefined);\n          error.set(result[0] ? undefined : result[1]);\n        });\n\n        // Throw an error or return result.\n        if (!result[0]) {\n          throw result[1];\n        }\n        return result[1];\n      });\n  }, fn);\n}\n","import { batch, type Signal } from '@telegram-apps/signals';\nimport {\n  type AsyncOptions,\n  CancelablePromise,\n  TypedError,\n} from '@telegram-apps/bridge';\n\nimport { ERR_ALREADY_MOUNTING } from '@/errors.js';\nimport { signalifyAsyncFn } from '@/scopes/signalifyAsyncFn.js';\n\n/**\n * Creates a mount function for a component.\n * @param component - the component name\n * @param mount - function mounting the component\n * @param onMounted - function that will be called whenever mount was completed.\n * @param isMounted - signal containing the current mount completion state\n * @param promise - signal containing the mount promise\n * @param error - signal containing the mount error\n */\n// #__NO_SIDE_EFFECTS__\nexport function createMountFn<R>(\n  component: string,\n  mount: (options?: AsyncOptions) => R | CancelablePromise<R>,\n  onMounted: (result: R) => void,\n  isMounted: Signal<boolean>,\n  promise: Signal<CancelablePromise<Awaited<R>> | undefined>,\n  error: Signal<Error | undefined>,\n): (options?: AsyncOptions) => CancelablePromise<void> {\n  const noConcurrent = signalifyAsyncFn(\n    mount,\n    () => new TypedError(\n      ERR_ALREADY_MOUNTING,\n      `The ${component} component is already mounting`,\n    ),\n    promise,\n    error,\n  );\n\n  return (options?) => {\n    return CancelablePromise.resolve().then(async () => {\n      if (!isMounted()) {\n        const result = await noConcurrent(options);\n        batch(() => {\n          isMounted.set(true);\n          onMounted(result);\n        });\n      }\n    });\n  };\n}\n","import { createWrapSafe } from '@/scopes/toolkit/createWrapSafe.js';\n\nexport const createWrapBasic = createWrapSafe;","import { computed, signal } from '@telegram-apps/signals';\nimport type { CancelablePromise } from '@telegram-apps/toolkit';\n\nimport type { State } from './types.js';\n\n/**\n * Complete biometry manager state.\n */\nexport const state = signal<State>({ available: false});\n\n/**\n * True if the manager is currently authenticating.\n */\nexport const isAuthenticating = signal<boolean>(false);\n\n/**\n * True if the manager is currently requesting access.\n */\nexport const isRequestingAccess = signal<boolean>(false);\n\n//#region Mount.\n\n/**\n * Signal indicating if the component is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * Signal indicating if the component is currently mounting.\n */\nexport const isMounting = computed(() => !!mountPromise());\n\n/**\n * Signal containing the error occurred during mount.\n */\nexport const mountError = signal<Error | undefined>();\n\n/**\n * Signal containing the mount process promise.\n */\nexport const mountPromise = signal<CancelablePromise<State> | undefined>();\n\n//#endregion\n\n/**\n * Signal indicating biometry is available.\n */\nexport const isAvailable = computed(() => {\n  const s = state();\n  return s && s.available;\n});\n","import type { EventPayload } from '@telegram-apps/bridge';\n\nimport type { State } from './types.js';\n\n/**\n * Converts `biometry_info_received` to some common shape.\n * @param event - event payload.\n * @see biometry_info_received\n */\nexport function eventToState(event: EventPayload<'biometry_info_received'>): State {\n  return event.available ? {\n    available: true,\n    tokenSaved: event.token_saved,\n    deviceId: event.device_id,\n    accessRequested: event.access_requested,\n    type: event.type,\n    accessGranted: event.access_granted,\n  } : {\n    available: false,\n  };\n}\n","import type { ExecuteWithOptions, CancelablePromise } from '@telegram-apps/bridge';\n\nimport { request } from '@/scopes/globals.js';\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\n\nimport { eventToState } from './eventToState.js';\nimport type { State } from './types.js';\n\nconst GET_INFO_METHOD = 'web_app_biometry_get_info';\n\n/**\n * Requests biometry information.\n * @since Mini Apps v7.2\n * @param options - additional execution options.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (requestBiometry.isAvailable()) {\n *   const biometryState = await requestBiometry();\n * }\n */\nexport const requestBiometry = wrapSafe(\n  'requestBiometry',\n  (options?: ExecuteWithOptions): CancelablePromise<State> => {\n    return request(GET_INFO_METHOD, 'biometry_info_received', options).then(eventToState);\n  },\n  {\n    isSupported: GET_INFO_METHOD,\n  },\n);\n","import {\n  on,\n  off,\n  TypedError,\n  CancelablePromise,\n  getStorageValue,\n  setStorageValue,\n  type BiometryTokenUpdateStatus,\n  type BiometryAuthRequestStatus,\n  type EventListener,\n} from '@telegram-apps/bridge';\nimport { isPageReload } from '@telegram-apps/navigation';\n\nimport { postEvent, request } from '@/scopes/globals.js';\nimport { createMountFn } from '@/scopes/createMountFn.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWrapComplete } from '@/scopes/toolkit/createWrapComplete.js';\nimport { createWrapSupported } from '@/scopes/toolkit/createWrapSupported.js';\nimport { createWrapBasic } from '@/scopes/toolkit/createWrapBasic.js';\nimport { ERR_ALREADY_REQUESTING, ERR_NOT_AVAILABLE } from '@/errors.js';\n\nimport {\n  state,\n  isMounted,\n  isRequestingAccess,\n  isAuthenticating,\n  mountError,\n  mountPromise,\n} from './signals.js';\nimport { requestBiometry } from './requestBiometry.js';\nimport { eventToState } from './eventToState.js';\nimport type {\n  State,\n  AuthenticateOptions,\n  RequestAccessOptions,\n  UpdateTokenOptions,\n} from './types.js';\n\ntype StorageValue = State;\n\nconst REQUEST_AUTH_METHOD = 'web_app_biometry_request_auth';\nconst REQUEST_ACCESS_METHOD = 'web_app_biometry_request_access';\nconst OPEN_SETTINGS_METHOD = 'web_app_biometry_open_settings';\nconst UPDATE_TOKEN_METHOD = 'web_app_biometry_update_token';\nconst INFO_RECEIVED_EVENT = 'biometry_info_received';\nconst COMPONENT_NAME = 'biometry';\n\n/**\n * @returns True if the biometry manager is supported.\n */\nexport const isSupported = createIsSupported(REQUEST_AUTH_METHOD);\n\nconst wrapBasic = createWrapBasic(COMPONENT_NAME);\nconst wrapSupported = createWrapSupported(COMPONENT_NAME, REQUEST_AUTH_METHOD);\nconst wrapComplete = createWrapComplete(COMPONENT_NAME, isMounted, REQUEST_AUTH_METHOD);\n\nfunction throwNotAvailable(): never {\n  throw new TypedError(ERR_NOT_AVAILABLE, 'Biometry is not available');\n}\n\n/**\n * Attempts to authenticate a user using biometrics and fetch a previously stored secure token.\n * @param options - method options.\n * @since Mini Apps v7.2\n * @returns Token from the local secure storage saved previously or undefined.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @throws {TypedError} ERR_ALREADY_REQUESTING\n * @throws {TypedError} ERR_NOT_AVAILABLE\n * @example\n * if (authenticate.isAvailable()) {\n *   const { status, token } = await authenticate({\n *     reason: 'Authenticate to open wallet',\n *   });\n * }\n */\nexport const authenticate = wrapComplete(\n  'authenticate',\n  (options?: AuthenticateOptions): CancelablePromise<{\n    /**\n     * Authentication status.\n     */\n    status: BiometryAuthRequestStatus;\n    /**\n     * Token from the local secure storage saved previously.\n     */\n    token?: string;\n  }> => {\n    return CancelablePromise.withFn(async abortSignal => {\n      if (isAuthenticating()) {\n        throw new TypedError(ERR_ALREADY_REQUESTING, 'Authentication is already in progress');\n      }\n\n      const s = state();\n      if (!s || !s.available) {\n        throwNotAvailable();\n      }\n\n      isAuthenticating.set(true);\n\n      try {\n        const response = await request(\n          REQUEST_AUTH_METHOD,\n          'biometry_auth_requested',\n          {\n            abortSignal,\n            params: {\n              reason: ((options || {}).reason || '').trim(),\n            },\n          },\n        );\n\n        const { token } = response;\n        if (typeof token === 'string') {\n          setState({ ...s, token });\n        }\n        return response;\n      } finally {\n        isAuthenticating.set(false);\n      }\n    }, options);\n  },\n);\n\n/**\n * Opens the biometric access settings for bots. Useful when you need to request biometrics\n * access to users who haven't granted it yet.\n *\n * _Note that this method can be called only in response to user interaction with the Mini App\n * interface (e.g. a click inside the Mini App or on the main button)_.\n * @since Mini Apps v7.2\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (openSettings.isAvailable()) {\n *   openSettings();\n * }\n */\nexport const openSettings = wrapSupported('openSettings', (): void => {\n  postEvent(OPEN_SETTINGS_METHOD);\n});\n\n/**\n * Requests permission to use biometrics.\n * @since Mini Apps v7.2\n * @returns Promise with true, if access was granted.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @throws {TypedError} ERR_ALREADY_REQUESTING\n * @throws {TypedError} ERR_NOT_AVAILABLE\n * @example\n * if (requestAccess.isAvailable()) {\n *   const accessGranted = await requestAccess({\n *     reason: 'Authenticate to open wallet',\n *   });\n * }\n */\nexport const requestAccess = wrapComplete(\n  'requestAccess',\n  (options?: RequestAccessOptions): CancelablePromise<boolean> => {\n    return CancelablePromise.withFn(async abortSignal => {\n      if (isRequestingAccess()) {\n        throw new TypedError(ERR_ALREADY_REQUESTING, 'Access request is already in progress');\n      }\n      isRequestingAccess.set(true);\n\n      try {\n        const info = await request(REQUEST_ACCESS_METHOD, INFO_RECEIVED_EVENT, {\n          abortSignal,\n          params: { reason: (options || {}).reason || '' },\n        }).then(eventToState);\n\n        if (!info.available) {\n          throwNotAvailable();\n        }\n        setState(info);\n\n        return info.accessGranted;\n      } finally {\n        isRequestingAccess.set(false);\n      }\n    }, options);\n  },\n);\n\n/**\n * Mounts the Biometry component.\n * @since Mini Apps v7.2\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (mount.isAvailable()) {\n *   await mount();\n * }\n */\nexport const mount = wrapBasic('mount', createMountFn<State>(\n  COMPONENT_NAME,\n  (options) => {\n    const s = isPageReload() && getStorageValue<StorageValue>(COMPONENT_NAME);\n    return s ? s : requestBiometry(options);\n  },\n  result => {\n    on(INFO_RECEIVED_EVENT, onBiometryInfoReceived);\n    setState(result);\n  },\n  isMounted,\n  mountPromise,\n  mountError,\n));\n\nconst onBiometryInfoReceived: EventListener<'biometry_info_received'> = e => {\n  setState(eventToState(e));\n};\n\nfunction setState(s: State): void {\n  state.set(s);\n  setStorageValue<StorageValue>(COMPONENT_NAME, s);\n}\n\n/**\n * Unmounts the component.\n */\nexport function unmount() {\n  off(INFO_RECEIVED_EVENT, onBiometryInfoReceived);\n  isMounted.set(false);\n}\n\n/**\n * Updates the biometric token in a secure storage on the device.\n * @since Mini Apps v7.2\n * @returns Promise with `true`, if token was updated.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @example Setting a new token\n * if (updateToken.isAvailable()) {\n *   updateToken({\n *     token: 'abcdef',\n *   })\n * }\n * @example Deleting the token\n * if (updateToken.isAvailable()) {\n *   updateToken();\n * }\n */\nexport const updateToken = wrapComplete(\n  'updateToken',\n  (options?: UpdateTokenOptions): CancelablePromise<BiometryTokenUpdateStatus> => {\n    options ||= {};\n    return request(UPDATE_TOKEN_METHOD, 'biometry_token_updated', {\n      ...options,\n      params: {\n        token: options.token || '',\n        reason: options.reason,\n      },\n    }).then(r => r.status);\n  },\n);\n","import { createWrapSafe, type SafeWrapFn } from '@/scopes/toolkit/createWrapSafe.js';\n\nexport function createWrapMounted(\n  component: string,\n  isMounted: () => boolean,\n): SafeWrapFn<false> {\n  return createWrapSafe(component, { isMounted });\n}","import { isPageReload } from '@telegram-apps/navigation';\nimport { getStorageValue, setStorageValue } from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { createWrapMounted } from '@/scopes/toolkit/createWrapMounted.js';\nimport { createWrapBasic } from '@/scopes/toolkit/createWrapBasic.js';\n\ntype StorageValue = boolean;\n\nconst COMPONENT_NAME = 'closingBehavior';\n\n/**\n * Signal indicating if the confirmation dialog should be shown, while the user\n * is trying to close the Mini App.\n */\nexport const isConfirmationEnabled = signal(false);\n\n/**\n * Signal indicating if the Closing Behavior component is currently mounted.\n */\nexport const isMounted = signal(false);\n\nconst wrapMounted = createWrapMounted(COMPONENT_NAME, isMounted);\nconst wrapBasic = createWrapBasic(COMPONENT_NAME);\n\n/**\n * Disables the closing confirmation dialog.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example\n * if (disableConfirmation.isAvailable()) {\n *   disableConfirmation();\n * }\n */\nexport const disableConfirmation = wrapMounted('disableConfirmation', (): void => {\n  setClosingConfirmation(false);\n});\n\n/**\n * Enables the closing confirmation dialog.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example\n * if (enableConfirmation.isAvailable()) {\n *   enableConfirmation();\n * }\n */\nexport const enableConfirmation = wrapMounted('enableConfirmation', (): void => {\n  setClosingConfirmation(true);\n});\n\n/**\n * Mounts the Closing Behavior component restoring its state.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example\n * if (mount.isAvailable()) {\n *   mount();\n * }\n */\nexport const mount = wrapBasic('mount', (): void => {\n  if (!isMounted()) {\n    setClosingConfirmation(\n      isPageReload() && getStorageValue<StorageValue>(COMPONENT_NAME) || false,\n    );\n    isMounted.set(true);\n  }\n});\n\nfunction setClosingConfirmation(value: boolean): void {\n  if (value !== isConfirmationEnabled()) {\n    postEvent('web_app_setup_closing_behavior', { need_confirmation: value });\n    setStorageValue<StorageValue>(COMPONENT_NAME, value);\n    isConfirmationEnabled.set(value);\n  }\n}\n\n/**\n * Unmounts the Closing Behavior component.\n */\nexport function unmount(): void {\n  isMounted.set(false);\n}\n","import {\n  CancelablePromise,\n  type ExecuteWithOptions,\n} from '@telegram-apps/bridge';\nimport { array, object, string } from '@telegram-apps/transformers';\n\nimport { invokeCustomMethod } from '@/scopes/globals.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWrapSupported } from '@/scopes/toolkit/createWrapSupported.js';\n\nconst INVOKE_METHOD_NAME = 'web_app_invoke_custom_method';\nconst wrapSupported = createWrapSupported('cloudStorage', INVOKE_METHOD_NAME);\n\n/**\n * Signal indicating if the Cloud Storage is supported.\n */\nexport const isSupported = createIsSupported(INVOKE_METHOD_NAME);\n\n/**\n * Deletes specified key or keys from the cloud storage.\n * @param keyOrKeys - key or keys to delete.\n * @param options - request execution options.\n * @since Mini Apps v6.9\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example Deleting a single key\n * if (deleteItem.isAvailable()) {\n *   await deleteItem('my-key');\n * }\n * @example Deleting multiple keys\n * if (deleteItem.isAvailable()) {\n *   await deleteItem(['key1', 'key2']);\n * }\n */\nexport const deleteItem = wrapSupported('deleteItem', (\n  keyOrKeys: string | string[],\n  options?: ExecuteWithOptions,\n): CancelablePromise<void> => {\n  const keys = Array.isArray(keyOrKeys) ? keyOrKeys : [keyOrKeys];\n  return keys.length\n    ? invokeCustomMethod('deleteStorageValues', { keys }, options).then()\n    : CancelablePromise.resolve();\n});\n\n/**\n * Gets multiple keys' values from the cloud storage.\n * @param keys - keys list.\n * @param options - request execution options.\n * @returns Map, where a key is one of the specified in the `keys` argument,\n * and a value is a corresponding storage value.\n * @since Mini Apps v6.9\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (deleteItem.isAvailable()) {\n *   const { key1, key2 } = await getItem(['key1', 'key2']);\n * }\n */\nfunction _getItem<K extends string>(\n  keys: K[],\n  options?: ExecuteWithOptions,\n): CancelablePromise<Record<K, string>>;\n\n/**\n * Gets a single key value from the cloud storage.\n * @param key - cloud storage key.\n * @param options - request execution options.\n * @return Value of the specified key. If the key was not created previously,\n * the function will return an empty string.\n * @since Mini Apps v6.9\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (getItem.isAvailable()) {\n *   const keyValue = await getItem('my-key');\n * }\n */\nfunction _getItem(key: string, options?: ExecuteWithOptions): CancelablePromise<string>;\n\nfunction _getItem(\n  keyOrKeys: string | string[],\n  options?: ExecuteWithOptions,\n): CancelablePromise<string | Record<string, string>> {\n  const keys = Array.isArray(keyOrKeys) ? keyOrKeys : [keyOrKeys];\n\n  return keys.length\n    ? invokeCustomMethod('getStorageValues', { keys }, options).then(data => {\n      const result = object(\n        Object.fromEntries(keys.map((k) => [k, string()])),\n      )()(data);\n\n      return Array.isArray(keyOrKeys) ? result : result[keyOrKeys];\n    })\n    : CancelablePromise.resolve(typeof keyOrKeys === 'string' ? '' : {});\n}\n\nexport const getItem = wrapSupported('getItem', _getItem);\n\n/**\n * Returns a list of all keys presented in the cloud storage.\n * @param options - request execution options.\n * @since Mini Apps v6.9\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (getKeys.isAvailable()) {\n *   const keysArray = await getKeys();\n * }\n */\nexport const getKeys = wrapSupported('getKeys', (\n  options?: ExecuteWithOptions,\n): CancelablePromise<string[]> => {\n  return invokeCustomMethod('getStorageKeys', {}, options)\n    .then(array(string())());\n});\n\n/**\n * Saves the specified value by a key.\n * @param key - storage key.\n * @param value - storage value.\n * @param options - request execution options.\n * @since Mini Apps v6.9\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (setItem.isAvailable()) {\n *   await setItem('key', 'value');\n * }\n */\nexport const setItem = wrapSupported('setItem', (\n  key: string,\n  value: string,\n  options?: ExecuteWithOptions,\n): CancelablePromise<void> => {\n  return invokeCustomMethod('saveStorageValue', {\n    key,\n    value,\n  }, options).then();\n});\n","import type {\n  ImpactHapticFeedbackStyle,\n  NotificationHapticFeedbackType,\n} from '@telegram-apps/bridge';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWrapSupported } from '@/scopes/toolkit/createWrapSupported.js';\n\nconst HAPTIC_METHOD_NAME = 'web_app_trigger_haptic_feedback';\nconst wrapSupported = createWrapSupported('hapticFeedback', HAPTIC_METHOD_NAME);\n\n/**\n * Signal indicating if the Haptic Feedback is supported.\n */\nexport const isSupported = createIsSupported(HAPTIC_METHOD_NAME);\n\n/**\n * A method that tells if an impact occurred. The Telegram app may play the\n * appropriate haptics based on style value passed.\n * @param style - impact style.\n * @since Mini Apps v6.1\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (impactOccurred.isAvailable()) {\n *   impactOccurred('medium');\n * }\n */\nexport const impactOccurred = wrapSupported(\n  'impactOccurred',\n  (style: ImpactHapticFeedbackStyle): void => {\n    postEvent(HAPTIC_METHOD_NAME, {\n      type: 'impact',\n      impact_style: style,\n    });\n  },\n);\n\n/**\n * A method tells that a task or action has succeeded, failed, or produced\n * a warning. The Telegram app may play the appropriate haptics based on type\n * value passed.\n * @param type - notification type.\n * @since Mini Apps v6.1\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (notificationOccurred.isAvailable()) {\n *   notificationOccurred('success');\n * }\n */\nexport const notificationOccurred = wrapSupported(\n  'notificationOccurred',\n  (type: NotificationHapticFeedbackType): void => {\n    postEvent(HAPTIC_METHOD_NAME, {\n      type: 'notification',\n      notification_type: type,\n    });\n  },\n);\n\n/**\n * A method tells that the user has changed a selection. The Telegram app may\n * play the appropriate haptics.\n *\n * Do not use this feedback when the user makes or confirms a selection; use\n * it only when the selection changes.\n * @since Mini Apps v6.1\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (selectionChanged.isAvailable()) {\n *   selectionChanged();\n * }\n */\nexport const selectionChanged = wrapSupported(\n  'selectionChanged',\n  (): void => {\n    postEvent(HAPTIC_METHOD_NAME, { type: 'selection_change' });\n  },\n);\n","import { computed, type Computed, signal } from '@telegram-apps/signals';\nimport { type InitData, retrieveLaunchParams } from '@telegram-apps/bridge';\n\n/* USUAL */\n\n/**\n * Complete component state.\n */\nexport const state = signal<InitData | undefined>(undefined);\n\n/* COMPUTED */\n\nfunction fromState<K extends keyof InitData>(key: K): Computed<InitData[K] | undefined> {\n  return computed(() => {\n    const s = state();\n    return s ? s[key] : undefined;\n  });\n}\n\n/**\n * @see InitData.authDate\n */\nexport const authDate = fromState('authDate');\n\n/**\n * @see InitData.canSendAfter\n */\nexport const canSendAfter = fromState('canSendAfter');\n\n/**\n * Date after which it is allowed to call\n * the [answerWebAppQuery](https://core.telegram.org/bots/api#answerwebappquery) method.\n */\nexport const canSendAfterDate = computed(() => {\n  const authDateValue = authDate();\n  const canSendAfterValue = canSendAfter();\n\n  return canSendAfterValue && authDateValue\n    ? new Date(authDateValue.getTime() + canSendAfterValue * 1000)\n    : undefined\n});\n\n/**\n * @see InitData.chat\n */\nexport const chat = fromState('chat');\n\n/**\n * @see InitData.chatType\n */\nexport const chatType = fromState('chatType');\n\n/**\n * @see InitData.chatInstance\n */\nexport const chatInstance = fromState('chatInstance');\n\n/**\n * @see InitData.hash\n */\nexport const hash = fromState('hash');\n\n/**\n * @see InitData.queryId\n */\nexport const queryId = fromState('queryId');\n\n/**\n * Raw representation of init data.\n */\nexport const raw = signal<string | undefined>();\n\n/**\n * @see InitData.receiver\n */\nexport const receiver = fromState('receiver');\n\n/**\n * Restores the component state.\n */\nexport function restore(): void {\n  const lp = retrieveLaunchParams();\n  state.set(lp.initData);\n  raw.set(lp.initDataRaw);\n}\n\n/**\n * @see InitData.startParam\n */\nexport const startParam = fromState('startParam');\n\n/**\n * @see InitData.user\n */\nexport const user = fromState('user');","import { initData } from '@telegram-apps/transformers';\nimport type { InitData } from '@telegram-apps/bridge';\n\n/**\n * Parses an incoming value as init data.\n * @param value - value to check.\n * @throws {} Parsing errors.\n */\nexport function parseInitData(value: unknown): InitData {\n  return initData()(value);\n}","import {\n  TypedError,\n  type InvoiceStatus,\n  type ExecuteWithPostEvent,\n} from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\n\nimport { request } from '@/scopes/globals.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWrapSupported } from '@/scopes/toolkit/createWrapSupported.js';\nimport {\n  ERR_INVALID_URL,\n  ERR_INVALID_SLUG,\n  ERR_ALREADY_OPENED,\n} from '@/errors.js';\n\nconst OPEN_METHOD = 'web_app_open_invoice';\nconst wrapSupported = createWrapSupported('invoice', OPEN_METHOD);\n\n/**\n * Signal indicating if an invoice is opened.\n */\nexport const isOpened = signal(false);\n\n/**\n * Signal indicating if invoices are supported.\n */\nexport const isSupported = createIsSupported(OPEN_METHOD);\n\n/**\n * Opens an invoice using its slug.\n * @param slug - invoice slug.\n * @param options - additional options.\n * @since Mini Apps v6.1\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_ALREADY_OPENED\n * @example\n * if (open.isAvailable()) {\n *   const status = await open('kJNFS331');\n * }\n */\nexport function _open(\n  slug: string,\n  options?: ExecuteWithPostEvent,\n): Promise<InvoiceStatus>;\n\n/**\n * Opens an invoice using its url.\n * @param url - invoice URL.\n * @param type - value type.\n * @param options - additional options.\n * @since Mini Apps v6.1\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_ALREADY_OPENED\n * @throws {TypedError} ERR_INVALID_URL\n * @throws {TypedError} ERR_INVALID_SLUG\n * @example\n * if (open.isAvailable()) {\n *   const status = await open('https://t.me/$kJNFS331', 'url');\n * }\n * @example\n * if (open.isAvailable()) {\n *   const status = await open('https://t.me/invoice/kJNFS331', 'url');\n * }\n */\nexport function _open(\n  url: string,\n  type: 'url',\n  options?: ExecuteWithPostEvent,\n): Promise<InvoiceStatus>;\n\nexport async function _open(\n  urlOrSlug: string,\n  optionsOrType?: 'url' | ExecuteWithPostEvent,\n  options?: ExecuteWithPostEvent,\n): Promise<InvoiceStatus> {\n  if (isOpened()) {\n    throw new TypedError(ERR_ALREADY_OPENED, 'An invoice is already opened');\n  }\n\n  let slug: string;\n\n  if (optionsOrType === 'url') {\n    const { hostname, pathname } = new URL(urlOrSlug, window.location.href);\n    if (hostname !== 't.me') {\n      throw new TypedError(ERR_INVALID_URL, `Link has unexpected hostname: ${hostname}`);\n    }\n\n    // Valid examples:\n    // \"/invoice/my-slug\"\n    // \"/$my-slug\"\n    const match = pathname.match(/^\\/(\\$|invoice\\/)([A-Za-z0-9\\-_=]+)$/);\n    if (!match) {\n      throw new TypedError(\n        ERR_INVALID_SLUG,\n        `Expected to receive a link with a pathname in format \"/invoice/{slug}\" or \"/\\${slug}\"`,\n      );\n    }\n    [, , slug] = match;\n  } else {\n    // todo: validate slug?\n    slug = urlOrSlug;\n    options = optionsOrType;\n  }\n\n  isOpened.set(true);\n\n  return request(OPEN_METHOD, 'invoice_closed', {\n    ...options,\n    params: { slug },\n    capture: (data) => slug === data.slug,\n  })\n    .then(r => r.status)\n    .finally(() => {\n      isOpened.set(false);\n    });\n}\n\nexport const open = wrapSupported('open', _open);\n","import type { UnionRequiredKeys } from '@telegram-apps/toolkit';\n\ntype RemoveUndefined<T> = {\n  [K in UnionRequiredKeys<T>]-?: T[K]\n};\n\n/**\n * @returns Object with keys having undefined values.\n * @param value - an object to remove undefined values from.\n */\nexport function removeUndefined<T extends {}>(value: T): RemoveUndefined<T> {\n  // TODO: Check via caniuse: Object.fromEntries\n  return Object.fromEntries(\n    Object.entries(value).filter((tuple) => tuple[1] !== undefined),\n  ) as RemoveUndefined<T>;\n}","import { toRGB } from '@telegram-apps/transformers';\n\n/**\n * @param color - color in any format acceptable by the `toRGB` function.\n * @returns True if the color is recognized as dark.\n * @see toRGB\n */\nexport function isColorDark(color: string): boolean {\n  const rgb = toRGB(color);\n\n  // Real formula: hsp = Math.sqrt(0.299 * r * r + 0.587 * g * g + 0.114 * b * b)\n  // See: https://stackoverflow.com/a/596243\n  return Math.sqrt(\n    [0.299, 0.587, 0.114].reduce<number>((acc, modifier, idx) => {\n      // Extract part of #RRGGBB pattern and convert it to DEC.\n      const dec = parseInt(rgb.slice(1 + idx * 2, 1 + (idx + 1) * 2), 16);\n      return acc + dec * dec * modifier;\n    }, 0),\n  ) < 120;\n}\n","import type { ThemeParams } from '@telegram-apps/bridge';\nimport { computed, type Computed, signal } from '@telegram-apps/signals';\n\nimport { isColorDark } from '@/utils/isColorDark.js';\n\n/**\n * True if the component is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * True if CSS variables are currently bound.\n */\nexport const isCssVarsBound = signal(false);\n\n/**\n * Complete component state.\n */\nexport const state = signal<ThemeParams>({});\n\nfunction fromState<K extends keyof ThemeParams>(key: K): Computed<ThemeParams[K] | undefined> {\n  return computed(() => state()[key]);\n}\n\n/**\n * @since v6.10\n */\nexport const accentTextColor = fromState('accentTextColor');\n\nexport const backgroundColor = fromState('bgColor');\n\nexport const buttonColor = fromState('buttonColor');\n\nexport const buttonTextColor = fromState('buttonTextColor');\n\n/**\n * @since v7.10\n */\nexport const bottomBarBgColor = fromState('bottomBarBgColor');\n\nexport const destructiveTextColor = fromState('destructiveTextColor');\n\n/**\n * @since v6.10\n */\nexport const headerBackgroundColor = fromState('headerBgColor');\n\nexport const hintColor = fromState('hintColor');\n\n/**\n * @returns True if the current color scheme is recognized as dark.\n * This value is calculated based on the current theme's background color.\n */\nexport const isDark = computed(() => {\n  const { bgColor } = state();\n  return !bgColor || isColorDark(bgColor);\n});\n\nexport const linkColor = fromState('linkColor');\n\nexport const secondaryBackgroundColor = fromState('secondaryBgColor');\n\n/**\n * @since v6.10\n */\nexport const sectionBackgroundColor = fromState('sectionBgColor');\n\n/**\n * @since v6.10\n */\nexport const sectionHeaderTextColor = fromState('sectionHeaderTextColor');\n\n/**\n * @since v7.6\n */\nexport const sectionSeparatorColor = fromState('sectionSeparatorColor');\n\n/**\n * @since v6.10\n */\nexport const subtitleTextColor = fromState('subtitleTextColor');\n\nexport const textColor = fromState('textColor');\n","import { computed, type Computed, signal } from '@telegram-apps/signals';\n\nimport {\n  buttonColor,\n  buttonTextColor,\n} from '@/scopes/components/theme-params/signals.js';\n\nimport type { State } from './types.js';\n\nfunction fromState<K extends keyof Required<State>>(\n  key: K,\n): Computed<Required<State>[K]> {\n  return computed(() => state()[key]);\n}\n\nexport const internalState = signal<State>({\n  hasShineEffect: false,\n  isEnabled: true,\n  isLoaderVisible: false,\n  isVisible: false,\n  text: 'Continue',\n});\n\n/**\n * Complete component state.\n */\nexport const state = computed<Required<State>>(() => {\n  const s = internalState();\n  return {\n    ...s,\n    backgroundColor: s.backgroundColor || buttonColor() || '#2481cc',\n    textColor: s.textColor || buttonTextColor() || '#ffffff',\n  };\n});\n\n/**\n * Signal indicating if the Main Button is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * Signal containing the current Main Button background color.\n */\nexport const backgroundColor = fromState('backgroundColor');\n\n/**\n * Signal indicating if the Main Button has a shining effect.\n */\nexport const hasShineEffect = fromState('hasShineEffect');\n\n/**\n * Signal indicating if the Main Button is currently active and can be clicked.\n */\nexport const isEnabled = fromState('isEnabled');\n\n/**\n * Signal indicating if the Main Button displays a loader inside it.\n */\nexport const isLoaderVisible = fromState('isLoaderVisible');\n\n/**\n * Signal indicating if the Main Button is currently visible.\n */\nexport const isVisible = fromState('isVisible');\n\n/**\n * Signal containing the Main Button text.\n */\nexport const text = fromState('text');\n\n/**\n * Signal containing the current Main Button text color.\n */\nexport const textColor = fromState('textColor');\n","import {\n  off,\n  on,\n  getStorageValue,\n  setStorageValue,\n  type EventListener,\n} from '@telegram-apps/bridge';\nimport { isPageReload } from '@telegram-apps/navigation';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { createWrapBasic } from '@/scopes/toolkit/createWrapBasic.js';\nimport { createWrapMounted } from '@/scopes/toolkit/createWrapMounted.js';\nimport { removeUndefined } from '@/utils/removeUndefined.js';\n\nimport { internalState, isMounted, state } from './signals.js';\nimport type { State } from './types.js';\n\ntype StorageValue = State;\n\nconst SETUP_METHOD_NAME = 'web_app_setup_main_button';\nconst CLICK_EVENT_NAME = 'main_button_pressed';\nconst COMPONENT_NAME = 'mainButton';\n\nconst wrapBasic = createWrapBasic(COMPONENT_NAME);\nconst wrapMounted = createWrapMounted(COMPONENT_NAME, isMounted);\n\n/**\n * Mounts the Main Button restoring its state.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example\n * if (mount.isAvailable()) {\n *   mount();\n * }\n */\nexport const mount = wrapBasic('mount', (): void => {\n  if (!isMounted()) {\n    const prev = isPageReload() && getStorageValue<StorageValue>(COMPONENT_NAME);\n    prev && internalState.set(prev);\n    isMounted.set(true);\n  }\n});\n\n/**\n * Adds a new Main Button click listener.\n * @param fn - event listener.\n * @returns A function to remove bound listener.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example\n * if (onClick.isAvailable()) {\n *   const off = onClick(() => {\n *     console.log('User clicked the Main Button');\n *     off();\n *   });\n * }\n */\nexport const onClick = wrapBasic(\n  'onClick',\n  (fn: EventListener<'main_button_pressed'>): VoidFunction => {\n    return on(CLICK_EVENT_NAME, fn);\n  },\n);\n\n/**\n * Removes the Main Button click listener.\n * @param fn - an event listener.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example\n * if (offClick.isAvailable()) {\n *   function listener() {\n *     console.log('User clicked the Main Button');\n *     offClick(listener);\n *   }\n *   onClick(listener);\n * }\n */\nexport const offClick = wrapBasic(\n  'offClick',\n  (fn: EventListener<'main_button_pressed'>): void => {\n    off(CLICK_EVENT_NAME, fn);\n  },\n);\n\n/**\n * Updates the Main Button state.\n * @param updates - state changes to perform.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @example\n * if (setParams.isAvailable()) {\n *   setParams({\n *     text: 'Submit',\n *     isEnabled: true,\n *     hasShineEffect: true,\n *   });\n * }\n */\nexport const setParams = wrapMounted(\n  'setParams',\n  (updates: Partial<State>): void => {\n    internalState.set({ ...internalState(), ...removeUndefined(updates) });\n    setStorageValue<StorageValue>(COMPONENT_NAME, internalState());\n\n    // We should not commit changes until the payload is correct.\n    // Some version of Telegram will crash due to the empty value of the text.\n    const s = state();\n    s.text && postEvent(SETUP_METHOD_NAME, {\n      color: s.backgroundColor,\n      has_shine_effect: s.hasShineEffect,\n      is_active: s.isEnabled,\n      is_progress_visible: s.isLoaderVisible,\n      is_visible: s.isVisible,\n      text: s.text,\n      text_color: s.textColor,\n    });\n  },\n);\n\n/**\n * Unmounts the Main Button.\n *\n * Note that this function does not remove listeners added via the `onClick`\n * function, so you have to remove them on your own.\n * @see onClick\n */\nexport function unmount(): void {\n  isMounted.set(false);\n}\n","import { TypedError } from '@telegram-apps/bridge';\n\nimport { ERR_CSS_VARS_ALREADY_BOUND } from '@/errors.js';\n\n/**\n * @throws {TypedError} ERR_CSS_VARS_ALREADY_BOUND\n */\nexport function throwCssVarsBound(): never {\n  throw new TypedError(\n    ERR_CSS_VARS_ALREADY_BOUND,\n    'CSS variables are already bound',\n  );\n}","import { themeParams } from '@telegram-apps/transformers';\nimport type { ThemeParams } from '@telegram-apps/bridge';\n\n/**\n * Parses incoming value as theme parameters.\n * @param value - value to parse.\n */\nexport function parseThemeParams(value: unknown): ThemeParams {\n  return themeParams()(value);\n}\n","import {\n  off,\n  on,\n  camelToKebab,\n  getStorageValue,\n  setStorageValue,\n  retrieveLaunchParams,\n  deleteCssVar,\n  setCssVar,\n  type EventListener,\n  type RGB,\n  type ThemeParams,\n} from '@telegram-apps/bridge';\nimport { isPageReload } from '@telegram-apps/navigation';\n\nimport { throwCssVarsBound } from '@/scopes/toolkit/throwCssVarsBound.js';\nimport { createWrapMounted } from '@/scopes/toolkit/createWrapMounted.js';\nimport { createWrapBasic } from '@/scopes/toolkit/createWrapBasic.js';\n\nimport { isCssVarsBound, state, isMounted } from './signals.js';\nimport { parseThemeParams } from './parseThemeParams.js';\nimport type { GetCssVarNameFn } from './types.js';\n\ntype StorageValue = ThemeParams;\n\nconst COMPONENT_NAME = 'themeParams';\nconst THEME_CHANGED_EVENT = 'theme_changed';\n\nconst wrapBasic = createWrapBasic(COMPONENT_NAME);\nconst wrapMounted = createWrapMounted(COMPONENT_NAME, isMounted);\n\n/**\n * Creates CSS variables connected with the current theme parameters.\n *\n * By default, created CSS variables names are following the pattern \"--tg-theme-{name}\", where\n * {name} is a theme parameters key name converted from camel case to kebab case.\n *\n * Default variables:\n * - `--tg-theme-bg-color`\n * - `--tg-theme-secondary-text-color`\n *\n * Variables are being automatically updated if theme parameters were changed.\n *\n * @param getCSSVarName - function, returning complete CSS variable name for the specified\n * theme parameters key.\n * @returns Function to stop updating variables.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_CSS_VARS_ALREADY_BOUND\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @example Using no arguments\n * if (bindCssVars.isAvailable()) {\n *   bindCssVars();\n * }\n * @example Using custom CSS vars generator\n * if (bindCssVars.isAvailable()) {\n *   bindCssVars(key => `--my-prefix-${key}`);\n * }\n */\nexport const bindCssVars = wrapMounted(\n  'bindCssVars',\n  (getCSSVarName?: GetCssVarNameFn): VoidFunction => {\n    isCssVarsBound() && throwCssVarsBound();\n\n    getCSSVarName ||= (prop) => `--tg-theme-${camelToKebab(prop)}`;\n\n    function forEachEntry(fn: (key: string, value: RGB) => void): void {\n      Object.entries(state()).forEach(([k, v]) => {\n        v && fn(k, v);\n      });\n    }\n\n    function actualize(): void {\n      forEachEntry((k, v) => {\n        setCssVar(getCSSVarName!(k), v);\n      });\n    }\n\n    actualize();\n    state.sub(actualize);\n    isCssVarsBound.set(true);\n\n    return () => {\n      forEachEntry(deleteCssVar);\n      state.unsub(actualize);\n      isCssVarsBound.set(false);\n    };\n  },\n);\n\n/**\n * Mounts the Theme Params component restoring its state.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (mount.isAvailable()) {\n *   mount();\n * }\n */\nexport const mount = wrapBasic('mount', (): void => {\n  if (!isMounted()) {\n    on(THEME_CHANGED_EVENT, onThemeChanged);\n    state.set(\n      isPageReload()\n      && getStorageValue<StorageValue>(COMPONENT_NAME)\n      || retrieveLaunchParams().themeParams,\n    );\n    isMounted.set(true);\n  }\n});\n\nconst onThemeChanged: EventListener<'theme_changed'> = (e) => {\n  const value = parseThemeParams(e.theme_params);\n  state.set(value);\n  setStorageValue<StorageValue>(COMPONENT_NAME, value);\n};\n\n/**\n * Unmounts the Theme Params component.\n */\nexport function unmount(): void {\n  off(THEME_CHANGED_EVENT, onThemeChanged);\n  isMounted.set(false);\n}\n","import { Computed, computed, signal } from '@telegram-apps/signals';\nimport { isRGB } from '@telegram-apps/transformers';\nimport type { BackgroundColor, BottomBarColor, RGB } from '@telegram-apps/bridge';\n\nimport { isColorDark } from '@/utils/isColorDark.js';\nimport {\n  backgroundColor as themeBgColor,\n  secondaryBackgroundColor as themeSecondaryBgColor,\n  bottomBarBgColor as themeBottomBarBgColor,\n} from '@/scopes/components/theme-params/signals.js';\n\nimport type { HeaderColor, State } from './types.js';\n\n// #__NO_SIDE_EFFECTS__\nfunction rgbBasedOn(signal: Computed<'bg_color' | 'secondary_bg_color' | RGB>) {\n  return computed<RGB | undefined>(() => {\n    const color = signal();\n\n    return isRGB(color) ? color : color === 'bg_color'\n      ? themeBgColor()\n      : themeSecondaryBgColor();\n  });\n}\n\n/**\n * The Mini App background color.\n */\nexport const backgroundColor = signal<BackgroundColor>('bg_color');\n\n/**\n * RGB representation of the background color.\n *\n * This value requires the Theme Params component to be mounted to extract a valid RGB value\n * of the color key.\n */\nexport const backgroundColorRGB = rgbBasedOn(backgroundColor);\n\n\n/**\n * The Mini App bottom bar background color.\n */\nexport const bottomBarColor = signal<BottomBarColor>('bottom_bar_bg_color');\n\n/**\n * RGB representation of the bottom bar background color.\n *\n * This value requires the Theme Params component to be mounted to extract a valid RGB value\n * of the color key.\n */\nexport const bottomBarColorRGB = computed<RGB | undefined>(() => {\n  const color = bottomBarColor();\n  return isRGB(color)\n    ? color\n    : color === 'bottom_bar_bg_color'\n      // Following the logic from the Telegram SDK.\n      // I removed \"|| '#ffffff'\" because this seems too strange to me. This is just not right.\n      ? themeBottomBarBgColor() || themeSecondaryBgColor()\n      : color === 'secondary_bg_color'\n        ? themeSecondaryBgColor()\n        : themeBgColor();\n});\n\n/**\n * The Mini App header color.\n */\nexport const headerColor = signal<HeaderColor>('bg_color');\n\n/**\n * RGB representation of the header color.\n *\n * This value requires the Theme Params component to be mounted to extract a valid RGB value\n * of the color key.\n */\nexport const headerColorRGB = rgbBasedOn(headerColor);\n\n/**\n * True if the component is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * True if CSS variables are currently bound.\n */\nexport const isCssVarsBound = signal(false);\n\n/**\n * True if the current Mini App background color is recognized as dark.\n */\nexport const isDark = computed(() => {\n  const color = backgroundColorRGB();\n  return color ? isColorDark(color) : false;\n});\n\n/**\n * Complete component state.\n */\nexport const state = computed<State>(() => ({\n  backgroundColor: backgroundColor(),\n  bottomBarColor: bottomBarColor(),\n  headerColor: headerColor(),\n}));\n","import {\n  getStorageValue,\n  setStorageValue,\n  createCbCollector,\n  camelToKebab,\n  deleteCssVar,\n  setCssVar,\n  supports,\n  type RGB,\n  type BottomBarColor,\n  type BackgroundColor, MethodName,\n} from '@telegram-apps/bridge';\nimport { isRGB } from '@telegram-apps/transformers';\nimport { isPageReload } from '@telegram-apps/navigation';\nimport { computed, type Computed } from '@telegram-apps/signals';\n\nimport { $version, postEvent } from '@/scopes/globals.js';\nimport { mount as tpMount } from '@/scopes/components/theme-params/methods.js';\nimport { throwCssVarsBound } from '@/scopes/toolkit/throwCssVarsBound.js';\nimport { createWrapComplete } from '@/scopes/toolkit/createWrapComplete.js';\nimport { createWrapSupported } from '@/scopes/toolkit/createWrapSupported.js';\nimport { createWrapBasic } from '@/scopes/toolkit/createWrapBasic.js';\n\nimport {\n  headerColor,\n  backgroundColor,\n  isCssVarsBound,\n  state,\n  isMounted,\n  bottomBarColor,\n  headerColorRGB,\n  bottomBarColorRGB,\n  backgroundColorRGB,\n} from './signals.js';\nimport type { GetCssVarNameFn, HeaderColor, State } from './types.js';\n\ntype StorageValue = State;\n\nconst SET_BG_COLOR_METHOD = 'web_app_set_background_color';\nconst SET_BOTTOM_BAR_COLOR_METHOD = 'web_app_set_bottom_bar_color';\nconst SET_HEADER_COLOR_METHOD = 'web_app_set_header_color';\nconst COMPONENT_NAME = 'miniApp';\n\nconst isSupportedSchema = {\n  any: [\n    SET_BG_COLOR_METHOD,\n    SET_BOTTOM_BAR_COLOR_METHOD,\n    SET_HEADER_COLOR_METHOD,\n  ] as MethodName[],\n};\n\n/**\n * True if the Mini App component is supported.\n */\nexport const isSupported = computed(() => {\n  return isSupportedSchema.any.some(method => supports(method, $version()));\n});\n\nconst wrapBasic = createWrapBasic(COMPONENT_NAME);\nconst wrapSupported = createWrapSupported(COMPONENT_NAME, isSupportedSchema);\nconst wrapComplete = createWrapComplete(COMPONENT_NAME, isMounted, isSupportedSchema);\n\n/**\n * Creates CSS variables connected with the mini app.\n *\n * Default variables:\n * - `--tg-bg-color`\n * - `--tg-header-color`\n * - `--tg-bottom-bar-color`\n *\n * Variables are being automatically updated if theme parameters were changed.\n *\n * @param getCSSVarName - function, returning complete CSS variable name for the specified\n * mini app key.\n * @returns Function to stop updating variables.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_VARS_ALREADY_BOUND\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example Using no arguments\n * if (bindCssVars.isAvailable()) {\n *   bindCssVars();\n * }\n * @example Using custom CSS vars generator\n * if (bindCssVars.isAvailable()) {\n *   bindCssVars(key => `--my-prefix-${key}`);\n * }\n */\nexport const bindCssVars = wrapComplete(\n  'bindCssVars',\n  (getCSSVarName?: GetCssVarNameFn): VoidFunction => {\n    isCssVarsBound() && throwCssVarsBound();\n\n    const [addCleanup, cleanup] = createCbCollector();\n\n    /**\n     * Binds specified CSS variable to a signal.\n     * @param cssVar - CSS variable name.\n     * @param signal - signal to listen changes to.\n     */\n    function bind(cssVar: string, signal: Computed<RGB | undefined>) {\n      function update() {\n        setCssVar(cssVar, signal() || null);\n      }\n\n      // Instantly set CSS variable.\n      update();\n\n      // Remember to clean this relation up.\n      addCleanup(signal.sub(update), deleteCssVar.bind(null, cssVar));\n    }\n\n    getCSSVarName ||= (prop) => `--tg-${camelToKebab(prop)}`;\n    bind(getCSSVarName('bgColor'), backgroundColorRGB);\n    bind(getCSSVarName('bottomBarColor'), bottomBarColorRGB);\n    bind(getCSSVarName('headerColor'), headerColorRGB);\n    addCleanup(() => {\n      isCssVarsBound.set(false);\n    });\n\n    isCssVarsBound.set(true);\n\n    return cleanup;\n  },\n);\n\n/**\n * Closes the Mini App.\n * @param returnBack - should the client return to the previous activity.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example\n * if (close.isAvailable()) {\n *   close();\n * }\n */\nexport const close = wrapBasic('close', (returnBack?: boolean): void => {\n  postEvent('web_app_close', { return_back: returnBack });\n});\n\n/**\n * Mounts the component.\n *\n * This function restores the component state and is automatically saving it in the local storage\n * if it changed.\n *\n * Internally, the function mounts the Theme Params component to work with correctly extracted\n * theme palette values.\n * @since Mini Apps v6.1\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (mount.isAvailable()) {\n *   mount();\n * }\n */\nexport const mount = wrapSupported(\n  'mount',\n  (): void => {\n    if (!isMounted()) {\n      const s = isPageReload() && getStorageValue<StorageValue>(COMPONENT_NAME);\n      tpMount();\n\n      setBackgroundColor.ifAvailable(s ? s.backgroundColor : 'bg_color');\n      setBottomBarColor.ifAvailable(s ? s.bottomBarColor : 'bottom_bar_bg_color');\n      setHeaderColor.ifAvailable(s ? s.headerColor : 'bg_color');\n\n      isMounted.set(true);\n    }\n  },\n);\n\n/**\n * Informs the Telegram app that the Mini App is ready to be displayed.\n *\n * It is recommended to call this method as early as possible, as soon as all\n * essential interface elements loaded.\n *\n * Once this method is called, the loading placeholder is hidden and the Mini\n * App shown.\n *\n * If the method is not called, the placeholder will be hidden only when the\n * page was fully loaded.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example\n * if (ready.isAvailable()) {\n *   ready();\n * }\n */\nexport const ready = wrapBasic('ready', (): void => {\n  postEvent('web_app_ready');\n});\n\nfunction saveState() {\n  setStorageValue<StorageValue>(COMPONENT_NAME, state());\n}\n\n/**\n * Updates the background color.\n * @since Mini Apps v6.1\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @example\n * if (setBackgroundColor.isAvailable()) {\n *   setBackgroundColor('bg_color');\n * }\n */\nexport const setBackgroundColor = wrapComplete(\n  'setBackgroundColor',\n  (color: BackgroundColor): void => {\n    if (color !== backgroundColor()) {\n      postEvent(SET_BG_COLOR_METHOD, { color });\n      backgroundColor.set(color);\n      saveState();\n    }\n  },\n  SET_BG_COLOR_METHOD,\n);\n\n/**\n * Updates the bottom bar background color.\n * @since Mini Apps v7.10\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @example\n * if (setBottomBarColor.isAvailable()) {\n *   setBottomBarColor('ff11a3');\n * }\n */\nexport const setBottomBarColor = wrapComplete(\n  'setBottomBarColor',\n  (color: BottomBarColor) => {\n    if (color !== bottomBarColor()) {\n      postEvent(SET_BOTTOM_BAR_COLOR_METHOD, { color });\n      bottomBarColor.set(color);\n      saveState();\n    }\n  },\n  SET_BOTTOM_BAR_COLOR_METHOD,\n);\n\n/**\n * Updates the header color.\n * @since Mini Apps v6.1\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @example Using known color key\n * if (setHeaderColor.isAvailable()) {\n *   setHeaderColor('bg_color');\n * }\n * @example Using RGB\n * if (setHeaderColor.isAvailable() && setHeaderColor.supports.rgb()) {\n *   setHeaderColor('#ffaabb');\n * }\n */\nexport const setHeaderColor = wrapComplete(\n  'setHeaderColor',\n  (color: HeaderColor): void => {\n    if (color !== headerColor()) {\n      postEvent(SET_HEADER_COLOR_METHOD, isRGB(color) ? { color } : { color_key: color });\n      headerColor.set(color);\n      saveState();\n    }\n  },\n  SET_HEADER_COLOR_METHOD,\n  {\n    rgb: [SET_HEADER_COLOR_METHOD, 'color', isRGB],\n  },\n);\n\n/**\n * Unmounts the component, removing the listener, saving the component state in the local storage.\n */\nexport function unmount(): void {\n  isMounted.set(false);\n}\n","import { type PopupParams, TypedError } from '@telegram-apps/bridge';\n\nimport { ERR_POPUP_INVALID_PARAMS } from '@/errors.js';\n\nimport type { OpenOptions } from './types.js';\n\n/**\n * Prepares popup parameters before sending them to native app.\n * @param params - popup parameters.\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid title\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid message\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid buttons count\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid button id length\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid button text length\n */\nexport function prepareParams(params: OpenOptions): PopupParams {\n  const message = params.message.trim();\n  const title = (params.title || '').trim();\n  const buttons = params.buttons || [];\n\n  if (title.length > 64) {\n    throw new TypedError(ERR_POPUP_INVALID_PARAMS, `Invalid title: ${title}`);\n  }\n  if (!message || message.length > 256) {\n    throw new TypedError(ERR_POPUP_INVALID_PARAMS, `Invalid message: ${message}`);\n  }\n  if (buttons.length > 3) {\n    throw new TypedError(ERR_POPUP_INVALID_PARAMS, `Invalid buttons count: ${buttons.length}`);\n  }\n\n  return {\n    title,\n    message,\n    buttons: buttons.length\n      ? buttons.map((b, idx) => {\n        const id = b.id || '';\n        if (id.length > 64) {\n          throw new TypedError(ERR_POPUP_INVALID_PARAMS, `Button with index ${idx} has invalid id: ${id}`);\n        }\n\n        if (!b.type || b.type === 'default' || b.type === 'destructive') {\n          const text = b.text.trim();\n          if (!text || text.length > 64) {\n            throw new TypedError(ERR_POPUP_INVALID_PARAMS, `Button with index ${idx} has invalid text: ${text}`);\n          }\n          return { type: b.type, text, id };\n        }\n        return { type: b.type, id };\n      })\n      : [{ type: 'close', id: '' }],\n  };\n}","import { TypedError } from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\n\nimport { request } from '@/scopes/globals.js';\nimport { ERR_ALREADY_OPENED } from '@/errors.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWrapSupported } from '@/scopes/toolkit/createWrapSupported.js';\n\nimport { prepareParams } from './prepareParams.js';\nimport type { OpenOptions } from './types.js';\n\nconst OPEN_METHOD = 'web_app_open_popup';\nconst wrapSupported = createWrapSupported('popup', OPEN_METHOD);\n\n/**\n * Signal indicating if a popup is opened.\n */\nexport const isOpened = signal(false);\n\n/**\n * Signal indicating if popups are supported.\n */\nexport const isSupported = createIsSupported(OPEN_METHOD);\n\n/**\n * A method that shows a native popup described by the `params` argument.\n * The promise will be resolved when the popup is closed. Resolved value will have\n * an identifier of the pressed button.\n *\n * If a user clicked outside the popup or clicked the top right popup close\n * button, null will be resolved.\n *\n * @param options - popup parameters.\n * @since Mini Apps v6.2\n * @throws {TypedError} ERR_ALREADY_OPENED\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid title\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid message\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid buttons count\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid button id length\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid button text length\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (open.isAvailable()) {\n *   const buttonId = await open({\n *     title: 'Confirm action',\n *     message: 'Do you really want to buy this burger?',\n *     buttons: [\n *       { id: 'yes', text: 'Yes' },\n *       { id: 'no', type: 'destructive', text: 'No' },\n *     ],\n *   });\n * }\n */\nexport const open = wrapSupported(\n  'open',\n  async (options: OpenOptions): Promise<string | null> => {\n    if (isOpened()) {\n      throw new TypedError(ERR_ALREADY_OPENED, 'A popup is already opened');\n    }\n    isOpened.set(true);\n\n    try {\n      const { button_id: buttonId = null } = await request(OPEN_METHOD, 'popup_closed', {\n        ...options,\n        params: prepareParams(options),\n      });\n      return buttonId;\n    } finally {\n      isOpened.set(false);\n    }\n  },\n);","import {\n  CancelablePromise,\n  createCbCollector,\n  TypedError,\n  on,\n  EnhancedPromise,\n  type ExecuteWithOptions,\n} from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { ERR_ALREADY_OPENED } from '@/errors.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWrapSupported } from '@/scopes/toolkit/createWrapSupported.js';\n\ninterface OpenSharedOptions extends ExecuteWithOptions {\n  /**\n   * Title to be displayed in the scanner.\n   */\n  text?: string;\n}\n\nconst CLOSE_METHOD = 'web_app_close_scan_qr_popup';\nconst OPEN_METHOD = 'web_app_open_scan_qr_popup';\nconst CLOSED_EVENT = 'scan_qr_popup_closed';\nconst TEXT_RECEIVED_EVENT = 'qr_text_received';\n\nconst wrapSupported = createWrapSupported('qrScanner', OPEN_METHOD);\n\n/**\n * Closes the scanner.\n * @since Mini Apps v6.4\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (close.isAvailable()) {\n *   close();\n * }\n */\nexport const close = wrapSupported('close', (): void => {\n  isOpened.set(false);\n  postEvent(CLOSE_METHOD);\n});\n\n/**\n * True if the scanner is currently opened.\n */\nexport const isOpened = signal(false);\n\n/**\n * Signal indicating if the QR Scanner is currently opened.\n */\nexport const isSupported = createIsSupported(OPEN_METHOD);\n\n/**\n * Opens the scanner and returns a promise which will be resolved with the QR\n * content if the passed `capture` function returned true.\n *\n * The `capture` option may be ommited. In this case, the first scanned QR\n * will be returned.\n *\n * Promise may also be resolved to undefined if the scanner was closed.\n * @param options - method options.\n * @returns A promise with QR content presented as string or undefined if the\n * scanner was closed.\n * @since Mini Apps v6.4\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_ALREADY_OPENED\n * @example Without `capture` option\n * if (open.isAvailable()) {\n *   const qr = await open({ text: 'Scan any QR' });\n * }\n * @example Using `capture` option\n * if (open.isAvailable()) {\n *   const qr = await open({\n *     text: 'Scan any QR',\n *     capture(scannedQr) {\n *       return scannedQr === 'any expected by me qr';\n *     }\n *   });\n * }\n */\nfunction _open(options?: OpenSharedOptions & {\n  /**\n   * Function, which should return true if the scanned QR should be captured.\n   * @param qr - scanned QR content.\n   */\n  capture?: (qr: string) => boolean;\n}): CancelablePromise<string | undefined>;\n\n/**\n * Opens the scanner and calls the `onCaptured` function each time, a QR was\n * scanned.\n *\n * The function returns a promise which will be resolved when the QR scanner\n * was closed. It expects the scanner to be closed externally by a user or\n * via the `close` method.\n * @param options - method options.\n * @since Mini Apps v6.4\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_ALREADY_OPENED\n * @example\n * if (open.isAvailable()) {\n *   const promise = await open({\n *     text: 'Scan any QR',\n *     onCaptured(scannedQr) {\n *       if (scannedQr === 'any expected by me qr') {\n *         close();\n *       }\n *     }\n *   });\n *   console.log('The scanner was closed');\n * }\n */\nfunction _open(options: OpenSharedOptions & {\n  /**\n   * Function which will be called if a QR code was scanned.\n   * @param qr - scanned QR content.\n   */\n  onCaptured: (qr: string) => void;\n}): CancelablePromise<void>;\n\nfunction _open(options?: OpenSharedOptions & {\n  onCaptured?: (qr: string) => void;\n  capture?: (qr: string) => boolean;\n}): CancelablePromise<string | void> {\n  return CancelablePromise.withFn((abortSignal) => {\n    if (isOpened()) {\n      throw new TypedError(ERR_ALREADY_OPENED, 'The QR Scanner is already opened');\n    }\n    isOpened.set(true);\n\n    options ||= {};\n    const { onCaptured, text, capture } = options;\n    const [, cleanup] = createCbCollector(\n      // Whenever the scanner was closed for some reason (by a developer or a\n      // user), we should resolve the promise with undefined.\n      isOpened.sub(() => {\n        promise.resolve();\n      }),\n      // Whenever user closed the scanner, update the isOpened signal state.\n      on(CLOSED_EVENT, () => {\n        isOpened.set(false);\n      }),\n      // Whenever some QR was scanned, we should check if it must be captured.\n      on(TEXT_RECEIVED_EVENT, (event) => {\n        if (onCaptured) {\n          onCaptured(event.data);\n        } else if (!capture || capture(event.data)) {\n          promise.resolve(event.data);\n          close();\n        }\n      }),\n    );\n\n    const promise = new EnhancedPromise<string | void>({ abortSignal })\n      .catch(close)\n      .finally(cleanup);\n\n    (options.postEvent || postEvent)(OPEN_METHOD, { text });\n\n    return promise;\n  }, options);\n}\n\nexport const open = wrapSupported('open', _open);","import { computed, type Computed, signal } from '@telegram-apps/signals';\n\nimport { buttonColor } from '@/scopes/components/theme-params/signals.js';\nimport { bottomBarColorRGB } from '@/scopes/components/mini-app/signals.js';\n\nimport type { State } from './types.js';\n\nfunction fromState<K extends keyof Required<State>>(key: K): Computed<Required<State>[K]> {\n  return computed(() => state()[key]);\n}\n\nexport const internalState = signal<State>({\n  hasShineEffect: false,\n  isEnabled: true,\n  isLoaderVisible: false,\n  isVisible: false,\n  position: 'left',\n  text: 'Cancel',\n});\n\n/**\n * Complete component state.\n */\nexport const state = computed<Required<State>>(() => {\n  const s = internalState();\n  return {\n    ...s,\n    backgroundColor: s.backgroundColor || bottomBarColorRGB() || '#000000',\n    textColor: s.textColor || buttonColor() || '#2481cc',\n  };\n});\n\n/**\n * True if the component is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * @see State.backgroundColor\n */\nexport const backgroundColor = fromState('backgroundColor');\n\n/**\n * @see State.hasShineEffect\n */\nexport const hasShineEffect = fromState('hasShineEffect');\n\n/**\n * @see State.isEnabled\n */\nexport const isEnabled = fromState('isEnabled');\n\n/**\n * @see State.isLoaderVisible\n */\nexport const isLoaderVisible = fromState('isLoaderVisible');\n\n/**\n * @see State.isVisible\n */\nexport const isVisible = fromState('isVisible');\n\n/**\n * @see State.position\n */\nexport const position = fromState('position');\n\n/**\n * @see State.text\n */\nexport const text = fromState('text');\n\n/**\n * @see State.textColor\n */\nexport const textColor = fromState('textColor');\n","import {\n  off,\n  on,\n  getStorageValue,\n  setStorageValue,\n  type EventListener,\n} from '@telegram-apps/bridge';\nimport { isPageReload } from '@telegram-apps/navigation';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWrapComplete } from '@/scopes/toolkit/createWrapComplete.js';\nimport { createWrapSupported } from '@/scopes/toolkit/createWrapSupported.js';\n\nimport { internalState, isMounted, state } from './signals.js';\nimport type { State } from './types.js';\n\ntype StorageValue = State;\n\nconst SETUP_METHOD_NAME = 'web_app_setup_secondary_button';\nconst CLICK_EVENT_NAME = 'secondary_button_pressed';\nconst COMPONENT_NAME = 'secondaryButton';\n\nconst wrapSupported = createWrapSupported(COMPONENT_NAME, SETUP_METHOD_NAME);\nconst wrapComplete = createWrapComplete(COMPONENT_NAME, isMounted, SETUP_METHOD_NAME);\n\n/**\n * Signal indicating if the Secondary Button is supported.\n */\nexport const isSupported = createIsSupported(SETUP_METHOD_NAME);\n\n/**\n * Mounts the Secondary Button restoring its state.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (mount.isAvailable()) {\n *   mount();\n * }\n */\nexport const mount = wrapSupported('mount', (): void => {\n  if (!isMounted()) {\n    const prev = isPageReload() && getStorageValue<StorageValue>(COMPONENT_NAME);\n    prev && internalState.set(prev);\n    isMounted.set(true);\n  }\n});\n\n/**\n * Adds a new Secondary Button click listener.\n * @param fn - event listener.\n * @returns A function to remove bound listener.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (onClick.isAvailable()) {\n *   const off = onClick(() => {\n *     console.log('User clicked the Secondary Button');\n *     off();\n *   });\n * }\n */\nexport const onClick = wrapSupported(\n  'onClick',\n  (fn: EventListener<'secondary_button_pressed'>): VoidFunction => on(CLICK_EVENT_NAME, fn),\n);\n\n/**\n * Removes the Secondary Button click listener.\n * @param fn - an event listener.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (offClick.isAvailable()) {\n *   function listener() {\n *     console.log('User clicked the Secondary Button');\n *     offClick(listener);\n *   }\n *   onClick(listener);\n * }\n */\nexport const offClick = wrapSupported(\n  'offClick',\n  (fn: EventListener<'secondary_button_pressed'>): void => {\n    off(CLICK_EVENT_NAME, fn);\n  },\n);\n\n/**\n * Updates the Secondary Button state.\n * @param updates - state changes to perform.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (setParams.isAvailable()) {\n *   setParams({\n *     text: 'Submit',\n *     isEnabled: true,\n *     isVisible: true,\n *     position: 'left',\n *   });\n * }\n */\nexport const setParams = wrapComplete(\n  'setParams',\n  (updates: Partial<State>): void => {\n    internalState.set({\n      ...internalState(),\n      ...Object.fromEntries(\n        Object.entries(updates).filter(([, v]) => v !== undefined),\n      ),\n    });\n    setStorageValue<StorageValue>(COMPONENT_NAME, internalState());\n\n    // We should not commit changes until the payload is correct. Some version of Telegram will\n    // crash due to the empty value of the text.\n    const s = state();\n    s.text && postEvent(SETUP_METHOD_NAME, {\n      color: s.backgroundColor,\n      has_shine_effect: s.hasShineEffect,\n      is_active: s.isEnabled,\n      is_progress_visible: s.isLoaderVisible,\n      is_visible: s.isVisible,\n      position: s.position,\n      text: s.text,\n      text_color: s.textColor,\n    });\n  },\n);\n\n/**\n * Unmounts the Secondary Button.\n *\n * Note that this function does not remove listeners added via the `onClick`\n * function, so you have to remove them on your own.\n * @see onClick\n */\nexport function unmount(): void {\n  isMounted.set(false);\n}","import {\n  off,\n  on,\n  getStorageValue,\n  setStorageValue,\n  type EventListener,\n} from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\nimport { isPageReload } from '@telegram-apps/navigation';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWrapComplete } from '@/scopes/toolkit/createWrapComplete.js';\nimport {\n  createWrapSupported\n} from '@/scopes/toolkit/createWrapSupported.js';\n\ntype StorageValue = boolean;\n\nconst SETUP_METHOD_NAME = 'web_app_setup_settings_button';\nconst CLICK_EVENT_NAME = 'settings_button_pressed';\nconst COMPONENT_NAME = 'settingsButton';\n\n/**\n * Signal indicating if the Settings Button is currently visible.\n */\nexport const isVisible = signal(false);\n\n/**\n * Signal indicating if the Settings Button is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * Signal indicating if the Settings Button is supported.\n */\nexport const isSupported = createIsSupported(SETUP_METHOD_NAME);\n\nconst wrapSupported = createWrapSupported(COMPONENT_NAME, SETUP_METHOD_NAME);\nconst wrapComplete = createWrapComplete(COMPONENT_NAME, isMounted, SETUP_METHOD_NAME);\n\n/**\n * Hides the Settings Button.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @since Mini Apps v6.10\n * @example\n * if (hide.isAvailable()) {\n *   hide();\n * }\n */\nexport const hide = wrapComplete('hide', (): void => {\n  setVisibility(false);\n});\n\n/**\n * Mounts the Settings Button restoring its state.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @since Mini Apps v6.10\n * @example\n * if (mount.isAvailable()) {\n *   mount();\n * }\n */\nexport const mount = wrapSupported('mount', (): void => {\n  if (!isMounted()) {\n    setVisibility(isPageReload() && getStorageValue<StorageValue>(COMPONENT_NAME) || false);\n    isMounted.set(true);\n  }\n});\n\nfunction setVisibility(value: boolean): void {\n  if (value !== isVisible()) {\n    postEvent(SETUP_METHOD_NAME, { is_visible: value });\n    setStorageValue<StorageValue>(COMPONENT_NAME, value);\n    isVisible.set(value);\n  }\n}\n\n/**\n * Adds a new Settings Button click listener.\n * @param fn - event listener.\n * @returns A function to remove bound listener.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @since Mini Apps v6.10\n * @example\n * if (onClick.isAvailable()) {\n *   const off = onClick(() => {\n *     console.log('User clicked the Settings Button');\n *     off();\n *   });\n * }\n */\nexport const onClick = wrapSupported(\n  'onClick',\n  (fn: EventListener<'settings_button_pressed'>): VoidFunction => on(CLICK_EVENT_NAME, fn),\n);\n\n/**\n * Removes the Settings Button click listener.\n * @param fn - an event listener.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @since Mini Apps v6.10\n * @example\n * if (offClick.isAvailable()) {\n *   function listener() {\n *     console.log('User clicked the Settings Button');\n *     offClick(listener);\n *   }\n *   onClick(listener);\n * }\n */\nexport const offClick = wrapSupported(\n  'offClick',\n  (fn: EventListener<'settings_button_pressed'>): void => {\n    off(CLICK_EVENT_NAME, fn);\n  },\n);\n\n/**\n * Shows the Settings Button.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @since Mini Apps v6.10\n * @example\n * if (show.isAvailable()) {\n *   show();\n * }\n */\nexport const show = wrapComplete('show', (): void => {\n  setVisibility(true);\n});\n\n/**\n * Unmounts the Settings Button.\n *\n * Note that this function does not remove listeners added via the `onClick`\n * function, so you have to remove them on your own.\n * @see onClick\n */\nexport function unmount(): void {\n  isMounted.set(false);\n}\n","import { isPageReload } from '@telegram-apps/navigation';\nimport { getStorageValue, setStorageValue } from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWrapComplete } from '@/scopes/toolkit/createWrapComplete.js';\nimport {\n  createWrapSupported\n} from '@/scopes/toolkit/createWrapSupported.js';\n\ntype StorageValue = boolean;\n\nconst SETUP_METHOD_NAME = 'web_app_setup_swipe_behavior';\nconst COMPONENT_NAME = 'swipeBehavior';\n\n/**\n * Signal indicating if the Swipe Behavior component is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * Signal indicating if the Swipe Behavior is supported.\n */\nexport const isSupported = createIsSupported(SETUP_METHOD_NAME);\n\n/**\n * Signal indicating if vertical swipes are enabled.\n */\nexport const isVerticalEnabled = signal(true);\n\nconst wrapSupported = createWrapSupported(COMPONENT_NAME, SETUP_METHOD_NAME);\nconst wrapComplete = createWrapComplete(COMPONENT_NAME, isMounted, SETUP_METHOD_NAME);\n\n/**\n * Disables vertical swipes.\n * @since Mini Apps v7.7\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @example\n * if (disableVertical.isAvailable()) {\n *   disableVertical();\n * }\n */\nexport const disableVertical = wrapComplete('disableVertical', (): void => {\n  setVerticalEnabled(false);\n});\n\n/**\n * Enables vertical swipes.\n * @since Mini Apps v7.7\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @example\n * if (enableVertical.isAvailable()) {\n *   enableVertical();\n * }\n */\nexport const enableVertical = wrapComplete('enableVertical', (): void => {\n  setVerticalEnabled(true);\n});\n\n/**\n * Mounts the Swipe Behavior component restoring its state.\n * @since Mini Apps v7.7\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (mount.isAvailable()) {\n *   mount();\n * }\n */\nexport const mount = wrapSupported('mount', (): void => {\n  if (!isMounted()) {\n    setVerticalEnabled(\n      isPageReload() && getStorageValue<StorageValue>(COMPONENT_NAME) || false,\n      true,\n    );\n    isMounted.set(true);\n  }\n});\n\nfunction setVerticalEnabled(value: boolean, force?: boolean): void {\n  if (value !== isVerticalEnabled() || force) {\n    postEvent(SETUP_METHOD_NAME, { allow_vertical_swipe: value });\n    setStorageValue<StorageValue>(COMPONENT_NAME, value);\n    isVerticalEnabled.set(value);\n  }\n}\n\n/**\n * Unmounts the Swipe Behavior component.\n */\nexport function unmount(): void {\n  isMounted.set(false);\n}\n","export const COMPONENT_NAME = 'viewport';\nexport const REQUEST_FS_METHOD = 'web_app_request_fullscreen';\nexport const FS_FAILED_EVENT = 'fullscreen_failed';\nexport const FS_CHANGED_EVENT = 'fullscreen_changed';\nexport const SA_CHANGED_EVENT = 'safe_area_changed';\nexport const CSA_CHANGED_EVENT = 'content_safe_area_changed';\nexport const VIEWPORT_CHANGED_EVENT = 'viewport_changed';\nexport const REQUEST_SAFE_AREA_METHOD = 'web_app_request_safe_area';\nexport const REQUEST_CONTENT_SAFE_AREA_METHOD = 'web_app_request_content_safe_area';","import { computed, type Computed, signal } from '@telegram-apps/signals';\nimport { getStorageValue, type SafeAreaInsets, setStorageValue } from '@telegram-apps/bridge';\n\nimport { removeUndefined } from '@/utils/removeUndefined.js';\n\nimport { COMPONENT_NAME } from '../const.js';\nimport type { State } from '../types.js';\n\nconst initialInsets: SafeAreaInsets = {\n  left: 0,\n  top: 0,\n  bottom: 0,\n  right: 0,\n};\n\nfunction nonNegative(value: number): number {\n  return Math.max(value, 0);\n}\n\n/**\n * Signal containing the component complete state.\n */\nexport const state = signal<State>({\n  contentSafeAreaInsets: initialInsets,\n  height: 0,\n  isExpanded: false,\n  isFullscreen: false,\n  safeAreaInsets: initialInsets,\n  stableHeight: 0,\n  width: 0,\n});\n\nexport function signalFromState<K extends keyof State>(key: K): Computed<State[K]> {\n  return computed(() => state()[key]);\n}\n\nexport function setState(s: Partial<State>) {\n  const { height, stableHeight, width } = s;\n\n  state.set({\n    ...state(),\n    ...removeUndefined({\n      ...s,\n      height: height ? nonNegative(height) : undefined,\n      width: width ? nonNegative(width) : undefined,\n      stableHeight: stableHeight ? nonNegative(stableHeight) : undefined,\n    }),\n  });\n  setStorageValue<State>(COMPONENT_NAME, state());\n}\n\nexport function getStateFromStorage() {\n  return getStorageValue<State>(COMPONENT_NAME);\n}\n","import { computed, signal } from '@telegram-apps/signals';\nimport type { CancelablePromise } from '@telegram-apps/bridge';\n\nimport { signalFromState } from './state.js';\n\n/**\n * Signal indicating if the viewport is currently in fullscreen mode.\n */\nexport const isFullscreen = signalFromState('isFullscreen');\n\n/**\n * Signal containing fullscreen request or exit promise.\n */\nexport const changeFullscreenPromise = signal<CancelablePromise<void>>();\n\n/**\n * Signal indicating if the fullscreen mode request is currently in progress.\n */\nexport const isChangingFullscreen = computed(() => {\n  return !!changeFullscreenPromise();\n});\n\n/**\n * Signal containing an error received during the last fullscreen mode request.\n */\nexport const changeFullscreenError = signal<Error | undefined>();\n","import { computed, signal } from '@telegram-apps/signals';\nimport type { CancelablePromise } from '@telegram-apps/bridge';\n\nimport { State } from '../types.js';\n\n/**\n * Signal indicating if the component is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * Signal indicating if the component is currently mounting.\n */\nexport const isMounting = computed(() => !!mountPromise());\n\n/**\n * Signal containing the error occurred during mount.\n */\nexport const mountError = signal<Error | undefined>(undefined);\n\n/**\n * Signal containing the mount process promise.\n */\nexport const mountPromise = signal<CancelablePromise<State> | undefined>();","import { signalifyAsyncFn } from '@/scopes/signalifyAsyncFn.js';\nimport { type AsyncOptions, CancelablePromise, TypedError } from '@telegram-apps/bridge';\n\nimport { request } from '@/scopes/globals.js';\nimport { ERR_ALREADY_REQUESTING, ERR_FULLSCREEN_FAILED } from '@/errors.js';\nimport { createWrapComplete } from '@/scopes/toolkit/createWrapComplete.js';\n\nimport {\n  COMPONENT_NAME,\n  FS_CHANGED_EVENT,\n  FS_FAILED_EVENT,\n  REQUEST_FS_METHOD,\n} from '../../const.js';\nimport {\n  changeFullscreenError,\n  changeFullscreenPromise,\n  isFullscreen,\n} from '../../signals/fullscreen.js';\nimport { isMounted } from '../../signals/mounting.js';\nimport { setState } from '@/scopes/components/viewport/signals/state.js';\n\nconst wrapComplete = createWrapComplete(COMPONENT_NAME, isMounted, REQUEST_FS_METHOD);\n\nexport function createFullscreenFn(\n  method: string,\n  requestMethod: 'web_app_exit_fullscreen' | 'web_app_request_fullscreen',\n) {\n  return wrapComplete(method, signalifyAsyncFn(\n    (options?: AsyncOptions): CancelablePromise<void> => {\n      return request(requestMethod, [FS_CHANGED_EVENT, FS_FAILED_EVENT], options)\n        .then(result => {\n          if ('error' in result) {\n            if (result.error === 'ALREADY_FULLSCREEN') {\n              return true;\n            }\n            throw new TypedError(ERR_FULLSCREEN_FAILED, 'Fullscreen request failed', result.error);\n          }\n          return result.is_fullscreen;\n        })\n        .then(value => {\n          value !== isFullscreen() && setState({ isFullscreen: value });\n        });\n    },\n    () => {\n      return new TypedError(ERR_ALREADY_REQUESTING, 'Fullscreen mode change is already being requested');\n    },\n    changeFullscreenPromise,\n    changeFullscreenError,\n  ));\n}\n","import { createFullscreenFn } from './createFullscreenFn.js';\nimport { REQUEST_FS_METHOD } from '../../const.js';\n\n/**\n * Requests fullscreen mode for the mini application.\n * @since Mini Apps v8.0\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_FULLSCREEN_FAILED\n * @example Using `isAvailable()`\n * if (requestFullscreen.isAvailable() && !isChangingFullscreen()) {\n *   await requestFullscreen();\n * }\n * @example Using `ifAvailable()`\n * if (!isChangingFullscreen()) {\n *   await requestFullscreen.ifAvailable();\n * }\n */\nexport const requestFullscreen = createFullscreenFn('requestFullscreen', REQUEST_FS_METHOD);","import { createFullscreenFn } from './createFullscreenFn.js';\n\n/**\n * Exits mini application fullscreen mode.\n * @since Mini Apps v8.0\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_FULLSCREEN_FAILED\n * @example Using `isAvailable()`\n * if (exitFullscreen.isAvailable() && !isChangingFullscreen()) {\n *   await exitFullscreen();\n * }\n * @example Using `ifAvailable()`\n * if (!isChangingFullscreen()) {\n *   await exitFullscreen.ifAvailable();\n * }\n */\nexport const exitFullscreen = createFullscreenFn('exitFullscreen', 'web_app_exit_fullscreen');","import { createWrapBasic } from '@/scopes/toolkit/createWrapBasic.js';\nimport { createWrapMounted } from '@/scopes/toolkit/createWrapMounted.js';\n\nimport { isMounted } from '../signals/mounting.js';\nimport { COMPONENT_NAME } from '../const.js';\n\nexport const wrapBasic = createWrapBasic(COMPONENT_NAME);\n\nexport const wrapMounted = createWrapMounted(COMPONENT_NAME, isMounted);","import { type Computed, computed } from '@telegram-apps/signals';\nimport type { SafeAreaInsets } from '@telegram-apps/bridge';\n\nimport { signalFromState } from './state.js';\n\nfunction fromState(key: keyof SafeAreaInsets): Computed<number> {\n  return computed(() => safeAreaInsets()[key]);\n}\n\nexport const safeAreaInsets = signalFromState('safeAreaInsets');\nexport const safeAreaInsetBottom = fromState('bottom');\nexport const safeAreaInsetLeft = fromState('left');\nexport const safeAreaInsetRight = fromState('right');\nexport const safeAreaInsetTop = fromState('top');","import { type Computed, computed } from '@telegram-apps/signals';\nimport type { SafeAreaInsets } from '@telegram-apps/bridge';\n\nimport { signalFromState } from './state.js';\n\nfunction fromState(key: keyof SafeAreaInsets): Computed<number> {\n  return computed(() => contentSafeAreaInsets()[key]);\n}\n\nexport const contentSafeAreaInsets = signalFromState('contentSafeAreaInsets');\nexport const contentSafeAreaInsetBottom = fromState('bottom');\nexport const contentSafeAreaInsetLeft = fromState('left');\nexport const contentSafeAreaInsetRight = fromState('right');\nexport const contentSafeAreaInsetTop = fromState('top');","import type { AsyncOptions } from '@telegram-apps/bridge';\n\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\nimport { request } from '@/scopes/globals.js';\n\nimport { REQUEST_CONTENT_SAFE_AREA_METHOD } from '../../const.js';\n\n/**\n * Requests the actual viewport content safe area insets information.\n * @param options - request options.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @since Mini Apps v8.0\n * @example\n * if (requestContentSafeAreaInsets.isAvailable()) {\n *   const insets = await requestContentSafeAreaInsets();\n * }\n */\nexport const requestContentSafeAreaInsets = wrapSafe(\n  'requestContentSafeAreaInsets',\n  (options?: AsyncOptions) => request(REQUEST_CONTENT_SAFE_AREA_METHOD, 'content_safe_area_changed', options),\n  { isSupported: REQUEST_CONTENT_SAFE_AREA_METHOD },\n);\n","import type { AsyncOptions } from '@telegram-apps/bridge';\n\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\nimport { request } from '@/scopes/globals.js';\n\nimport { REQUEST_SAFE_AREA_METHOD } from '../../const.js';\n\n/**\n * Requests the actual viewport safe area insets information.\n * @param options - request options.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @since Mini Apps v8.0\n * @example\n * if (requestSafeAreaInsets.isAvailable()) {\n *   const insets = await requestSafeAreaInsets();\n * }\n */\nexport const requestSafeAreaInsets = wrapSafe(\n  'requestSafeAreaInsets',\n  (options?: AsyncOptions) => request(REQUEST_SAFE_AREA_METHOD, 'safe_area_changed', options),\n  { isSupported: REQUEST_SAFE_AREA_METHOD },\n);","import type { CancelablePromise, AsyncOptions } from '@telegram-apps/bridge';\n\nimport { request as _request } from '@/scopes/globals.js';\n\nexport interface RequestViewportResult {\n  height: number;\n  isExpanded: boolean;\n  isStable: boolean;\n  width: number;\n}\n\n/**\n * Requests viewport actual information from the Telegram application.\n * @param options - request options.\n * @example\n * if (requestViewport.isAvailable()) {\n *   const viewport = await requestViewport();\n * }\n */\nexport function requestViewport(options?: AsyncOptions): CancelablePromise<RequestViewportResult> {\n  return _request('web_app_request_viewport', 'viewport_changed', options).then(r => ({\n    height: r.height,\n    width: r.width,\n    isExpanded: r.is_expanded,\n    isStable: r.is_state_stable,\n  }));\n}\n","import type { EventListener } from '@telegram-apps/bridge';\n\nimport { setState } from '../../signals/state.js';\n\nexport const onViewportChanged: EventListener<'viewport_changed'> = (data) => {\n  const { height } = data;\n  setState({\n    isExpanded: data.is_expanded,\n    height,\n    width: data.width,\n    stableHeight: data.is_state_stable ? height : undefined,\n  });\n};\n\nexport const onFullscreenChanged: EventListener<'fullscreen_changed'> = (data) => {\n  setState({ isFullscreen: data.is_fullscreen });\n};\n\nexport const onSafeAreaChanged: EventListener<'safe_area_changed'> = (data) => {\n  setState({ safeAreaInsets: data });\n};\n\nexport const onContentSafeAreaChanged: EventListener<'content_safe_area_changed'> = (data) => {\n  setState({ contentSafeAreaInsets: data });\n};\n","import { isPageReload } from '@telegram-apps/navigation';\nimport { CancelablePromise, on, retrieveLaunchParams } from '@telegram-apps/bridge';\n\nimport { createMountFn } from '@/scopes/createMountFn.js';\n\nimport { wrapBasic } from '../wrappers.js';\nimport {\n  COMPONENT_NAME,\n  CSA_CHANGED_EVENT,\n  FS_CHANGED_EVENT,\n  SA_CHANGED_EVENT,\n  VIEWPORT_CHANGED_EVENT\n} from '../../const.js';\nimport { isMounted, mountPromise, mountError } from '../../signals/mounting.js';\nimport { getStateFromStorage, setState } from '../../signals/state.js';\nimport { safeAreaInsets } from '../../signals/safe-area-insets.js';\nimport { contentSafeAreaInsets } from '../../signals/content-safe-area-insets.js';\nimport { requestContentSafeAreaInsets } from '../static/requestContentSafeAreaInsets.js';\nimport { requestSafeAreaInsets } from '../static/requestSafeAreaInsets.js';\nimport { requestViewport } from '../static/requestViewport.js';\nimport type { State } from '../../types.js';\n\nimport { onContentSafeAreaChanged, onFullscreenChanged, onSafeAreaChanged, onViewportChanged } from './shared.js';\n\n/**\n * Mounts the Viewport component.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_ALREADY_MOUNTING\n * @example\n * if (mount.isAvailable() && !isMounting()) {\n *   await mount();\n * }\n */\nexport const mount = wrapBasic('mount', createMountFn<State>(\n  COMPONENT_NAME,\n  (options) => {\n    return CancelablePromise.resolve().then(async () => {\n      // Try to restore the state using the storage.\n      const s = isPageReload() && getStateFromStorage();\n      if (s) {\n        return s;\n      }\n\n      // Request all insets.\n      const [\n        retrievedSafeAreaInsets,\n        retrievedContentSafeAreaInsets,\n      ] = await CancelablePromise.all([\n        requestSafeAreaInsets.ifAvailable(options) || safeAreaInsets(),\n        requestContentSafeAreaInsets.ifAvailable(options) || contentSafeAreaInsets(),\n      ]);\n\n      // If the platform has a stable viewport, it means we could use the window global object\n      // properties.\n      const lp = retrieveLaunchParams();\n      const shared = {\n        contentSafeAreaInsets: retrievedContentSafeAreaInsets,\n        isFullscreen: !!lp.fullscreen,\n        safeAreaInsets: retrievedSafeAreaInsets,\n      };\n      if (['macos', 'tdesktop', 'unigram', 'webk', 'weba', 'web'].includes(lp.platform)) {\n        const w = window;\n        return {\n          ...shared,\n          height: w.innerHeight,\n          isExpanded: true,\n          stableHeight: w.innerHeight,\n          width: w.innerWidth,\n        };\n      }\n\n      // We were unable to retrieve data locally. In this case, we are\n      // sending a request returning the viewport information.\n      return requestViewport(options).then(data => ({\n        ...shared,\n        height: data.height,\n        isExpanded: data.isExpanded,\n        stableHeight: data.isStable ? data.height : 0,\n        width: data.width,\n      }));\n    });\n  },\n  (result) => {\n    on(VIEWPORT_CHANGED_EVENT, onViewportChanged);\n    on(FS_CHANGED_EVENT, onFullscreenChanged);\n    on(SA_CHANGED_EVENT, onSafeAreaChanged);\n    on(CSA_CHANGED_EVENT, onContentSafeAreaChanged);\n    setState(result);\n  },\n  isMounted,\n  mountPromise,\n  mountError,\n));\n","import { off } from '@telegram-apps/bridge';\n\nimport { CSA_CHANGED_EVENT, FS_CHANGED_EVENT, SA_CHANGED_EVENT, VIEWPORT_CHANGED_EVENT } from '../../const.js';\nimport { isMounted, mountPromise } from '../../signals/mounting.js';\n\nimport { onContentSafeAreaChanged, onFullscreenChanged, onSafeAreaChanged, onViewportChanged } from './shared.js';\n\n/**\n * Unmounts the Viewport.\n */\nexport function unmount(): void {\n  // Cancel mount promise.\n  const promise = mountPromise();\n  promise && promise.cancel();\n\n  // TODO: Cancel all promises?\n\n  // Remove event listeners.\n  off(VIEWPORT_CHANGED_EVENT, onViewportChanged);\n  off(FS_CHANGED_EVENT, onFullscreenChanged);\n  off(SA_CHANGED_EVENT, onSafeAreaChanged);\n  off(CSA_CHANGED_EVENT, onContentSafeAreaChanged);\n\n  // Drop the mount flag.\n  isMounted.set(false);\n}","import { signal } from '@telegram-apps/signals';\n\n/**\n * True if CSS variables are currently bound.\n */\nexport const isCssVarsBound = signal(false);","import { signalFromState } from './state.js';\n\n/**\n * Signal containing the current height of the **visible area** of the Mini App.\n *\n * The application can display just the top part of the Mini App, with its\n * lower part remaining outside the screen area. From this position, the user\n * can \"pull\" the Mini App to its maximum height, while the bot can do the same\n * by calling `expand` method. As the position of the Mini App changes, the\n * current height value of the visible area will be updated  in real time.\n *\n * Please note that the refresh rate of this value is not sufficient to\n * smoothly follow the lower border of the window. It should not be used to pin\n * interface elements to the bottom of the visible area. It's more appropriate\n * to use the value of the `stableHeight` field for this purpose.\n *\n * @see stableHeight\n */\nexport const height = signalFromState('height');\n\n/**\n * Signal containing the height of the visible area of the Mini App in its last stable state.\n *\n * The application can display just the top part of the Mini App, with its\n * lower part remaining outside the screen area. From this position, the user\n * can \"pull\" the Mini App to its maximum height, while the application can do\n * the same by calling `expand` method.\n *\n * Unlike the value of `height`, the value of `stableHeight` does not change as\n * the position of the Mini App changes with user gestures or during\n * animations. The value of `stableHeight` will be updated after all gestures\n * and animations are completed and the Mini App reaches its final size.\n *\n * @see height\n */\nexport const stableHeight = signalFromState('stableHeight');\n\n/**\n * Signal containing the currently visible area width.\n */\nexport const width = signalFromState('width');\n","import { camelToKebab, deleteCssVar, setCssVar } from '@telegram-apps/bridge';\n\nimport { throwCssVarsBound } from '@/scopes/toolkit/throwCssVarsBound.js';\n\nimport { isCssVarsBound } from '../signals/css-vars.js';\nimport { height, width, stableHeight } from '../signals/dimensions.js';\nimport {\n  safeAreaInsetBottom,\n  safeAreaInsetTop,\n  safeAreaInsetRight,\n  safeAreaInsetLeft,\n} from '../signals/safe-area-insets.js';\nimport {\n  contentSafeAreaInsetBottom,\n  contentSafeAreaInsetTop,\n  contentSafeAreaInsetRight,\n  contentSafeAreaInsetLeft,\n} from '../signals/content-safe-area-insets.js';\n\nimport { wrapMounted } from './wrappers.js';\nimport type { GetCSSVarNameFn } from '../types.js';\n\n/**\n * Creates CSS variables connected with the current viewport.\n *\n * By default, created CSS variables names are following the pattern\n * \"--tg-theme-{name}\", where\n * {name} is a theme parameters key name converted from camel case to kebab\n * case.\n *\n * Default variables:\n * - `--tg-viewport-height`\n * - `--tg-viewport-width`\n * - `--tg-viewport-stable-height`\n * - `--tg-viewport-content-safe-area-inset-top`\n * - `--tg-viewport-content-safe-area-inset-bottom`\n * - `--tg-viewport-content-safe-area-inset-left`\n * - `--tg-viewport-content-safe-area-inset-right`\n * - `--tg-viewport-safe-area-inset-top`\n * - `--tg-viewport-safe-area-inset-bottom`\n * - `--tg-viewport-safe-area-inset-left`\n * - `--tg-viewport-safe-area-inset-right`\n *\n * Variables are being automatically updated if the viewport was changed.\n *\n * @param getCSSVarName - function, returning computed complete CSS variable name. The CSS\n * variable will only be defined if the function returned non-empty string value.\n * @returns Function to stop updating variables.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_VARS_ALREADY_BOUND\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example Using no arguments\n * if (bindCssVars.isAvailable()) {\n *   bindCssVars();\n * }\n * @example Using custom CSS vars generator\n * if (bindCssVars.isAvailable()) {\n *   bindCssVars(key => `--my-prefix-${key}`);\n * }\n */\nexport const bindCssVars = wrapMounted(\n  'bindCssVars',\n  (getCSSVarName?: GetCSSVarNameFn): VoidFunction => {\n    isCssVarsBound() && throwCssVarsBound();\n\n    getCSSVarName ||= (prop) => `--tg-viewport-${camelToKebab(prop)}`;\n\n    const settings = ([\n      ['height', height],\n      ['stableHeight', stableHeight],\n      ['width', width],\n      ['safeAreaInsetTop', safeAreaInsetTop],\n      ['safeAreaInsetBottom', safeAreaInsetBottom],\n      ['safeAreaInsetLeft', safeAreaInsetLeft],\n      ['safeAreaInsetRight', safeAreaInsetRight],\n      ['contentSafeAreaInsetTop', contentSafeAreaInsetTop],\n      ['contentSafeAreaInsetBottom', contentSafeAreaInsetBottom],\n      ['contentSafeAreaInsetLeft', contentSafeAreaInsetLeft],\n      ['contentSafeAreaInsetRight', contentSafeAreaInsetRight],\n    ] as const).reduce<[\n      update: VoidFunction,\n      removeListener: VoidFunction,\n      cssVar: string\n    ][]>((acc, [key, signal]) => {\n      const cssVar = getCSSVarName(key);\n      if (cssVar) {\n        const update = () => {\n          setCssVar(cssVar, `${signal()}px`);\n        };\n        acc.push([update, signal.sub(update), cssVar]);\n      }\n      return acc;\n    }, []);\n\n    // Instantly set CSS variables.\n    settings.forEach(setting => {\n      setting[0]();\n    });\n    isCssVarsBound.set(true);\n\n    return () => {\n      settings.forEach(s => {\n        // Remove update listener.\n        s[1]();\n        // Remove CSS variable.\n        deleteCssVar(s[2]);\n      });\n      isCssVarsBound.set(false);\n    };\n  },\n);","import { postEvent } from '@/scopes/globals.js';\n\nimport { wrapBasic } from './wrappers.js';\n\n/**\n * A method that expands the Mini App to the maximum available height. To find\n * out if the Mini App is expanded to the maximum height, refer to the value of\n * the `isExpanded`.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @see isExpanded\n * @example\n * if (expand.isAvailable()) {\n *   expand();\n * }\n */\nexport const expand = wrapBasic('expand', (): void => {\n  postEvent('web_app_expand');\n});\n","import { computed } from '@telegram-apps/signals';\n\nimport { signalFromState } from './state.js';\nimport { height, stableHeight } from './dimensions.js';\n\n/**\n * Signal indicating if the Mini App is expanded to the maximum available height. Otherwise,\n * if the Mini App occupies part of the screen and can be expanded to the full\n * height using `expand` method.\n * @see expand\n */\nexport const isExpanded = signalFromState('isExpanded');\n\n/**\n * Signal indicating if the current viewport height is stable and is not going to change in\n * the next moment.\n */\nexport const isStable = computed(() => height() === stableHeight());","import { computed, signal } from '@telegram-apps/signals';\nimport { type EmojiStatusAccessRequestedStatus, TypedError } from '@telegram-apps/bridge';\n\nimport { ERR_ALREADY_REQUESTING } from '@/errors.js';\nimport { request } from '@/scopes/globals.js';\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\nimport { signalifyAsyncFn } from '@/scopes/signalifyAsyncFn.js';\n\nconst METHOD = 'web_app_request_emoji_status_access';\n\n/**\n * Signal containing the emoji status access request promise.\n */\nexport const requestEmojiStatusAccessPromise = signal<Promise<EmojiStatusAccessRequestedStatus> | undefined>();\n\n/**\n * Signal containing the last emoji status access request error.\n */\nexport const requestEmojiStatusAccessError = signal<Error | undefined>();\n\n/**\n * Signal indicating if the emoji status access is currently being requested.\n */\nexport const isRequestingEmojiStatusAccess = computed(() => !!requestEmojiStatusAccessPromise());\n\n/**\n * Shows a native popup requesting permission for the bot to manage user's emoji status.\n * @param options - additional options.\n * @since Mini Apps v8.0\n * @throws {TypedError} ERR_ALREADY_REQUESTING\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (requestEmojiStatusAccess.isAvailable()) {\n *   const status = await requestEmojiStatusAccess();\n * }\n */\nexport const requestEmojiStatusAccess = wrapSafe(\n  'requestEmojiStatusAccess',\n  signalifyAsyncFn(\n    (): Promise<EmojiStatusAccessRequestedStatus> => {\n      return request(METHOD, 'emoji_status_access_requested')\n        .then(r => r.status);\n    },\n    () => new TypedError(\n      ERR_ALREADY_REQUESTING,\n      'Emoji status access request is currently in progress',\n    ),\n    requestEmojiStatusAccessPromise,\n    requestEmojiStatusAccessError,\n    false,\n  ),\n  { isSupported: METHOD },\n);","import { computed, signal } from '@telegram-apps/signals';\nimport { TypedError } from '@telegram-apps/bridge';\n\nimport { ERR_ALREADY_REQUESTING, ERR_EMOJI_STATUS_SET_FAILED } from '@/errors.js';\nimport { request } from '@/scopes/globals.js';\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\nimport { signalifyAsyncFn } from '@/scopes/signalifyAsyncFn.js';\n\nconst METHOD = 'web_app_set_emoji_status';\n\n/**\n * Signal containing the emoji status access request promise.\n */\nexport const setEmojiStatusPromise = signal<Promise<void> | undefined>();\n\n/**\n * Signal containing the last emoji status access request error.\n */\nexport const setEmojiStatusError = signal<Error | undefined>();\n\n/**\n * Signal indicating if the emoji status set is currently being requested.\n */\nexport const isSettingEmojiStatus = computed(() => !!setEmojiStatusPromise());\n\n/**\n * Opens a dialog allowing the user to set the specified custom emoji as their status.\n * @returns Promise with boolean value indicating if the status was set.\n * @param options - additional options.\n * @since Mini Apps v8.0\n * @throws {TypedError} ERR_ALREADY_REQUESTING\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (setEmojiStatus.isAvailable()) {\n *   const statusSet = await setEmojiStatus('5361800828313167608');\n * }\n */\nexport const setEmojiStatus = wrapSafe(\n  'setEmojiStatus',\n  signalifyAsyncFn(\n    async (customEmojiId: string, duration?: number): Promise<void> => {\n      const result = await request(METHOD, ['emoji_status_set', 'emoji_status_failed'], {\n        params: {\n          custom_emoji_id: customEmojiId,\n          duration,\n        },\n      });\n\n      if (result && 'error' in result) {\n        throw new TypedError(ERR_EMOJI_STATUS_SET_FAILED, 'Failed to set emoji status', result.error);\n      }\n    },\n    () => new TypedError(\n      ERR_ALREADY_REQUESTING,\n      'Emoji status set request is currently in progress',\n    ),\n    setEmojiStatusPromise,\n    setEmojiStatusError,\n    false,\n  ),\n  { isSupported: METHOD },\n);","import { type OpenLinkBrowser, TypedError } from '@telegram-apps/bridge';\n\nimport { createWrapBasic } from '@/scopes/toolkit/createWrapBasic.js';\nimport { ERR_INVALID_URL } from '@/errors.js';\nimport { postEvent } from '@/scopes/globals.js';\n\nexport interface OpenLinkOptions {\n  /**\n   * Attempts to use the instant view mode.\n   */\n  tryInstantView?: boolean;\n  /**\n   * A preferred browser to open the link in.\n   */\n  tryBrowser?: OpenLinkBrowser;\n}\n\nconst wrapBasic = createWrapBasic();\n\n/**\n * Opens a link.\n *\n * The Mini App will not be closed.\n *\n * Note that this method can be called only in response to the user\n * interaction with the Mini App interface (e.g. click inside the Mini App or on the main button).\n * @param url - URL to be opened.\n * @param options - additional options.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_INVALID_URL\n * @example\n * if (openLink.isAvailable()) {\n *   openLink('https://google.com', {\n *     tryInstantView: true,\n *     tryBrowser: 'chrome',\n *   });\n * }\n */\nexport const openLink = wrapBasic(\n  'openLink',\n  (url: string | URL, options?: OpenLinkOptions): void => {\n    if (typeof url === 'string') {\n      try {\n        url = new URL(url);\n      } catch (e) {\n        throw new TypedError(ERR_INVALID_URL, `\"${url.toString()}\" is invalid URL`, e);\n      }\n    }\n    options ||= {};\n    postEvent('web_app_open_link', {\n      url: url.toString(),\n      try_browser: options.tryBrowser,\n      try_instant_view: options.tryInstantView,\n    });\n  },\n);","import { supports, TypedError } from '@telegram-apps/bridge';\n\nimport { createWrapBasic } from '@/scopes/toolkit/createWrapBasic.js';\nimport { ERR_INVALID_URL } from '@/errors.js';\nimport { $version, postEvent } from '@/scopes/globals.js';\n\nconst OPEN_TG_LINK_METHOD = 'web_app_open_tg_link';\nconst wrapBasic = createWrapBasic();\n\n/**\n * Opens a Telegram link inside the Telegram app. The function expects passing a link in a full\n * format using the hostname \"t.me\".\n *\n * The Mini App will be closed.\n * @param url - URL to be opened.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_INVALID_URL\n * @example\n * if (openTelegramLink.isAvailable()) {\n *   openTelegramLink('https://t.me/heyqbnk');\n * }\n */\nexport const openTelegramLink = wrapBasic(\n  'openTelegramLink',\n  (url: string | URL): void => {\n    const urlString = url.toString();\n    if (!urlString.match(/^https:\\/\\/t.me\\/.+/)) {\n      throw new TypedError(ERR_INVALID_URL, `\"${urlString}\" is invalid URL`);\n    }\n\n    if (!supports(OPEN_TG_LINK_METHOD, $version())) {\n      window.location.href = urlString;\n      return;\n    }\n\n    url = new URL(url);\n    postEvent(OPEN_TG_LINK_METHOD, { path_full: url.pathname + url.search });\n  },\n);","import { createWrapBasic } from '@/scopes/toolkit/createWrapBasic.js';\nimport { openTelegramLink } from '@/scopes/utilities/links/openTelegramLink.js';\n\nconst wrapBasic = createWrapBasic();\n\n/**\n * Shares the specified URL with the passed to the chats, selected by user.\n * After being called, it closes the mini application.\n *\n * This method uses Telegram's Share Links.\n * @param url - URL to share.\n * @param text - text to append after the URL.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @see https://core.telegram.org/api/links#share-links\n * @see https://core.telegram.org/widgets/share#custom-buttons\n */\nexport const shareURL = wrapBasic(\n  'shareURL',\n  (url: string, text?: string): void => {\n    openTelegramLink(\n      `https://t.me/share/url?` + new URLSearchParams({ url, text: text || '' })\n        .toString()\n        // By default, URL search params encode spaces with \"+\".\n        // We are replacing them with \"%20\", because plus symbols are working incorrectly\n        // in Telegram.\n        .replace(/\\+/g, '%20'),\n    );\n  },\n);\n","import { signal } from '@telegram-apps/signals';\nimport { type AsyncOptions, type PhoneRequestedStatus, TypedError } from '@telegram-apps/bridge';\n\nimport { ERR_ALREADY_REQUESTING } from '@/errors.js';\nimport { request } from '@/scopes/globals.js';\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\n\nexport const REQUEST_PHONE_METHOD = 'web_app_request_phone';\n\n/**\n * Signal indicating if phone access is currently being requested.\n */\nexport const isRequestingPhoneAccess = signal(false);\n\n/**\n * Requests current user phone access. Method returns promise, which resolves\n * status of the request. In case, user accepted the request, Mini App bot will receive\n * the according notification.\n *\n * To obtain the retrieved information instead, utilize the `requestContact` method.\n * @param options - additional options.\n * @since Mini Apps v6.9\n * @see requestContact\n * @throws {TypedError} ERR_ALREADY_REQUESTING\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (requestPhoneAccess.isAvailable()) {\n *   const status = await requestPhoneAccess();\n * }\n */\nexport const requestPhoneAccess = wrapSafe(\n  'requestPhoneAccess',\n  (options?: AsyncOptions): Promise<PhoneRequestedStatus> => {\n    if (isRequestingPhoneAccess()) {\n      throw new TypedError(ERR_ALREADY_REQUESTING, 'Phone access request is currently in progress');\n    }\n    isRequestingPhoneAccess.set(true);\n\n    return request(REQUEST_PHONE_METHOD, 'phone_requested', options)\n      .then(r => r.status)\n      .finally(() => {\n        isRequestingPhoneAccess.set(false);\n      });\n  },\n  {\n    isSupported: REQUEST_PHONE_METHOD,\n  },\n);","import {\n  type AsyncOptions,\n  CancelablePromise,\n  sleep,\n  TypedError,\n} from '@telegram-apps/bridge';\nimport { date, number, object, searchParams, string } from '@telegram-apps/transformers';\n\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\nimport { invokeCustomMethod } from '@/scopes/globals.js';\nimport { ERR_ACCESS_DENIED } from '@/errors.js';\n\nimport { REQUEST_PHONE_METHOD, requestPhoneAccess } from './requestPhoneAccess.js';\n\n/**\n * Requested contact information.\n */\nexport interface RequestedContact {\n  contact: {\n    userId: number;\n    phoneNumber: string;\n    firstName: string;\n    lastName?: string;\n  };\n  authDate: Date;\n  hash: string;\n}\n\n/**\n * Attempts to get requested contact.\n * @param options - execution options.\n * @throws {TypedError} ERR_CUSTOM_METHOD_ERR_RESPONSE\n */\nfunction getRequestedContact(options?: AsyncOptions): CancelablePromise<RequestedContact> {\n  options ||= {};\n  return invokeCustomMethod('getRequestedContact', {}, {\n    ...options,\n    timeout: options.timeout || 5000,\n  })\n    .then(\n      searchParams({\n        contact: object({\n          userId: ['user_id', number()],\n          phoneNumber: ['phone_number', string()],\n          firstName: ['first_name', string()],\n          lastName: ['last_name', string(true)],\n        })(),\n        authDate: ['auth_date', date()],\n        hash: string(),\n      })(),\n    );\n}\n\n/**\n * Requests current user contact information. In contrary to requestPhoneAccess, this method\n * returns promise with contact information that rejects in case, user denied access, or request\n * failed.\n * @param options - additional options.\n * @since Mini Apps v6.9\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_ACCESS_DENIED\n * @throws {TypedError} ERR_CUSTOM_METHOD_ERR_RESPONSE\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (requestContact.isAvailable()) {\n *   const contact = await requestContact();\n * }\n */\nexport const requestContact = wrapSafe(\n  'requestContact',\n  (options?: AsyncOptions): CancelablePromise<RequestedContact> => {\n    return CancelablePromise.withFn(\n      async (abortSignal) => {\n        const asyncOptions = { abortSignal };\n\n        // First of all, let's try to get the requested contact.\n        // Probably, we already requested it before.\n        try {\n          return await getRequestedContact(asyncOptions);\n        } catch {\n        }\n\n        // Then, request access to the user's phone.\n        const status = await requestPhoneAccess(asyncOptions);\n        if (status !== 'sent') {\n          throw new TypedError(ERR_ACCESS_DENIED, 'User denied access');\n        }\n\n        // Time to wait before executing the next request.\n        let sleepTime = 50;\n\n        // We are trying to retrieve the requested contact until the deadline was reached.\n        while (!abortSignal.aborted) {\n          try {\n            return await getRequestedContact(asyncOptions);\n          } catch {\n          }\n\n          // Sleep for some time.\n          await sleep(sleepTime);\n\n          // Increase the sleep time not to kill the backend service.\n          sleepTime += 50;\n        }\n\n        // Reachable code, but the promise will be rejected and this result will be\n        // ignored.\n        return null as any;\n      }, options,\n    );\n  },\n  {\n    isSupported: REQUEST_PHONE_METHOD,\n  },\n);","import {\n  TypedError,\n  type WriteAccessRequestedStatus,\n  type AsyncOptions,\n} from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\n\nimport { request } from '@/scopes/globals.js';\nimport { ERR_ALREADY_REQUESTING } from '@/errors.js';\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\n\nconst REQUEST_WRITE_ACCESS_METHOD = 'web_app_request_write_access';\n\n/**\n * Signal indicating if write access is currently being requested.\n */\nexport const isRequestingWriteAccess = signal(false);\n\n/**\n * Requests write message access to the current user.\n * @param options - additional options.\n * @since Mini Apps v6.9\n * @throws {TypedError} ERR_ALREADY_REQUESTING\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (requestWriteAccess.isAvailable()) {\n *   const status = await requestWriteAccess();\n * }\n */\nexport const requestWriteAccess = wrapSafe(\n  'requestWriteAccess',\n  (options?: AsyncOptions): Promise<WriteAccessRequestedStatus> => {\n    if (isRequestingWriteAccess()) {\n      throw new TypedError(ERR_ALREADY_REQUESTING, 'Write access request is currently in progress');\n    }\n    isRequestingWriteAccess.set(true);\n\n    return request(REQUEST_WRITE_ACCESS_METHOD, 'write_access_requested', options)\n      .then(r => r.status)\n      .finally(() => {\n        isRequestingWriteAccess.set(false);\n      });\n  },\n  {\n    isSupported: REQUEST_WRITE_ACCESS_METHOD,\n  },\n);\n","import type { AsyncOptions, CancelablePromise } from '@telegram-apps/bridge';\nimport { date } from '@telegram-apps/transformers';\n\nimport { invokeCustomMethod } from '@/scopes/globals.js';\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\n\n/**\n * @returns Current server time.\n * @param options - execution options.\n */\nexport const getCurrentTime = wrapSafe(\n  'getCurrentTime',\n  (options?: AsyncOptions): CancelablePromise<Date> => {\n    return invokeCustomMethod('getCurrentTime', {}, options).then(date());\n  },\n  {\n    isSupported: 'web_app_invoke_custom_method',\n  },\n);","import { type AsyncOptions, type CancelablePromise, captureSameReq } from '@telegram-apps/bridge';\n\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\nimport { createRequestId, request } from '@/scopes/globals.js';\n\nconst READ_CLIPBOARD_METHOD = 'web_app_read_text_from_clipboard';\n\n/**\n * Reads a text from the clipboard and returns a `string` or `null`. `null` is returned\n * in cases:\n * - A value in the clipboard is not a text.\n * - Access to the clipboard is not granted.\n * @since Mini Apps v6.4\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (readTextFromClipboard.isAvailable()) {\n *   const value = await readTextFromClipboard();\n * }\n */\nexport const readTextFromClipboard = wrapSafe(\n  'readTextFromClipboard',\n  (options?: AsyncOptions): CancelablePromise<string | null> => {\n    const reqId = createRequestId();\n\n    return request(READ_CLIPBOARD_METHOD, 'clipboard_text_received', {\n      ...options,\n      params: { req_id: reqId },\n      capture: captureSameReq(reqId),\n    }).then(({ data = null }) => data);\n  },\n  {\n    isSupported: READ_CLIPBOARD_METHOD,\n  },\n);","import { TypedError } from '@telegram-apps/bridge';\n\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\nimport { ERR_DATA_INVALID_SIZE } from '@/errors.js';\nimport { postEvent } from '@/scopes/globals.js';\n\n/**\n * Sends data to the bot.\n *\n * When this method called, a service message sent to the bot containing the data of the length\n * up to 4096 bytes, and the Mini App closed.\n *\n * See the field `web_app_data` in the class [Message](https://core.telegram.org/bots/api#message).\n *\n * This method is only available for Mini Apps launched via a Keyboard button.\n * @param data - data to send to bot.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_DATA_INVALID_SIZE\n * @example\n * if (sendData.isAvailable()) {\n *   sendData('Here comes my data');\n * }\n */\nexport const sendData = wrapSafe(\n  'sendData',\n  (data: string): void => {\n    const { size } = new Blob([data]);\n    if (!size || size > 4096) {\n      throw new TypedError(ERR_DATA_INVALID_SIZE, size\n        ? 'Maximum size of data to send is 4096 bytes'\n        : 'Attempted to send empty data');\n    }\n    postEvent('web_app_data_send', { data });\n  },\n);","import { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\nimport { postEvent } from '@/scopes/globals.js';\n\nconst SHARE_STORY_METHOD = 'web_app_share_to_story';\n\nexport interface ShareStoryOptions {\n  /**\n   * The caption to be added to the media.\n   * 0-200 characters for regular users and 0-2048 characters for premium subscribers.\n   * @see https://telegram.org/faq_premium#telegram-premium\n   */\n  text?: string;\n  /**\n   * An object that describes a widget link to be included in the story.\n   * Note that only premium subscribers can post stories with links.\n   * @see https://telegram.org/faq_premium#telegram-premium\n   */\n  widgetLink?: {\n    /**\n     * The URL to be included in the story.\n     */\n    url: string;\n    /**\n     * The name to be displayed for the widget link, 0-48 characters.\n     */\n    name?: string;\n  };\n}\n\n/**\n * Opens the native story editor.\n * @since Mini Apps v7.8\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example\n * if (shareStory.isAvailable()) {\n *   shareStory('https://example.com/background.png', {\n *     text: 'Look at this cool group!',\n *     widgetLink: {\n *       url: 'https://t.me/heyqbnk',\n *       name: 'Vlad\\'s community',\n *     },\n *   });\n * }\n */\nexport const shareStory = wrapSafe(\n  'shareStory',\n  (mediaUrl: string, options?: ShareStoryOptions) => {\n    options ||= {};\n    postEvent(SHARE_STORY_METHOD, {\n      text: options.text,\n      media_url: mediaUrl,\n      widget_link: options.widgetLink,\n    });\n  },\n  { isSupported: SHARE_STORY_METHOD },\n);","import { retrieveLaunchParams, type SwitchInlineQueryChatType } from '@telegram-apps/bridge';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\n\nconst SWITCH_INLINE_QUERY_METHOD = 'web_app_switch_inline_query';\n\n/**\n * Inserts the bot's username and the specified inline query in the current chat's input field.\n * Query may be empty, in which case only the bot's username will be inserted. The client prompts\n * the user to choose a specific chat, then opens that chat and inserts the bot's username and\n * the specified inline query in the input field.\n * @param query - text which should be inserted in the input after the current bot name. Max\n * length is 256 symbols.\n * @param chatTypes - List of chat types which could be chosen to send the message. Could be an\n * empty list.\n * @since Mini Apps v6.7\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example\n * if (switchInlineQuery.isAvailable()) {\n *   switchInlineQuery('my query goes here', ['users']);\n * }\n */\nexport const switchInlineQuery = wrapSafe(\n  'switchInlineQuery',\n  (query: string, chatTypes?: SwitchInlineQueryChatType[]) => {\n    postEvent(SWITCH_INLINE_QUERY_METHOD, {\n      query: query,\n      chat_types: chatTypes || [],\n    });\n  },\n  {\n    isSupported: [SWITCH_INLINE_QUERY_METHOD, {\n      fn: () => !!retrieveLaunchParams().botInline,\n      error: 'Mini App should be ran in Bot inline mode',\n    }],\n  },\n);\n","export type SafeCallResult<T, E> =\n  | { result: T }\n  | { error: E }\n\n/**\n * Calls the function and prevents it from throwing error. It returns an object\n * with one of two properties: `result` or `error`.\n *\n * You can use this function to safely execute any other function.\n * @param fn - function to call.\n */\nexport function safeCall<T, E = unknown>(fn: () => T): SafeCallResult<T, E> {\n  try {\n    return { result: fn() };\n  } catch (error) {\n    return { error: error as E };\n  }\n}\n","import {\n  createCbCollector,\n  defineEventHandlers,\n  on,\n  removeEventHandlers,\n} from '@telegram-apps/bridge';\n\nimport { postEvent, configure, type ConfigureOptions } from '@/scopes/globals.js';\n\nexport interface InitOptions extends ConfigureOptions {\n  /**\n   * True if SDK should accept styles sent from the Telegram application.\n   * @default true\n   */\n  acceptCustomStyles?: boolean;\n}\n\n/**\n * Initializes the SDK allowing it to properly handle events, sent from the native Telegram\n * application.\n * @param options - function options.\n * @returns A function, to perform a cleanup.\n */\nexport function init(options?: InitOptions): VoidFunction {\n  // Configure the package global dependencies.\n  configure(options);\n\n  // Define event handlers, so we could receive the events from the Telegram application.\n  defineEventHandlers();\n\n  const [addCleanup, cleanup] = createCbCollector(\n    on('reload_iframe', () => {\n      postEvent('iframe_will_reload');\n      window.location.reload();\n    }),\n    removeEventHandlers,\n  );\n\n  const { acceptCustomStyles = true } = options || {};\n  if (acceptCustomStyles) {\n    const style = document.createElement('style');\n    style.id = 'telegram-custom-styles';\n    document.head.appendChild(style);\n\n    addCleanup(\n      on('set_custom_style', html => {\n        // It is safe to use innerHTML here as long as style tag has a special behavior related\n        // to the specified content.\n        // In case any script will be passed here, it will not be executed, so XSS is not possible.\n        style.innerHTML = html;\n      }),\n      () => {\n        document.head.removeChild(style);\n      },\n    );\n  }\n\n  // Notify Telegram that the application is ready.\n  //\n  // This will result in sending style tag html content from the Telegram web application.\n  // We should call this method also to start receiving \"reload_iframe\" events from the Telegram\n  // application.\n  //\n  // It really has no effect outside non-Telegram web environment.\n  postEvent('iframe_ready', { reload_supported: true });\n\n  return cleanup;\n}"],"names":["u","e","r","n","h","t","S","w","D","W","d","A","o","c","s","P","i","m","p","E","f","g","U","R","l","N","O","_","C","T","b","y","$","L","B","classNames","values","value","isRecord","entry","mergeClassNames","partials","acc","partial","key","className","G","we","he","me","de","K","V","a","Z","Ee","z","j","ye","ve","Pe","Re","Te","I","Ae","Se","X","Y","$e","Ce","Q","Ne","De","je","ee","te","k","Ue","ne","re","oe","M","rt","ot","st","F","ge","J","at","se","We","xe","ct","ke","pt","ft","Le","Oe","ae","qe","Ie","Me","ce","v","ie","Fe","Je","Be","He","Ge","Ke","ue","pe","fe","q","_e","Ve","Ze","ze","Xe","le","be","Ye","_t","x","Qe","lt","bt","gt","wt","ht","mt","et","tt","H","dt","Et","$createRequestId","signal","requestId","$postEvent","_postEvent","$version","configure","options","optionsPostEvent","retrieveLaunchParams","createPostEvent","createRequestId","invokeCustomMethod","method","params","_invokeCustomMethod","postEvent","request","eventOrEvents","_request","createIsSupported","computed","supports","ERR_POPUP_INVALID_PARAMS","ERR_INVALID_URL","ERR_INVALID_SLUG","ERR_DATA_INVALID_SIZE","ERR_ACCESS_DENIED","ERR_ALREADY_REQUESTING","ERR_ALREADY_OPENED","ERR_ALREADY_MOUNTING","ERR_CSS_VARS_ALREADY_BOUND","ERR_NOT_AVAILABLE","ERR_NOT_INITIALIZED","ERR_NOT_SUPPORTED","ERR_NOT_MOUNTED","ERR_FULLSCREEN_FAILED","ERR_EMOJI_STATUS_SET_FAILED","isSSR","wrapSafe","fn","isSupported","isMounted","component","supportsOption","fullName","isOptionSupported","option","tuple","supportError","defaultErr","getError","item","err","lastErr","supportsOptionError","args","$isSupported","$isInitialized","$isMounted","$isAvailable","isTMA","supportsMap","errMessagePrefix","TypedError","ERR_UNKNOWN_ENV","supportErr","supportsOptionErr","createWrapSafe","overrideIsSupported","createWrapComplete","createWrapSupported","SETUP_METHOD_NAME","CLICK_EVENT_NAME","COMPONENT_NAME","isVisible","wrapComplete","wrapSupported","hide","setVisibility","mount","isPageReload","getStorageValue","setStorageValue","onClick","on","offClick","off","show","unmount","signalifyAsyncFn","createPendingError","promise","error","cancelable","PromiseConstructor","CancelablePromise","batch","result","createMountFn","onMounted","noConcurrent","createWrapBasic","state","isAuthenticating","isRequestingAccess","isMounting","mountPromise","mountError","isAvailable","eventToState","event","GET_INFO_METHOD","requestBiometry","REQUEST_AUTH_METHOD","REQUEST_ACCESS_METHOD","OPEN_SETTINGS_METHOD","UPDATE_TOKEN_METHOD","INFO_RECEIVED_EVENT","wrapBasic","throwNotAvailable","authenticate","abortSignal","response","token","setState","openSettings","requestAccess","info","onBiometryInfoReceived","updateToken","createWrapMounted","isConfirmationEnabled","wrapMounted","disableConfirmation","setClosingConfirmation","enableConfirmation","INVOKE_METHOD_NAME","deleteItem","keyOrKeys","keys","_getItem","data","object","string","getItem","getKeys","array","setItem","HAPTIC_METHOD_NAME","impactOccurred","style","notificationOccurred","type","selectionChanged","fromState","authDate","canSendAfter","canSendAfterDate","authDateValue","canSendAfterValue","chat","chatType","chatInstance","hash","queryId","raw","receiver","restore","lp","startParam","user","parseInitData","initData","OPEN_METHOD","isOpened","_open","urlOrSlug","optionsOrType","slug","hostname","pathname","match","open","removeUndefined","isColorDark","color","rgb","toRGB","modifier","idx","dec","isCssVarsBound","accentTextColor","backgroundColor","buttonColor","buttonTextColor","bottomBarBgColor","destructiveTextColor","headerBackgroundColor","hintColor","isDark","bgColor","linkColor","secondaryBackgroundColor","sectionBackgroundColor","sectionHeaderTextColor","sectionSeparatorColor","subtitleTextColor","textColor","internalState","hasShineEffect","isEnabled","isLoaderVisible","text","prev","setParams","updates","throwCssVarsBound","parseThemeParams","themeParams","THEME_CHANGED_EVENT","bindCssVars","getCSSVarName","prop","camelToKebab","forEachEntry","actualize","setCssVar","deleteCssVar","onThemeChanged","rgbBasedOn","isRGB","themeBgColor","themeSecondaryBgColor","backgroundColorRGB","bottomBarColor","bottomBarColorRGB","themeBottomBarBgColor","headerColor","headerColorRGB","SET_BG_COLOR_METHOD","SET_BOTTOM_BAR_COLOR_METHOD","SET_HEADER_COLOR_METHOD","isSupportedSchema","addCleanup","cleanup","createCbCollector","bind","cssVar","update","close","returnBack","tpMount","setBackgroundColor","setBottomBarColor","setHeaderColor","ready","saveState","prepareParams","message","title","buttons","id","buttonId","CLOSE_METHOD","CLOSED_EVENT","TEXT_RECEIVED_EVENT","onCaptured","capture","EnhancedPromise","position","isVerticalEnabled","disableVertical","setVerticalEnabled","enableVertical","force","REQUEST_FS_METHOD","FS_FAILED_EVENT","FS_CHANGED_EVENT","SA_CHANGED_EVENT","CSA_CHANGED_EVENT","VIEWPORT_CHANGED_EVENT","REQUEST_SAFE_AREA_METHOD","REQUEST_CONTENT_SAFE_AREA_METHOD","initialInsets","nonNegative","signalFromState","height","stableHeight","width","getStateFromStorage","isFullscreen","changeFullscreenPromise","isChangingFullscreen","changeFullscreenError","createFullscreenFn","requestMethod","requestFullscreen","exitFullscreen","safeAreaInsets","safeAreaInsetBottom","safeAreaInsetLeft","safeAreaInsetRight","safeAreaInsetTop","contentSafeAreaInsets","contentSafeAreaInsetBottom","contentSafeAreaInsetLeft","contentSafeAreaInsetRight","contentSafeAreaInsetTop","requestContentSafeAreaInsets","requestSafeAreaInsets","requestViewport","onViewportChanged","onFullscreenChanged","onSafeAreaChanged","onContentSafeAreaChanged","retrievedSafeAreaInsets","retrievedContentSafeAreaInsets","shared","settings","setting","expand","isExpanded","isStable","METHOD","requestEmojiStatusAccessPromise","requestEmojiStatusAccessError","isRequestingEmojiStatusAccess","requestEmojiStatusAccess","setEmojiStatusPromise","setEmojiStatusError","isSettingEmojiStatus","setEmojiStatus","customEmojiId","duration","openLink","url","OPEN_TG_LINK_METHOD","openTelegramLink","urlString","shareURL","REQUEST_PHONE_METHOD","isRequestingPhoneAccess","requestPhoneAccess","getRequestedContact","searchParams","number","date","requestContact","asyncOptions","sleepTime","sleep","REQUEST_WRITE_ACCESS_METHOD","isRequestingWriteAccess","requestWriteAccess","getCurrentTime","READ_CLIPBOARD_METHOD","readTextFromClipboard","reqId","captureSameReq","sendData","size","SHARE_STORY_METHOD","shareStory","mediaUrl","SWITCH_INLINE_QUERY_METHOD","switchInlineQuery","query","chatTypes","safeCall","init","defineEventHandlers","removeEventHandlers","acceptCustomStyles","html"],"mappings":"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"}